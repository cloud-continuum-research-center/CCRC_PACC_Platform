{"version":3,"file":"js/app.467b848c.js","mappings":"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","sources":["webpack://front-end/./src/examples/Sidenav/SidenavItem.vue","webpack://front-end/./src/examples/Sidenav/SidenavItem.vue?82de","webpack://front-end/./src/examples/Sidenav/SidenavList.vue","webpack://front-end/./src/examples/Sidenav/SidenavList.vue?2906","webpack://front-end/./src/examples/Sidenav/index.vue","webpack://front-end/./src/examples/Sidenav/index.vue?8849","webpack://front-end/./src/examples/Breadcrumbs.vue","webpack://front-end/./src/examples/Breadcrumbs.vue?a5b0","webpack://front-end/./src/examples/Navbars/Navbar.vue","webpack://front-end/./src/examples/Navbars/Navbar.vue?60ab","webpack://front-end/./src/examples/Footer.vue","webpack://front-end/./src/examples/Footer.vue?c8f1","webpack://front-end/./src/App.vue","webpack://front-end/./src/App.vue?7ccd","webpack://front-end/./src/store/index.js","webpack://front-end/./src/views/components/ProjectsList.vue","webpack://front-end/./src/views/components/ProjectsList.vue?6cb1","webpack://front-end/./src/views/Dashboard.vue","webpack://front-end/./src/views/Dashboard.vue?040e","webpack://front-end/./src/views/components/ModelSelector.vue","webpack://front-end/./src/views/components/ModelSelector.vue?f4ea","webpack://front-end/./src/views/components/DatasetSelector.vue","webpack://front-end/./src/views/components/DatasetSelector.vue?0188","webpack://front-end/./src/views/components/HyperparameterSelector.vue","webpack://front-end/./src/views/components/HyperparameterSelector.vue?afc5","webpack://front-end/./src/views/components/NodeSelector.vue","webpack://front-end/./src/views/components/NodeSelector.vue?5cc8","webpack://front-end/./src/views/Tables.vue","webpack://front-end/./src/views/Tables.vue?9749","webpack://front-end/./src/examples/PageLayout/Navbar.vue","webpack://front-end/./src/examples/PageLayout/Footer.vue","webpack://front-end/./src/examples/PageLayout/Footer.vue?e95e","webpack://front-end/./src/components/ArgonInput.vue","webpack://front-end/./src/components/ArgonInput.vue?1280","webpack://front-end/./src/components/ArgonButton.vue","webpack://front-end/./src/components/ArgonButton.vue?a94a","webpack://front-end/./src/views/Signup.vue","webpack://front-end/./src/views/Signup.vue?8cd8","webpack://front-end/./src/views/Signin.vue","webpack://front-end/./src/views/Signin.vue?39f5","webpack://front-end/./src/views/components/Monitoring.vue","webpack://front-end/./src/views/components/Monitoring.vue?ce86","webpack://front-end/./src/router/index.js","webpack://front-end/./src/argon-dashboard.js","webpack://front-end/./src/main.js","webpack://front-end/webpack/bootstrap","webpack://front-end/webpack/runtime/chunk loaded","webpack://front-end/webpack/runtime/compat get default export","webpack://front-end/webpack/runtime/define property getters","webpack://front-end/webpack/runtime/global","webpack://front-end/webpack/runtime/hasOwnProperty shorthand","webpack://front-end/webpack/runtime/make namespace object","webpack://front-end/webpack/runtime/publicPath","webpack://front-end/webpack/runtime/jsonp chunk loading","webpack://front-end/webpack/startup"],"sourcesContent":["<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst isRTL = computed(() => store.state.isRTL);\nconst sidebarMinimize = () => store.commit(\"sidebarMinimize\");\n\nconst minimizeSidebar = () => {\n  if (window.innerWidth < 1200) {\n    sidebarMinimize();\n  }\n};\n\ndefineProps({\n  to: {\n    type: String,\n    required: true,\n  },\n  navText: {\n    type: String,\n    required: true,\n  },\n});\n</script>\n<template>\n  <router-link :to=\"to\" class=\"nav-link\" @click=\"minimizeSidebar\">\n    <div\n      class=\"icon icon-shape icon-sm text-center d-flex align-items-center justify-content-center\"\n    >\n      <slot name=\"icon\"></slot>\n    </div>\n    <span class=\"nav-link-text\" :class=\"isRTL ? ' me-1' : 'ms-1'\">{{\n      navText\n    }}</span>\n  </router-link>\n</template>\n\n\n<style scoped>\n.nav-link {\n  padding: 0.5rem 1rem;\n  font-size: 1.5rem; /* 폰트 크기를 조금 더 크게 조정 */\n  color: #5e6777; /* 세련된 짙은 회색으로 변경 */\n  font-weight: 700; /* 글자 두껍게 */\n  letter-spacing: 0.05em; /* 글자 간격 넓게 */\n  border-radius: 0.375rem;\n  transition: all 0.15s ease;\n  display: flex;\n  align-items: center;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); /* 텍스트에 부드러운 그림자 추가 */\n}\n\n.nav-link span {\n  font-size: 1.2rem; /* 폰트 크기를 조금 더 크게 조정 */\n}\n\n.nav-link:hover {\n  color: #344675; /* 호버 시 색상 변경 */\n  background-color: #e3f2fd; /* 배경색도 약간 변경하여 피드백 강화 */\n  transform: translateY(-2px); /* 약간 위로 이동 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* 그림자 추가하여 더 돋보이게 */\n}\n\n</style>\n","import script from \"./SidenavItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SidenavItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SidenavItem.vue?vue&type=style&index=0&id=f9d7401a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f9d7401a\"]])\n\nexport default __exports__","<script setup>\nimport { computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nimport SidenavItem from \"./SidenavItem.vue\";\n\nconst store = useStore();\nconst isRTL = computed(() => store.state.isRTL);\n\nconst getRoute = () => {\n  const route = useRoute();\n  const routeArr = route.path.split(\"/\");\n  return routeArr[1];\n};\n</script>\n<template>\n  <div\n    class=\"collapse navbar-collapse w-auto h-auto h-100\"\n    id=\"sidenav-collapse-main\"\n  >\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <sidenav-item\n          to=\"/dashboard-default\"\n          :class=\"getRoute() === 'dashboard-default' ? 'active' : ''\"\n          :navText=\"isRTL ? 'لوحة القيادة' : '대시보드'\"\n        >\n          <template v-slot:icon>\n            <i class=\"ni ni-tv-2 text-primary text-sm opacity-10\"></i>\n          </template>\n        </sidenav-item>\n      </li>\n\n      <li class=\"nav-item\">\n        <sidenav-item\n          to=\"/tables\"\n          :class=\"getRoute() === 'tables' ? 'active' : ''\"\n          :navText=\"isRTL ? 'الجداول' : '학습 생성'\"\n        >\n          <template v-slot:icon>\n            <i\n              class=\"ni ni-calendar-grid-58 text-warning text-sm opacity-10\"\n            ></i>\n          </template>\n        </sidenav-item>\n      </li>\n\n       <li class=\"nav-item\">\n        <sidenav-item\n          to=\"/monitoring\"\n          :class=\"getRoute()\"\n          :navText=\"isRTL ? 'الجداول' : '모니터링 시스템'\"\n        >\n           <template v-slot:icon>\n      <!-- 아이콘 이미지를 추가합니다. -->\n      <img src=\"@/assets/img/monitoring.png\" alt=\"Monitoring Icon\" class=\"icon-img\">\n    </template>\n        </sidenav-item>\n      </li>\n\n\n    </ul>\n  </div>\n</template>\n\n<style scoped>\n.navbar-nav {\n  padding: 0;\n}\n.nav-item {\n  font-size: 1.875rem;\n  padding: 0;\n}\n</style>","import script from \"./SidenavList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SidenavList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SidenavList.vue?vue&type=style&index=0&id=c9ecff5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c9ecff5a\"]])\n\nexport default __exports__","<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport SidenavList from \"./SidenavList.vue\";\nimport logo from \"@/assets/img/logo-ct-dark.png\";\nimport logoWhite from \"@/assets/img/logo-ct.png\";\n\n// 위에 로고 경로 수정 하면 메인 화면 로고 변경됨.\n\nconst store = useStore();\nconst isRTL = computed(() => store.state.isRTL);\nconst layout = computed(() => store.state.layout);\nconst sidebarType = computed(() => store.state.sidebarType);\nconst darkMode = computed(() => store.state.darkMode);\n</script>\n<template>\n  <div\n    v-show=\"layout === 'default'\"\n    class=\"min-height-300 position-absolute w-100\"\n    :class=\"`${darkMode ? 'bg-transparent' : 'bg-success'}`\"\n  />\n\n  <aside\n    class=\"my-3 overflow-auto border-0 sidenav navbar navbar-vertical navbar-expand-xs border-radius-xl\"\n    :class=\"`${isRTL ? 'me-3 rotate-caret fixed-end' : 'fixed-start ms-3'}    \n      ${\n        layout === 'landing' ? 'bg-transparent shadow-none' : ' '\n      } ${sidebarType}`\"\n    id=\"sidenav-main\"\n  >\n    <div class=\"sidenav-header\">\n      <i\n        class=\"top-0 p-3 cursor-pointer fas fa-times text-secondary opacity-5 position-absolute end-0 d-none d-xl-none\"\n        aria-hidden=\"true\"\n        id=\"iconSidenav\"\n      ></i>\n\n      <span class=\"ms-2 font-weight-bold me-2\">PACC Platform</span>\n      <router-link class=\"m-0 navbar-brand\" to=\"/dashboard-default\">\n        <img\n          :src=\"darkMode || sidebarType === 'bg-default' ? logoWhite : logo\"\n          class=\"navbar-brand-img h-100\"\n          alt=\"main_logo\"\n        />\n      </router-link>\n    </div>\n\n    <hr class=\"mt-0 horizontal dark\" />\n\n    <sidenav-list />\n  </aside>\n</template>\n\n<style scoped>\n\n\n.top-0\n{\n  border: none; /* 테두리 없애기 */\n  border-radius: 0; /* 테두리 모서리를 직사각으로 만듦 */\n  margin: 0; /* 여백 없애기 */\n}\n\n.ms-2\n{\n  border: none; /* 테두리 없애기 */\n  border-radius: 0; /* 테두리 모서리를 직사각으로 만듦 */\n  margin-left: 20px !important; /* 왼쪽 여백을 0으로 설정 */\n}\n\n.my-3 {\n  border: none !important; /* 테두리 없애기 */\n  border-radius: 0 !important; /* 테두리 모서리를 직사각으로 만듦 */\n  margin-left: 0 !important; /* 왼쪽 여백을 0으로 설정 */\n  margin-top: 0 !important; /* 위쪽 여백을 3rem으로 설정 */\n}\n\n.sidenav {\n  margin: 0; /* 여백 없애기 */\n  overflow-y: auto; /* 내용이 넘칠 경우 스크롤 가능 */\n  border: none; /* border-0 스타일 적용 */\n  border-radius: 0; /* 테두리 모서리를 직사각으로 만듦 */\n  width: 250px; /* 너비 설정 */\n  background-color: #f8f9fa; /* 배경색 설정 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 추가 */\n}\n\n\n\n/* Span 태그 스타일 */\nspan.font-weight-bold {\n  color: #344675; /* 폰트 색상 */\n  font-size: 23px; /* 폰트 크기 */\n  font-weight: bold; /* 폰트 두께 */\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1); /* 텍스트에 그림자 추가 */\n  letter-spacing: 0.05em; /* 문자 간격 조정 */\n  text-transform: uppercase; /* 모든 문자를 대문자로 변환 */\n  margin-left: 20px; /* 오른쪽 여백 추가 */\n}\n\n/* Router-link 태그 스타일 */\n.router-link {\n  display: flex; /* Flexbox를 사용하여 내용을 중앙 정렬 */\n  align-items: center; /* 세로 방향 중앙 정렬 */\n  padding: 0.5rem 0; /* 상하 패딩 */\n}\n\n.navbar-brand-img {\n  width: 160px !important; /* 너비를 150px로 설정 */\n  height: 150px !important; /* 높이를 150px로 설정 */\n  position: absolute; /* 절대 위치 설정 */\n  top: 40px; /* 상단에서 20px 떨어진 위치 */\n  left: 43px; /* 좌측에서 20px 떨어진 위치 */\n  z-index: 10; /* 다른 요소들 위에 오도록 z-index 설정 */\n  transition: transform 0.3s ease; /* 마우스 오버 시 애니메이션 */\n}\n\n.navbar-brand-img:hover {\n  transform: scale(1.2); /* 마우스 오버 시 이미지 확대 */\n}\n\n/* min-height-300 position-absolute w-100 스타일 */\n.min-height-300 {\n  \n  min-height: 300px; /* 최소 높이 설정 */\n  position: absolute; /* 절대 위치 */\n  width: 100%; /* 너비를 100%로 설정 */\n  background-image: linear-gradient(to right, #000428, #004e92); /* 우주 같은 그라디언트 배경: 어두운 파란색에서 검정색으로 */\n  background-size: cover; /* 배경 이미지 크기 조절 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); /* 박스 그림자 추가: 좀 더 진한 그림자로 변경 */\n  border-radius: 8px; /* 모서리 둥글게 처리 */\n  opacity: 0.95; /* 약간의 투명도 */\n  z-index: -1; /* z-index로 레이어 순서 조정 */\n  background-attachment: fixed; /* 배경 고정: 스크롤 시 배경이 고정되도록 설정 */\n  color: #ffffff; /* 텍스트 색상 */\n  overflow: hidden; /* 내용이 넘칠 경우 숨김 */\n  border: none !important; /* 테두리 없애기 */\n  border-radius: 0 !important; /* 테두리 모서리를 직사각으로 만듦 */\n  margin-left: 0 !important; /* 왼쪽 여백을 0으로 설정 */\n  margin-top: 0 !important; /* 위쪽 여백을 3rem으로 설정 */\n}\n\n/* 사이드바 스타일링 */\n.sidenav {\n  margin: 0; /* 여백 없애기 */\n  overflow-y: auto; /* 내용이 넘칠 경우 스크롤 가능 */\n  border: none; /* border-0 스타일 적용 */\n  border-radius: 1rem; /* border-radius-xl 스타일 적용 */\n  width: 250px; /* 너비 설정 */\n  background-color: #f8f9fa; /* 배경색 설정 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 추가 */\n}\n\n\n/* 배경 스타일링 */\n.min-height-300 {\n  min-height: 300px; /* 최소 높이 설정 */\n  position: absolute; /* 절대 위치 설정 */\n  width: 100%; /* 너비를 100%로 설정 */\n  background-image: linear-gradient(to right, #000428, #004e92); /* 그라디언트 배경 */\n  z-index: -1; /* 요소의 스택 순서 설정 */\n  top: 0; /* 상단에 위치 */\n  left: 0; /* 왼쪽에 위치 */\n}\n\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=5af3a598&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5af3a598\"]])\n\nexport default __exports__","<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst isRTL = computed(() => store.state.isRTL);\nconst isNavFixed = computed(() => store.state.isNavFixed);\n\ndefineProps({\n  currentPage: {\n    type: String,\n    default: \"\",\n  },\n  currentDirectory: {\n    type: String,\n    default: \"\",\n  },\n});\n</script>\n<template>\n  <nav aria-label=\"breadcrumb\">\n    <ol\n      class=\"px-0 pt-1 pb-0 mb-0 bg-transparent breadcrumb\"\n      :class=\"`${isRTL ? '' : ' me-sm-6'} ${\n        isNavFixed ? 'text-dark' : 'text-white'\n      }`\"\n    >\n      <li class=\"text-sm breadcrumb-item\">\n        <a\n          v-if=\"isRTL\"\n          class=\"opacity-5 ps-2\"\n          href=\"#\"\n          :class=\"isNavFixed ? 'text-dark' : 'text-white'\"\n          >لوحات القيادة</a\n        >\n     \n      </li>\n      \n    </ol>\n    <h6\n      class=\"mb-0 font-weight-bolder page-title\"\n      :class=\"isNavFixed ? 'text-dark' : 'text-white'\"\n    >\n      {{ \"Parallel Anything in Cloud Continuum\" }}\n    </h6>\n  </nav>\n</template>\n\n\n<style scoped>\n/* 기존 스타일 */\n.text-sm {\n  font-size: 0.875rem;\n}\n\n/* 새 페이지 타이틀 스타일 */\n.page-title {\n  font-size: 28px; /* 글자 크기를 28px로 늘림 */\n  font-weight: 700; /* 폰트 가중치를 더 두껍게 */\n  color: #ffffff; /* 글자 색상을 하얀색으로 설정 */\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* 텍스트에 그림자 추가 */\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* 폰트 패밀리 변경 */\n  margin-left: 500px; /* 오른쪽으로 50픽셀 이동 */\n}\n\n</style>\n","import script from \"./Breadcrumbs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Breadcrumbs.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Breadcrumbs.vue?vue&type=style&index=0&id=2ef57eb7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ef57eb7\"]])\n\nexport default __exports__","<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter, useRoute } from \"vue-router\"; // Correctly import both useRouter and useRoute\nimport Breadcrumbs from \"../Breadcrumbs.vue\";\n\nconst store = useStore();\nconst router = useRouter();\nconst route = useRoute(); // Use useRoute to access the current route information\nconst isRTL = computed(() => store.state.isRTL);\nconst userEmail = computed(() => store.state.userEmail);\n\nconst currentRouteName = computed(() => router.currentRoute.value.name);\n\nconst currentDirectory = computed(() => {\n  const dir = route.path.split(\"/\")[1];\n  return dir.charAt(0).toUpperCase() + dir.slice(1);\n});\n\nconst logout = () => {\n  store\n    .dispatch(\"logout\")\n    .then(() => {\n      router.push(\"/signin\");\n    })\n    .catch((error) => {\n      console.error(\"Logout Error:\", error);\n    });\n};\n</script>\n<template>\n  <nav\n    class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\n    :class=\"isRTL ? 'top-0 position-sticky z-index-sticky' : ''\"\n    v-bind=\"$attrs\"\n    id=\"navbarBlur\"\n    data-scroll=\"true\"\n  >\n    <div class=\"px-3 py-1 container-fluid\">\n      <breadcrumbs\n        :current-page=\"currentRouteName\"\n        :current-directory=\"currentDirectory\"\n      />\n\n      <div\n        class=\"mt-2 collapse navbar-collapse mt-sm-0 me-md-0 me-sm-4\"\n        :class=\"isRTL ? 'px-0' : 'me-sm-4'\"\n        id=\"navbar\"\n      >\n        <div\n          class=\"pe-md-3 d-flex align-items-center\"\n          :class=\"isRTL ? 'me-md-auto' : 'ms-md-auto'\"\n        >\n          <span class=\"text-white\">{{ userEmail }}</span>\n        </div>\n\n        <ul class=\"navbar-nav justify-content-end\">\n          <li class=\"nav-item d-flex align-items-center\">\n            <a\n              class=\"px-0 nav-link font-weight-bold text-white\"\n              href=\"javascript:;\"\n              @click=\"logout\"\n            >\n              <i\n                class=\"fa fa-sign-out-alt\"\n                :class=\"isRTL ? 'ms-sm-2' : 'me-sm-2'\"\n              ></i>\n              Log Out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<style scoped>\n/* 폰트 스타일을 위한 공통 클래스 */\n.text-style {\n  font-size: 16px;  /* 폰트 크기 설정 */\n  font-weight: bold;  /* 폰트 가중치를 굵게 */\n  color: #ffffff;  /* 폰트 색상을 흰색으로 */\n}\n\n/* 사용자 이메일과 로그아웃 링크에 적용 */\n.nav-item .text-white, .nav-link {\n  font-size: 16px;  /* 폰트 크기 설정 */\n  font-weight: bold;  /* 폰트 가중치를 굵게 */\n  color: #ffffff;  /* 폰트 색상을 흰색으로 */\n}\n\n/* 추가적으로 아이콘과 텍스트 간 간격 조절 */\n.nav-item i {\n  margin-right: 5px;  /* 오른쪽 마진 추가 */\n}\n</style>\n","import script from \"./Navbar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Navbar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=7297cf0d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7297cf0d\"]])\n\nexport default __exports__","<script setup>\nimport { useStore } from \"vuex\";\nconst store = useStore();\n</script>\n<template>\n  <footer class=\"py-3 footer\">\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-lg-between\">\n        <div class=\"mb-4 col-lg-6 mb-lg-0\">\n          <div\n            class=\"text-sm text-center copyright text-muted\"\n            :class=\"store.state.isRTL ? 'text-lg-end' : 'text-lg-start'\"\n          >\n            ©\n            {{ new Date().getFullYear() }}, made with\n            <i class=\"fa fa-heart\"></i> by\n            <a\n              href=\"http://ccrc.re.kr/\"\n              class=\"font-weight-bold\"\n              target=\"_blank\"\n              >CCRC</a\n            >\n            for a better web.\n          </div>\n        </div>\n        <div class=\"col-lg-6\">\n          <ul\n            class=\"nav nav-footer justify-content-center justify-content-lg-end\"\n          >\n            <li class=\"nav-item\">\n              <a\n                href=\"https://www.creative-tim.com\"\n                class=\"nav-link text-muted\"\n                target=\"_blank\"\n                ></a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                href=\"https://www.creative-tim.com/presentation\"\n                class=\"nav-link text-muted\"\n                target=\"_blank\"\n                ></a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                href=\"https://www.creative-tim.com/blog\"\n                class=\"nav-link text-muted\"\n                target=\"_blank\"\n                ></a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                href=\"https://www.creative-tim.com/license\"\n                class=\"nav-link pe-0 text-muted\"\n                target=\"_blank\"\n                ></a\n              >\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n</template>\n","import script from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n=========================================================\n* Vue Argon Dashboard 2 - v4.0.0\n=========================================================\n\n* Product Page: https://creative-tim.com/product/vue-argon-dashboard\n* Copyright 2024 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n-->\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sidenav from \"./examples/Sidenav\";\nimport Navbar from \"@/examples/Navbars/Navbar.vue\";\nimport AppFooter from \"@/examples/Footer.vue\";\n\nconst store = useStore();\nconst isNavFixed = computed(() => store.state.isNavFixed);\nconst darkMode = computed(() => store.state.darkMode);\nconst isAbsolute = computed(() => store.state.isAbsolute);\nconst showSidenav = computed(() => store.state.showSidenav);\nconst layout = computed(() => store.state.layout);\nconst showNavbar = computed(() => store.state.showNavbar);\nconst showFooter = computed(() => store.state.showFooter);\nconst showConfig = computed(() => store.state.showConfig);\nconst hideConfigButton = computed(() => store.state.hideConfigButton);\nconst toggleConfigurator = () => store.commit(\"toggleConfigurator\");\n\nconst navClasses = computed(() => {\n  return {\n    \"position-sticky bg-white left-auto top-2 z-index-sticky\":\n      isNavFixed.value && !darkMode.value,\n    \"position-sticky bg-default left-auto top-2 z-index-sticky\":\n      isNavFixed.value && darkMode.value,\n    \"position-absolute px-4 mx-0 w-100 z-index-2\": isAbsolute.value,\n    \"px-0 mx-4\": !isAbsolute.value,\n  };\n});\n</script>\n<template>\n  <div\n    v-show=\"layout === 'landing'\"\n    class=\"landing-bg h-100 bg-gradient-primary position-fixed w-100\"\n  ></div>\n\n  <sidenav v-if=\"showSidenav\" />\n\n  <main\n    class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg\"\n  >\n    <!-- nav -->\n\n    <navbar :class=\"[navClasses]\" v-if=\"showNavbar\" />\n\n    <router-view />\n\n    <app-footer v-show=\"showFooter\" />\n\n    <configurator\n      :toggle=\"toggleConfigurator\"\n      :class=\"[showConfig ? 'show' : '', hideConfigButton ? 'd-none' : '']\"\n    />\n  </main>\n</template>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createStore } from \"vuex\";\nimport axios from \"axios\";\n\nexport default createStore({\n  state: {\n    hideConfigButton: false,\n    isPinned: false,\n    showConfig: false,\n    sidebarType: \"bg-white\",\n    isRTL: false,\n    mcolor: \"\",\n    darkMode: false,\n    isNavFixed: false,\n    isAbsolute: false,\n    showNavs: true,\n    showSidenav: true,\n    showNavbar: true,\n    showFooter: true,\n    showMain: true,\n    layout: \"default\",\n    authToken: sessionStorage.getItem(\"authToken\") || null,\n    userEmail: sessionStorage.getItem(\"userEmail\") || null, // 변경: 초기 상태 설정\n    models: [],\n    datasets: [],\n    projects: [], // Add a projects array to your state\n    nodes: [], // State property for nodes\n    nodesData: {},\n    maxHistoricalEntries: 20,\n    selectedProjectNodeNames: [],\n    projectsInfo: {},\n    selectedProjectId: null,\n    monitoringData : {}\n  },\n  mutations: {\n    toggleConfigurator(state) {\n      state.showConfig = !state.showConfig;\n    },\n    sidebarMinimize(state) {\n      let sidenav_show = document.querySelector(\"#app\");\n      if (state.isPinned) {\n        sidenav_show.classList.add(\"g-sidenav-hidden\");\n        sidenav_show.classList.remove(\"g-sidenav-pinned\");\n        state.isPinned = false;\n      } else {\n        sidenav_show.classList.add(\"g-sidenav-pinned\");\n        sidenav_show.classList.remove(\"g-sidenav-hidden\");\n        state.isPinned = true;\n      }\n    },\n    sidebarType(state, payload) {\n      state.sidebarType = payload;\n    },\n    navbarFixed(state) {\n      if (state.isNavFixed === false) {\n        state.isNavFixed = true;\n      } else {\n        state.isNavFixed = false;\n      }\n    },\n    setAuthToken(state, token) {\n      state.authToken = token;\n      sessionStorage.setItem(\"authToken\", token);\n    },\n    setUserEmail(state, email) {\n      state.userEmail = email;\n      sessionStorage.setItem(\"userEmail\", email); // 변경: 이메일 세션 스토리지에 저장\n    },\n    clearAuthToken(state) {\n      state.authToken = null;\n      state.userEmail = null;\n      sessionStorage.removeItem(\"authToken\");\n      sessionStorage.removeItem(\"userEmail\"); // 변경: 이메일 세션 스토리지에서 삭제\n    },\n    // 백엔드에서 모델, 데이터셋 자료 받아옴\n    setModels(state, models) {\n      state.models = models;\n    },\n    setDatasets(state, datasets) {\n      state.datasets = datasets;\n    },\n    // 프로젝트 db에서 사용자 프로젝트 가져옴\n    setProjects(state, projects) {\n      state.projects = projects;\n    },\n    getMonitoringData(state, monitoringData) {\n      state.monitoringData = monitoringData;\n    },\n    setNodes(state, nodes) {\n      state.nodes = nodes; // 노드 데이터들 가져옴.\n    },\n    setRealTimeData(state, { nodeName, key, value }) {\n      if (!state.nodesData[nodeName]) {\n        state.nodesData[nodeName] = { realTime: {}, historical: {} };\n      }\n      state.nodesData[nodeName].realTime[key] = value;\n    },\n\n    addHistoricalDataEntry(state, { nodeName, key, value }) {\n      try {\n        if (!state.nodesData[nodeName]) {\n          state.nodesData[nodeName] = { realTime: {}, historical: {} };\n        }\n        let dataArray = state.nodesData[nodeName].historical[key] || [];\n        if (!Array.isArray(dataArray)) {\n          dataArray = []; // If the existing data is not an array, initialize it as a new array\n        }\n\n        dataArray.push(value); // add new value to array\n        console.log(`dddd: ${key} =`, [...dataArray]); // 데이터 복사본 로깅 // logging array status\n\n        if (dataArray.length > state.maxHistoricalEntries) {\n          dataArray.shift(); // remove oldest data\n        }\n\n        console.log(`ffff: ${key} =`, [...dataArray]); // 데이터 복사본 로깅 // Logging final array status\n        state.nodesData[nodeName].historical[key] = dataArray;\n      } catch (error) {\n        console.error(\"Error in addHistoricalDataEntry mutation:\", error);\n      }\n    },\n    setSelectedProjectNodeNames(state, nodeNames) {\n      state.selectedProjectNodeNames = nodeNames;\n    },\n    setProjectInfo(state, project) {\n      // Directly set or update a single project by ID\n      state.projectsInfo[project.id] = project;\n    },\n    setSelectedProjectId(state, projectId) {   // 선택된 노드 정보 저장\n      state.selectedProjectId = projectId;\n    }\n  },\n  actions: {\n    toggleSidebarColor({ commit }, payload) {\n      commit(\"sidebarType\", payload);\n    },\n    signin({ commit }, credentials) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/signin\", credentials)\n          .then((response) => {\n            commit(\"setAuthToken\", response.data.access_token);\n            commit(\"setUserEmail\", response.data.email); // 이메일 저장\n            resolve(); // Resolve the promise indicating success\n          })\n          .catch((error) => {\n            console.error(\"Signin Error:\", error);\n            reject(error); // Reject the promise indicating failure\n          });\n      });\n    },\n    logout({ commit }) {\n      commit(\"clearAuthToken\");\n    },\n    async fetchModels({ commit }) {\n      try {\n        const response = await axios.get(\n          \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/data/models\",\n        );\n        commit(\"setModels\", response.data);\n      } catch (error) {\n        console.error(\"Error fetching models:\", error);\n      }\n    },\n    async fetchDatasets({ commit }) {\n      try {\n        const response = await axios.get(\n          \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/data/datasets\",\n        );\n        commit(\"setDatasets\", response.data);\n      } catch (error) {\n        console.error(\"Error fetching datasets:\", error);\n      }\n    },\n    fetchProjects({ commit, state }) {\n      axios\n        .post(\n          \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/data/projects\",\n          {\n            email: state.userEmail, // send the stored email\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${state.authToken}`, // send the stored authToken\n            },\n          },\n        )\n        .then((response) => {\n          console.log(\"Fetched Projects:\", response.data); // 로그를 추가하여 가져온 프로젝트 정보 출력\n          commit(\"setProjects\", response.data); // commit the projects to the state\n        })\n        .catch((error) => {\n          console.error(\"Error fetching projects:\", error);\n        });\n    },\n    async fetchNodes({ commit }) {\n      try {\n        const response = await axios.get(\n          \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/data/nodes\",\n        );\n        commit(\"setNodes\", response.data); // Commit the node data to the state\n      } catch (error) {\n        console.error(\"Error fetching nodes:\", error);\n      }\n    },\n    async fetchData({ commit }) {\n      // 백엔드에서 노들의 모니터링 정보 요청\n      try {\n        const response = await axios.get(\n          \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/data/nodemonitoring\",\n        )\n        commit(\"getMonitoringData\", response.data); // commit the projects to the state\n      \n      } catch (error) {\n        console.error(\"Failed to fetch node data:\", error);\n      }\n    },\n    updateSelectedProjectNodeNames({ commit }, nodeNames) {\n      commit(\"setSelectedProjectNodeNames\", nodeNames);\n    },\n    fetchProjectInfoById({ commit, state }, projectId) {\n      if (state.authToken && state.userEmail) { \n        axios.get(`http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/projects/${projectId}`, {\n          headers: {\n            Authorization: `Bearer ${state.authToken}`\n          }\n        })\n        .then(response => {\n          \n          console.log(\"Project Info 111:\", response.data); // 프로젝트 정보 콘솔에 출력\n          commit('setProjectInfo', response.data);\n        })\n        .catch(error => {\n          console.error(`Error fetching project ${projectId}:`, error);\n        });\n      }\n    },\n    \n    updateSelectedProjectId({ commit }, projectId) {           //선택된 프로젝트 Id 저장 하는 함수\n      commit('setSelectedProjectId', projectId);\n    }\n  },\n\n  getters: {\n    userProjects: (state) => state.projects, // Add a getter for the projects\n    userNodes: (state) => state.nodes,\n    getNodeData: (state) => (nodeName) =>\n      state.nodesData[nodeName] || { realTime: {}, historical: {} },\n    getNodeMemory: (state) => (nodeName) => {\n      const node = state.nodesData[nodeName] || {\n        realTime: {},\n        historical: {},\n      };\n      return node.realTime.memoryFree || null; // 'memoryFree' 키를 사용하여 메모리 데이터에 접근\n    },\n    getNodeDisk: (state) => (nodeName) => {\n      const node = state.nodesData[nodeName] || {\n        realTime: {},\n        historical: {},\n      };\n      return node.realTime.diskFree || null; // 'diskFre' 키를 사용하여 메모리 데이터에 접근\n    },\n    getNodeGpuTem: (state) => (nodeName) => {\n      const node = state.nodesData[nodeName] || {\n        realTime: {},\n        historical: {},\n      };\n      return node.historical.gpuTemperature || null; // 'gpuTemperature' 키를 사용하여 메모리 데이터에 접근\n    },\n  },\n});\n","<template>\n  <div class=\"project-widget\">\n    <h4 class=\"project-widget-header\">학습 모델 리스트</h4>\n    <div class=\"project-widget-body\">\n      <div class=\"project-list-container\">\n        <ul class=\"project-list\">\n          <li\n            v-for=\"(project, index) in lastFiveProjects\"\n            :key=\"index\"\n            @click=\"selectProject(project)\"\n            :class=\"{ 'is-selected': project.id === selectedProject.id }\"\n          >\n            {{ index + 1 }}. {{ project.model_name }} \n          </li>\n        </ul>\n      </div>\n      <div class=\"project-description-container\">\n        <h4>{{ selectedProject.model_name || \"학습 모델 선택\" }}</h4>\n        <div v-if=\"selectedProject.project_nodes\">\n          \n        <p class=\"project-detail dataset-name\">학습 데이터 셋: {{ selectedProject.dataset_name }}</p>\n        <p class=\"project-detail project-status\">현재 상태: {{ selectedProject.status }}</p>\n        <p class=\"project-detail start-time\">시작 일시: {{ selectedProject.created_at }}</p>\n        <p class=\"project-detail nodes-list\">학습 노드: {{ parseNodes(selectedProject.project_nodes) }}</p>\n\n        </div>\n      </div>\n      <button\n        v-if=\"selectedProject.status === '학습 중'\"\n        @click=\"stopTraining(selectedProject.id)\"\n        class=\"stop-training-button\"\n      >\n        학습 중단\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nimport { onMounted, onUnmounted } from 'vue';\n\nlet intervalId;\n\nconst store = useStore();\n// Log the initial state of projects from the store\nconsole.log(\n  \"Initial projects from the store:\",\n  store.getters.userProjects,\n);\n\nconst projects = computed(() => {\n  const projectsFromStore = store.getters.userProjects;\n  console.log(\n    \"프로젝트 정보 가져옴:\",\n    projectsFromStore,\n  ); // Log computed projects\n  return projectsFromStore;\n});\n\nconst lastFiveProjects = computed(() => {\n  const totalProjects = projects.value.length;\n  return projects.value.slice(Math.max(totalProjects - 5, 0)).reverse();\n});\n\n\nconst selectedProject = ref({});\n\nwatch(\n  () => store.getters.userProjects,\n  (newProjects) => {\n    console.log(\n      \" Watch triggered for projects update:\",\n      newProjects,\n    ); // Log on update\n    // Update logic as is\n  },\n  { deep: true },\n);\n\nwatch(selectedProject, (newProject) => {\n  console.log(\"선택된 프로젝트 갱신:\", newProject);\n});\nconst selectProject = (project) => {\n  console.log(\"Project selected:\", project);\n  selectedProject.value = project;\n  if (project.status !== \"중단됨\") {\n    store.commit('setSelectedProjectId', project.id)\n    const nodeNames = JSON.parse(project.project_nodes);\n    store.dispatch(\"updateSelectedProjectNodeNames\", nodeNames);\n  }\n};\n\n\nlet isFirst = false;\n\nonMounted(() => {\n\n  intervalId = setInterval(executePeriodically, 1000);\n\n \n});\n\nonUnmounted(() => {\n  clearInterval(intervalId);\n});\n\nconst executePeriodically = () => {\n\n  if(isFirst==false){\n    \n     console.log(\"Mounted ProjectsList component\");\n  if (lastFiveProjects.value.length > 0 && isFirst == false) {\n    console.log(\"Selecting the last project from the list\");\n    selectProject(lastFiveProjects.value[0]);\n      isFirst = true;\n      \n  }\n    return;\n  }\n  // 여기에 매초 실행하고 싶은 로직을 추가하세요.\n};\n\n\nconst parseNodes = (nodesJson) => {\n  try {\n    return JSON.parse(nodesJson).join(\", \"); // Assuming the nodes are stored in a simple array\n  } catch (e) {\n    return \"Error parsing nodes\";\n  }\n};\n\nconst stopTraining = async () => {\n  if (!selectedProject.value || !selectedProject.value.id) {\n    console.error(\n      \"No project selected or selected project does not have an id\",\n    );\n    return;\n  }\n  try {\n    const response = await axios.post(\n      \"http://l163.180.117.23:5000/api/stop-training\",\n      { projectId: selectedProject.value.id },\n      { headers: { Authorization: `Bearer ${store.state.authToken}` } },\n    );\n    if (response.data.success) {\n      console.log(\"학습 중단 요청 성공\", selectedProject.value.id);\n      alert(\"학습 중단 요청이 성공했습니다.\"); // Alert for success\n      // Refetch projects to update the list\n      await store.dispatch(\"fetchProjects\");\n      // Update selectedProject to reflect the changes if it's still selected\n      const updatedProject = store.getters.userProjects.find(\n        (p) => p.id === selectedProject.value.id,\n      );\n      if (updatedProject) {\n        selectedProject.value = updatedProject;\n      }\n    } else {\n      // Handle case where response.data.success is false\n      throw new Error(\"학습 중단 요청이 실패했습니다.\");\n    }\n  } catch (error) {\n    console.error(\"학습 중단 요청 실패\", selectedProject.value.id, error);\n    // Display an error message to the user\n    alert(\"학습 중지 요청에 실패하였습니다.\"); // Use a more user-friendly error handling instead of alert\n  }\n};\n</script>\n\n<style scoped>\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  color: #333;\n}\n\n.project-detail {\n  font-size: 16px; /* 크기 증가 */\n  color: #000000; /* 더 진한 회색으로 변경 */\n  margin-bottom: 8px; /* 여백 조절 */\n  font-weight: bold;\n}\n\n.dataset-name {\n  font-weight: bold; /* 더 강조된 폰트 두께 */\n}\n\n.project-status {\n  color: #000000; /* 상태에 따라 다른 색상을 적용할 수 있습니다. 예: 진행 중일 때는 녹색 */\n  font-weight: bold;\n}\n\n.start-time {\n  color: #000000; /* 시작 시간을 빨간색으로 표시 */\n  font-weight: bold;\n}\n\n.nodes-list {\n  color: #000000; /* 노드 목록을 파란색으로 표시 */\n  font-weight: bold;\n}\n\n\n\n.project-widget {\n  border: 1px solid #e0e0e0; /* 더 섬세한 경계선 */\n  border-radius: 12px; /* 더 둥근 모서리 */\n  overflow: hidden;\n  background-color: #fff;\n  box-shadow: 0 10px 25px rgba(0,0,0,0.1); /* 부드러운 그림자 추가 */\n  margin: 0 auto; /* Center the widget */\n  margin-bottom: 20px; /* Add bottom margin */\n  max-width: 100%; /* Optionally add a max-width if you want to limit the size on larger screens */\n}\n\n.project-widget-header {\n  background-color: #f5f5f5; /* 더 부드러운 배경색 */\n  border-bottom: 1px solid #e0e0e0; /* 조화로운 경계선 */\n  padding: 12px 16px;\n  margin: 0;\n  index: -1;\n}\n\n.project-widget-body {\n  display: flex;\n  flex-direction: row;\n  position: relative; /* 부모 컨테이너에 상대적 위치 지정 */\n}\n.project-list-container {\n  \n  max-height: 250px; /* Set this to whatever height you want */\n  overflow-y: auto; /* This will allow scrolling */\n  max-width: 100%; /* Set the max width as needed */\n  border-right: 1px solid #ddd;\n  flex: 2;\n  \n}\n.project-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  font-size: 21px; /* 적절한 폰트 사이즈 */\n}\n\n.project-description-container {\n  width: 450px; /* Set the width as needed */\n  padding: 11px;\n  font-size: 16px; /* 적절한 폰트 사이즈 */\n}\n\n.project-actions-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px;\n}\n\n\n.stop-training-button {\n  position: absolute; /* 절대 위치 지정 */\n  top: 10px; /* 상단에서 10px 떨어진 위치 */\n  right: 10px; /* 우측에서 10px 떨어진 위치 */\n  height: 45px;\n  width: 135px;\n  border-radius: 25px;\n  background-color: #778899;\n  color: #fff;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 195px; /* Adds some space at the bottom */\n  margin-right: -5px; /* Adds some space at the right */\n}\n\n.stop-training-button:hover {\n  background-color: #ef5350; /* Slightly darker green color for the hover state */\n}\nbutton:hover {\n  transform: scale(1.05); /* 약간 확대 */\n}\n.project-list li {\n  padding: 8px 16px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.project-list li:hover {\n  background-color: #f0f0f0; /* 마우스 오버 시 배경색 변경 */\n}\n\n.project-list li.is-selected {\n  background-color: #e8f0f9; /* 선택된 항목의 배경색 변경 */\n  font-weight: bold; /* 선택된 항목의 텍스트를 굵게 표시 */\n}\n\n\nbutton {\n  border-radius: 5px; /* Adjust the pixel value to control the roundness */\n  background-color: #90ee90; /* This is a light green color */\n  border: none; /* Removes the default border */\n  padding: 10px 20px; /* Adds some padding inside the button */\n  color: rgb(0, 0, 0); /* Changes the text color to white */\n  font-size: 16px; /* Adjust the font size as needed */\n  cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */\n  transition: background-color 0.3s; /* Smooth transition for background color */\n}\n\nbutton:hover {\n  background-color: #76c893; /* Slightly darker green color for the hover state */\n}\n</style>\n","import script from \"./ProjectsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectsList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectsList.vue?vue&type=style&index=0&id=6c8ec2d3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6c8ec2d3\"]])\n\nexport default __exports__","\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch === -1 ? '0' : (projectInfo.epoch !== undefined ? projectInfo.epoch : '0') }}</p>\n     <p class=\"project-info-highlight accuracy\">모델 정확도: {{ typeof projectInfo.accuracy === 'number' ? projectInfo.accuracy.toFixed(2) + '%' : '0%' }}</p>\n<p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas ref=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n\n\n<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref , nextTick } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\nlet currentepoch = 0;\n\nfunction generateLabels(data) {\n  console.log(data);\n  return data.map((_, index) => `epoch ${index + 1}`);\n}\nlet myLineChart1 = null;\nlet myLineChart2 = null;\nlet myPieChart1 = null;\nlet myPieChart2 = null;\n\n\nconst setupCharts = () => {\n\n\n  nextTick(() => {\n    // 기존 차트 파괴\n    if (myLineChart1) myLineChart1.destroy();\n    if (myLineChart2) myLineChart2.destroy();\n    if (myPieChart1) myPieChart1.destroy();\n    if (myPieChart2) myPieChart2.destroy();\n\n    // Setup line chart 1\n    const lineChart1Ctx = lineChart1.value.getContext('2d');\n    \n\n    myLineChart1 = new Chart(lineChart1Ctx, {\n      type: 'line',\n      data: {\n        labels: generateLabels(projectInfo.value.accuracyHistory),\n        datasets: [{\n          label: 'Accuracy',\n          data: projectInfo.value.accuracyHistory,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      },\n  options: {\n    scales: {\n      x: {\n        ticks: {\n          font: {\n            size: 16 // x축 라벨의 글씨 크기\n          }\n        }\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 16 // y축 라벨의 글씨 크기\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          font: {\n            size: 25 // 범례의 글씨 크기\n          }\n        }\n      }\n    }\n  }\n});\n\n\n\n    // Setup line chart 2\n    const lineChart2Ctx = lineChart2.value.getContext('2d');\n    myLineChart2 = new Chart(lineChart2Ctx, {\n      type: 'line',\n      data: {\n        labels: generateLabels(projectInfo.value.lossHistory),\n        datasets: [{\n          label: 'Loss',\n          data: projectInfo.value.lossHistory,\n          fill: false,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }]\n      },options: {\n    scales: {\n      x: {\n        ticks: {\n          font: {\n            size: 16 // x축 라벨의 글씨 크기\n          }\n        }\n      },\n      y: {\n        ticks: {\n          font: {\n            size: 16 // y축 라벨의 글씨 크기\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          font: {\n            size: 25 // 범례의 글씨 크기\n          }\n        }\n      }\n    }\n  }\n});\n\n\n  let cpuUtilizationKeys = Object.keys(projectInfo.value.node_cpu_utilization_list);\n  let gpuUtilizationKeys = Object.keys(projectInfo.value.node_gpu_utilization_list);\n\n  let cpuUtilizationValues = Object.values(projectInfo.value.node_cpu_utilization_list);\n  var gpuUtilizationValues = Object.values(projectInfo.value.node_gpu_utilization_list);\n\n  if (gpuUtilizationValues.every(value => value === 0)) {\n        // 모든 원소를 1로 변경\n        gpuUtilizationValues.fill(1);\n      }\n\n    // GPU 키의 길이가 0인 경우 라벨 변경\n    if (gpuUtilizationKeys.length === 0) {\n      gpuUtilizationKeys = [\"GPU 사용 대기\"];\n      gpuUtilizationValues = [1];  // 차트에 표시할 기본값 제공\n    }\n\n      if (cpuUtilizationKeys.length === 0) {\n      cpuUtilizationKeys = [\"CPU 사용 대기\"];\n      cpuUtilizationValues = [1];  // 차트에 표시할 기본값 제공\n    }\n\n    // Setup pie chart 1\n    const pieChart1Ctx = pieChart1.value.getContext('2d');\n    myPieChart1 = new Chart(pieChart1Ctx, {\n      type: 'pie',\n      data: {\n        labels: cpuUtilizationKeys,\n        datasets: [{\n          label: 'Node CPU Utilization',\n          data:cpuUtilizationValues,\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)']\n        }]\n      },\n  options: {\n    plugins: {\n      legend: {\n        labels: {\n          font: {\n            size: 16  // 범례의 글씨 크기 설정\n          }\n        }\n      },\n      tooltip: {\n        bodyFont: {\n          size: 16  // 툴팁 본문의 글씨 크기 설정\n        }\n      }\n    }\n  }\n});\n\n    // Setup pie chart 2\n    const pieChart2Ctx = pieChart2.value.getContext('2d');\n    myPieChart2 = new Chart(pieChart2Ctx, {\n      type: 'pie',\n      data: {\n        labels: gpuUtilizationKeys,\n        datasets: [{\n          label: 'Node GPU Utilization',\n          data: gpuUtilizationValues,\n          backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)', 'rgb(233, 30, 99)']\n        }]\n      },\n       options: {\n    plugins: {\n      legend: {\n        labels: {\n          font: {\n            size: 16  // 범례의 글씨 크기 설정\n          }\n        }\n      },\n      tooltip: {\n        bodyFont: {\n          size: 16  // 툴팁 본문의 글씨 크기 설정\n        }\n      }\n    }\n  }\n});\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst store = useStore();\nconst intervalId = ref(null); // Use a ref to keep track of the interval ID\n\nlet isFirst = false;\n\nfunction startFetching(projectId) {\n  if (intervalId.value) {\n    clearInterval(intervalId.value); // Clear the current interval if it exists\n  }\n\n  \n  intervalId.value = setInterval(() => {\n  console.log(\"currentepoch \" + currentepoch + \" projectInfo.value.epoch \" + projectInfo.value.epoch)\n  store.dispatch(\"fetchProjectInfoById\", projectId);\n\n    if(projectInfo.value.epoch == -1){\n      console.log(\"projectInfo.value.epoch == -1\");\n      return;\n    }\n\n    if(currentepoch == projectInfo.value.epoch){\n        \n      if(isFirst == false && projectInfo.value.currentstate == 2){\n         setupCharts();\n         isFirst = true;\n          return;\n        }          \n        return;\n     }\n    currentepoch = projectInfo.value.epoch;\n    \n    setupCharts();\n  }, 1000); // Fetch every 3 seconds\n}\n\n\n\n\n\n\nonMounted(() => {\n  if (store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjects\");\n    // Assuming project ID is already selected somewhere and stored in the state\n    if (store.state.selectedProjectId) {\n      startFetching(store.state.selectedProjectId);\n    }\n  }\n  setupCharts();\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId && store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjectInfoById\", newId); // Fetch immediately when ID changes\n    startFetching(newId); // Start or restart the fetching interval\n  } else {\n    if (intervalId.value) {\n      clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n      intervalId.value = null;\n    }\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  // Clean up the interval when the component is destroyed\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n  if (myLineChart1) myLineChart1.destroy();\n  if (myLineChart2) myLineChart2.destroy();\n  if (myPieChart1) myPieChart1.destroy();\n  if (myPieChart2) myPieChart2.destroy();\n});\n\n// Computed property to display project info\nconst projectInfo = computed(() => {\n  console.log(\"projectInfo updated\", store.state.projectsInfo[store.state.selectedProjectId]);\n  const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n\n   let gpuUtilizationList = data.node_gpu_utilization || [];\n  if (gpuUtilizationList.length > 0 && gpuUtilizationList.every(value => value === 0)) {\n    gpuUtilizationList = gpuUtilizationList.map(() => 1);  // Replace all zeros with ones\n  }\n\n  let cpuUtilizationList = data.node_cpu_utilization || [];\n  if (cpuUtilizationList.length > 0 && cpuUtilizationList.every(value => value === 0)) {\n    cpuUtilizationList = cpuUtilizationList.map(() => 1);  // Replace all zeros with ones\n  }\n\n\n  return {\n    progress: data.progress || 0,\n    epoch: data.epoch || -1,\n    accuracy: (data.accuracy && data.accuracy.length > 0) ? data.accuracy[data.accuracy.length - 1] : 0,\n    loss: (data.loss && data.loss.length > 0) ? data.loss[data.loss.length - 1] : 0,\n    accuracyHistory: data.accuracy || [],\n    lossHistory: data.loss || [],\n    currentstate: data.current_state || 0,\n    node_cpu_utilization_list : cpuUtilizationList,\n    node_gpu_utilization_list : gpuUtilizationList\n  };\n});\n</script>\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=1bb129ca&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"model-selector-container\">\n    <!-- Header title for the model selection -->\n    <h2 class=\"model-header\">학습 모델 선택</h2>\n    <!-- Model list and description container -->\n    <div class=\"model-content\">\n      <div class=\"model-list\">\n        <ul>\n          <li\n            v-for=\"model in models\"\n            :key=\"model.model_id\"\n            @click=\"updateSelectedModel(model)\"\n            :class=\"{ selected: model.model_id === selectedModel.model_id }\"\n          >\n            {{ model.name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"model-description\">\n        <h3>{{ selectedModel?.name || \"No model selected\" }}</h3>\n        <p>{{ selectedModel?.description || \"\" }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, defineEmits } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst store = useStore();\nconst models = computed(() => store.state.models);\nconst selectedModel = ref({});\n\nonMounted(async () => {\n  await store.dispatch(\"fetchModels\");\n  if (models.value.length > 0) {\n    selectedModel.value = models.value[0]; // Set the first model as selected\n    emit(\"update:modelValue\", models.value[0].model_id); // Emit its model_id\n  }\n});\n\nfunction updateSelectedModel(model) {\n  if (model) {\n    selectedModel.value = model;\n    emit(\"update:modelValue\", model.model_id); // Emit the model_id\n  }\n}\n</script>\n\n<style scoped>\n.model-selector-container {\n  border: 1px solid #e0e0e0; /* 경계선 설정 */\n  background-color: #fff; /* 배경색 흰색 */\n  border-radius: 12px; /* 모서리를 둥글게 */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 그림자 효과 추가 */\n  display: flex; /* flexbox 레이아웃 사용 */\n  flex-direction: column; /* 자식 요소를 세로로 정렬 */\n  overflow: hidden; /* 내용이 넘칠 경우 숨김 */\n}\n.model-list ul li\n{\n   font-size: 19px; /* 글꼴 크기 */\n\n}\n\n.model-header {\n  text-align: left; /* 텍스트 왼쪽 정렬 */\n  padding: 15px 20px; /* 패딩 설정 */\n  background: #f8f8f8; /* 배경색 연한 회색 */\n  font-size: 34px; /* 글꼴 크기 */\n  font-weight: 600; /* 글꼴 두께 */\n  color: #333; /* 글꼴 색상 */\n  border-bottom: 1px solid #ddd; /* 하단에 경계선 추가 */\n  margin-bottom: 0px;   /* 마진 0으로 안하면 리스트와 헤더 사이에 붕 뜸*/\n}\n\n.model-content {\n  display: flex; /* flexbox 레이아웃 사용 */\n}\n\n.model-list ul {\n  list-style-type: none; /* 리스트 스타일 없앰 */\n  padding: 0; /* 패딩 없앰 */\n  margin: 0; /* 마진 없앰 */\n  width: 250px; /* 너비 설정 */\n  border-right: 1px solid #ddd; /* 오른쪽에 경계선 추가 */\n}\n\n.model-list li {\n  padding: 15px 20px; /* 패딩 설정 */\n  cursor: pointer; /* 마우스 오버 시 포인터 모양 변경 */\n  transition: background-color 0.3s; /* 배경색 변경 시 애니메이션 효과 */\n  font-size: 16px; /* 글꼴 크기 */\n  color: #333; /* 글꼴 색상 */\n  border-bottom: 1px solid #eee; /* 아래쪽에 경계선 추가 */\n  font-weight: bold;\n}\n\n.model-list li:hover,\n.model-list li.selected {\n  background-color: #e3f2fd; /* 배경색 변경 */\n}\n\n.model-description {\n  padding: 20px; /* 패딩 설정 */\n  flex-grow: 1; /* 남은 공간을 채움 */\n  background-color: #fafafa; /* 배경색 연한 회색 */\n  border-radius: 0 12px 12px 0; /* 오른쪽 모서리를 둥글게 */\n}\n\n.model-description p {\n  font-size: 22px; /* 글꼴 크기 */\n  color: #666; /* 글꼴 색상 */\n  margin-bottom: 10px; /* 아래쪽 마진 추가 */\n  line-height: 1.4; /* 줄 간격 설정 */\n}\n\n.model-description h3 {\n  margin-top: 0; /* 위쪽 마진 제거 */\n  font-size: 25px; /* 글꼴 크기 */\n  color: #333; /* 글꼴 색상 */\n}\n\n@media (max-width: 768px) {\n  .model-selector-container {\n    flex-direction: column; /* 화면이 작을 때 세로로 배치 */\n  }\n\n  .model-list ul {\n    width: auto; /* 너비를 자동으로 조정 */\n    border-right: none; /* 경계선 제거 */\n  }\n\n  .model-list li {\n    border-bottom: none; /* 경계선 제거 */\n  }\n}\n\n\n</style>\n","import script from \"./ModelSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModelSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ModelSelector.vue?vue&type=style&index=0&id=caca7d9c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-caca7d9c\"]])\n\nexport default __exports__","<template>\n  <div class=\"dataset-selector-container\">\n    <h2 class=\"dataset-header\">학습 데이터 선택</h2>\n    <div class=\"dataset-content\">\n      <div class=\"dataset-list\">\n        <ul>\n          <li\n            v-for=\"dataset in datasets\"\n            :key=\"dataset.dataset_id\"\n            @click=\"updateSelectedDataset(dataset)\"\n            :class=\"{\n              selected: dataset.dataset_id === selectedDataset.dataset_id,\n            }\"\n          >\n            {{ dataset.name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"dataset-description\">\n        <h3>{{ selectedDataset?.name || \"No dataset selected\" }}</h3>\n        <p>{{ selectedDataset?.description || \"\" }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, defineEmits } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst store = useStore();\nconst datasets = computed(() => store.state.datasets);\nconst selectedDataset = ref({});\n\nonMounted(async () => {\n  await store.dispatch(\"fetchDatasets\");\n  if (datasets.value.length > 0) {\n    selectedDataset.value = datasets.value[0]; // Set the first dataset as selected\n    emit(\"update:modelValue\", datasets.value[0].dataset_id); // Emit its dataset_id\n  }\n});\n\nfunction updateSelectedDataset(dataset) {\n  if (dataset) {\n    selectedDataset.value = dataset;\n    emit(\"update:modelValue\", dataset.dataset_id); // Emit the dataset_id\n  }\n}\n</script>\n\n<style scoped>\n.dataset-selector-container {\n  border: 1px solid #e0e0e0; /* 테두리를 회색으로 설정합니다. */\n  background-color: #fff; /* 배경색을 흰색으로 설정합니다. */\n  border-radius: 12px; /* 테두리의 모서리를 둥글게 처리합니다. */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 그림자를 추가하여 입체감을 줍니다. */\n  display: flex; /* flexbox 레이아웃을 사용하여 자식 요소들을 효율적으로 정렬합니다. */\n  flex-direction: column; /* 자식 요소들을 세로로 정렬합니다. */\n  overflow: hidden; /* 컨테이너의 크기를 벗어나는 내용을 숨깁니다. */\n  margin-top: 30px; /* 위쪽 마진을 추가합니다. */\n}\n\n.dataset-header {\n  text-align: left; /* 텍스트를 왼쪽에 정렬합니다. */\n  padding: 15px 20px; /* 헤더에 내부 여백을 추가합니다. */\n  background: #f8f8f8; /* 헤더 배경색을 연한 회색으로 설정합니다. */\n  font-size: 34px; /* 글꼴 크기를 설정합니다. */\n  font-weight: 600; /* 글꼴 두께를 강조합니다. */\n  color: #333; /* 글꼴 색상을 어두운 회색으로 설정합니다. */\n  border-bottom: 1px solid #ddd; /* 헤더 아래에 경계선을 추가합니다. */\n  margin-bottom: 0px;   /* 마진 0으로 안하면 리스트와 헤더 사이에 붕 뜸*/\n}\n\n.dataset-content {\n  display: flex; /* 데이터셋 리스트와 설명을 가로로 나란히 정렬합니다. */\n}\n\n.dataset-list ul {\n  list-style-type: none; /* 리스트의 기본 스타일을 없앱니다. */\n  padding: 0; /* 내부 여백을 제거합니다. */\n  margin: 0; /* 외부 여백을 제거합니다. */\n  width: 250px; /* 너비를 설정합니다. */\n  border-right: 1px solid #ddd; /* 오른쪽에 경계선을 추가합니다. */\n}\n\n.dataset-list li {\n  font-weight: bold;\n  padding: 15px 20px; /* 리스트 아이템에 내부 여백을 추가합니다. */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경합니다. */\n  transition: background-color 0.3s; /* 배경색 변경시 트랜지션 효과를 적용합니다. */\n  font-size: 19px; /* 글꼴 크기를 설정합니다. */\n  color: #333; /* 글꼴 색상을 어두운 회색으로 설정합니다. */\n  border-bottom: 1px solid #eee; /* 아래쪽에 경계선을 추가합니다. */\n}\n\n.dataset-list li:hover,\n.dataset-list li.selected {\n  background-color: #e3f2fd; /* 호버 또는 선택된 상태에서 배경색을 변경합니다. */\n}\n\n.dataset-description {\n  \n  padding: 20px; /* 설명 부분에 여백을 추가합니다. */\n  flex-grow: 1; /* 남은 공간을 모두 채웁니다. */\n  background-color: #fafafa; /* 배경색을 연한 회색으로 설정합니다. */\n  border-radius: 0 12px 12px 0; /* 오른쪽 모서리를 둥글게 처리합니다. */\n}\n\n.dataset-description p\n{\n  font-size: 22px; /* 글꼴 크기 */\n  color: #666; /* 글꼴 색상 */\n  margin-bottom: 10px; /* 아래쪽 마진 추가 */\n  line-height: 1.4; /* 줄 간격 설정 */\n\n}\n.dataset-description h3 {\n  \n  margin-top: 0; /* 위쪽 마진 제거 */\n  font-size: 25px; /* 글꼴 크기 */\n  color: #333; /* 글꼴 색상 */\n}\n\n@media (max-width: 768px) {\n  .dataset-selector-container {\n    flex-direction: column; /* 화면 크기가 작을 때 세로로 정렬합니다. */\n  }\n\n  .dataset-list ul {\n    width: auto; /* 너비를 자동으로 조절합니다. */\n    border-right: none; /* 오른쪽 경계선을 제거합니다. */\n  }\n\n  .dataset-list li {\n    border-bottom: none; /* 아래쪽 경계선을 제거합니다. */\n  }\n}\n\n</style>\n","import script from \"./DatasetSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DatasetSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DatasetSelector.vue?vue&type=style&index=0&id=bf15fc70&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bf15fc70\"]])\n\nexport default __exports__","<template>\n  <div class=\"hyperparameter-settings\">\n    <h2>하이퍼 파라미터 설정</h2>\n    <div class=\"hyperparameters\">\n      <div class=\"form-group\">\n        <label for=\"learningRate\">학습률</label>\n        <input\n          type=\"text\"\n          id=\"learningRate\"\n          v-model=\"localHyperparameters.learningRate\"\n          @input=\"handleLearningRateInput($event.target.value)\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"batchSize\">모델 학습 배치 사이즈</label>\n        <input\n          type=\"text\"\n          id=\"batchSize\"\n          v-model.number=\"localHyperparameters.batchSize\"\n          @input=\"emitUpdate\"\n          min=\"1\"\n          step=\"1\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"epochs\">모델 학습 횟수</label>\n        <input\n          type=\"text\"\n          id=\"epochs\"\n          v-model.number=\"localHyperparameters.epochs\"\n          @input=\"emitUpdate\"\n          min=\"1\"\n          step=\"1\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"optimizer\">최적화 함수</label>\n        <select id=\"optimizer\" v-model.number=\"localHyperparameters.optimizer\">\n          <option value=\"1\">Adam</option>\n          <option value=\"2\">SGD</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"lossFunction\">손실 함수</label>\n        <select\n          id=\"lossFunction\"\n          v-model.number=\"localHyperparameters.lossFunction\"\n        >\n          <option value=\"1\">Crossentropy</option>\n          <option value=\"2\">Mean Squared Error</option>\n        </select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, defineProps, defineEmits } from \"vue\";\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({\n      learningRate: \"\", // Default as number\n      batchSize: \"\", // Default as number\n      epochs: \"\", // Default as number\n      optimizer: \"\",\n      lossFunction: \"\",\n    }),\n  },\n});\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst localHyperparameters = ref({ ...props.modelValue });\n\nconst handleLearningRateInput = (value) => {\n  // 입력값이 유효한지 검사하는 정규식을 수정합니다.\n  if (value === \"\" || /^0(\\.\\d+)?$|^\\.\\d+$/.test(value)) {\n    localHyperparameters.value.learningRate = value;\n    emitUpdate();\n  }\n};\n\nwatch(\n  () => props.modelValue,\n  (newValue) => {\n    if (newValue) {\n      localHyperparameters.value = { ...newValue };\n    }\n  },\n  { deep: true },\n);\n\nconst emitUpdate = () => {\n  // `parseFloat` 또는 `parseInt`를 사용하여 숫자로 변환\n  const updatedHyperparameters = {\n    learningRate: parseFloat(localHyperparameters.value.learningRate),\n    batchSize: parseInt(localHyperparameters.value.batchSize),\n    epochs: parseInt(localHyperparameters.value.epochs),\n    optimizer: localHyperparameters.value.optimizer\n      ? parseInt(localHyperparameters.value.optimizer, 10)\n      : 1, // Providing default value as 1\n    lossFunction: localHyperparameters.value.lossFunction\n      ? parseInt(localHyperparameters.value.lossFunction, 10)\n      : 1, // Providing default value as 1\n  };\n\n  emit(\"update:modelValue\", updatedHyperparameters);\n};\n</script>\n\n<style scoped>\n\n\n\n.hyperparameter-settings {\n  max-width: 100%;\n  margin-top : 15px;\n  margin-left : 8px;\n}\n.hyperparameter-settings h2 {\n  font-size: 34px; /* 글꼴 크기를 설정합니다. */\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  font-size : 20px;\n}\n\n.hyperparameters {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.form-group {\n  flex: 1;\n  min-width: 160px; /* Adjust the minimum width as needed */\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input,\n.form-group select {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n</style>\n","import script from \"./HyperparameterSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HyperparameterSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HyperparameterSelector.vue?vue&type=style&index=0&id=227195b9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-227195b9\"]])\n\nexport default __exports__","<template>\n  <div class=\"node-selector-container\">\n    <!-- Header above the entire container -->\n    <div class=\"node-header\">\n      <h2>학습 노드 선택</h2>\n    </div>\n    <!-- Main content area for node selection -->\n    <div class=\"node-content\">\n      <!-- Node list on the far left -->\n      <div class=\"node-list\">\n        <ul>\n          <li\n  v-for=\"node in nodes\"\n  :key=\"node.id\"\n  @click=\"toggleNodeSelection(node)\"\n  :class=\"{ selected: isNodeSelected(node), unselectable: node.status !== 0 }\"\n>\n  {{ node.name }}\n</li>\n\n        </ul>\n      </div>\n\n      <div class=\"node-description\" v-if=\"selectedNode\">\n        <h3>{{ selectedNode.name }} 설명</h3>\n        <!-- Display additional node details -->\n        <div class=\"node-details\">\n          <p>CPU 코어 갯수: {{ selectedNode.cpu_core_count }}</p>\n          <p>총 메모리 크기: {{ selectedNode.total_memory_mb }} MB</p>\n          <p>총 디스크 크기: {{ selectedNode.total_disk_mb }} MB</p>\n         <p>\n    <span class=\"status-label\">상태: {{ nodeStatusDescription(selectedNode.status) }}</span> \n  </p>\n          <p v-if=\"selectedNode.instance\">\n            인스턴스: {{ selectedNode.instance }}\n          </p>\n          <p v-if=\"selectedNode.gpu_info\">\n            GPU 정보: {{ selectedNode.gpu_info }}\n          </p>\n\n          </div>\n      </div>\n      <div class=\"node-description\" v-else>\n        <h3>학습 노드를 선택해주세요.</h3>\n      </div>\n\n      <!-- List of selected nodes on the far right -->\n      <div class=\"selected-nodes\">\n        <h3>{{ sortedSelectedNodes.length > 0 ? '선택된 노드' : '선택된 노드가 없습니다.' }}</h3>\n        <ul v-if=\"sortedSelectedNodes.length > 0\">\n          <li v-for=\"node in sortedSelectedNodes\" :key=\"node.id\">\n            {{ node.name }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst nodes = computed(() => {\n  const unsortedNodes = store.getters.userNodes || [];\n  return unsortedNodes.sort((a, b) => a.name.localeCompare(b.name)); // Sort alphabetically by name\n});\n\nconst props = defineProps({\n  modelValue: {\n    type: Array,\n    default: () => [], // Provide a default empty array\n  },\n});\n\nconst isNodeSelected = (node) => {\n  return props.modelValue.some(\n    (selectedNode) => selectedNode.node_id === node.node_id,\n  );\n};\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nonMounted(async () => {\n  await store.dispatch(\"fetchNodes\"); // 노드 정보 가져와서 마운트하기.\n});\n\nconst selectedNode = ref(null);\n\nconst toggleNodeSelection = (node) => {\n  if (node.status !== 0) {\n    // If the node is not in a waiting state, display its details without selecting it\n    selectedNode.value = node;\n    console.error(\"Node is not in a waiting state and cannot be selected.\");\n    return; // Exit early without changing the selection\n  }\n\n  const isSelected = props.modelValue.some(\n    (selectedNode) => selectedNode.node_id === node.node_id,\n  );\n  let newSelectedNodes = isSelected\n    ? props.modelValue.filter(\n        (selectedNode) => selectedNode.node_id !== node.node_id,\n      )\n    : [...props.modelValue, node];\n\n  emit(\"update:modelValue\", newSelectedNodes);\n\n  // Set or unset the selectedNode for displaying details\n  selectedNode.value = isSelected ? null : node;\n};\n\nconst nodeStatusDescription = (status) => {\n  const statusMap = {\n    0: \"대기중\",\n    1: \"학습중\",\n    2: \"학습완료\",\n  };\n  return statusMap[status] || \"Unknown status\";\n};\n\nconst sortedSelectedNodes = computed(() => {\n  if (!Array.isArray(props.modelValue)) {\n    return []; // Return an empty array if props.modelValue is not an array\n  }\n  // Proceed with sorting if props.modelValue is an array\n  return [...props.modelValue].sort((a, b) => a.name.localeCompare(b.name));\n});\n</script>\n\n<style scoped>\n.node-list li:not(.unselectable):hover {\n  background-color: #e3f2fd;\n}\n.status-label {\n  color: red; /* 빨간색 텍스트 */\n}\n/* 선택할 수 없는 노드의 스타일 */\n.node-list li.unselectable {\n  background-color: #FF7F50; /* Coral */\n  color: #333;\n  font-weight: bold;\n  cursor: not-allowed; /* 마우스 커서 변경 */\n}\n.node-list li.unselectable:hover {\n  background-color: #FF7F50; /* 유지될 Coral 색상 */\n}\n.node-description h3\n{\n  font-size: 30px;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n.node-selector-container {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #e0e0e0;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n.node-description p {\n  font-size: 19px; /* 폰트 사이즈를 25px에서 16px로 변경 */\n  margin-bottom: 5px; /* 위아래 간격을 적절하게 조절 */\n  font-weight: bold;\n}\n\n.node-header {\n  padding: 15px 20px;\n  background-color: #f8f8f8;\n  text-align: left;\n  font-size: 20px;\n  font-weight: 600;\n  color: #333;\n  border-bottom: 1px solid #ddd;\n}\n\n.node-header h2 {\n  margin: 0;\n  font-size: 34px;\n}\n\n.node-content {\n  display: flex;\n  flex-wrap: wrap; /* Enables the content to wrap onto the next line as needed */\n}\n\n.node-list,\n.node-description,\n.selected-nodes {\n  padding: 20px;\n  flex-basis: 33.3333%;\n  flex-grow: 1;\n  border-right: 1px solid #ddd;\n}\n\n.node-list ul,\n.selected-nodes ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.node-list li,\n.selected-nodes li {\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: 1px solid #eee;\n  transition: background-color 0.3s;\n  font-size: 20px;\n  color: #333;\n  font-weight: bold;\n}\n\n\n.node-list li:hover,\n.node-list li.selected,\n.selected-nodes li:hover {\n  background-color: #e3f2fd;\n}\n\n/* Remove border from the last element of the main content */\n.selected-nodes {\n  border-right: none;\n}\n\n@media (max-width: 768px) {\n  .node-content {\n    flex-direction: column;\n  }\n\n  .node-list,\n  .node-description,\n  .selected-nodes {\n    border-right: none;\n    border-bottom: 1px solid #ddd;\n    flex-basis: auto;\n  }\n\n\n\n  .selected-nodes {\n    border-bottom: none;\n  }\n}\n\n</style>\n","import script from \"./NodeSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NodeSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NodeSelector.vue?vue&type=style&index=0&id=efa9df14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-efa9df14\"]])\n\nexport default __exports__","<script setup>\nimport { reactive, ref, computed, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport ModelselectBox from \"./components/ModelSelector.vue\";\nimport DatasetselectBox from \"./components/DatasetSelector.vue\";\nimport HyperparameterselectBox from \"./components/HyperparameterSelector.vue\";\nimport NodeselectBox from \"./components/NodeSelector.vue\";\nimport axios from \"axios\";\n\nconst store = useStore();\nconst router = useRouter(); // Instantiate the router\nconst isCreatingProject = ref(false);\nconst creationSuccess = ref(false); // New ref to track creation success\nconst authToken = computed(() => store.state.authToken);\n\nconst projectData = reactive({\n  model: {}, // Initially an object, later to be just a string of model_id\n  dataset: {}, // Initially an object, later to be just a string of dataset_id\n  hyperparameters: {}, // Already in the desired format\n  nodes: [], // Initially an array of objects, later to be an array of node names\n});\n\nwatch(\n  projectData.hyperparameters,\n  (newVal) => {\n    console.log(\"Hyperparameters updated:\", newVal);\n  },\n  { deep: true },\n);\n\nwatch(creationSuccess, (newValue) => {\n  if (newValue) {\n    alert(\"프로젝트가 생성되었습니다.\"); // Alert the user about success\n    creationSuccess.value = false; // Reset the creation success state\n    router.push(\"/dashboard-default\"); // Redirect to the Dashboard page\n  }\n});\n\n// const handleSelectedNodeChange = (selectedNode) => {\n//   const index = projectData.nodes.findIndex(node => node.id === selectedNode.id);\n//   if (index > -1) {\n//     // Node is already selected, remove it\n//     projectData.nodes.splice(index, 1);\n//   } else {\n//     // Node is not selected, add it\n//     projectData.nodes.push(selectedNode);\n//   }\n// };\n\nconst prepareDataForSubmission = () => {\n  return {\n    model: projectData.model.model_id,\n    dataset: projectData.dataset.dataset_id,\n    hyperparameters: {\n      ...projectData.hyperparameters,\n      optimizer: projectData.hyperparameters.optimizer,\n      lossFunction: projectData.hyperparameters.lossFunction,\n    },\n    nodes: projectData.nodes.map((node) => node.name),\n  };\n};\n\nconst hyperparametersSelected = (newHyperparameters) => {\n  projectData.hyperparameters = {\n    ...projectData.hyperparameters,\n    ...newHyperparameters,\n  };\n};\n\n// Method to send data to backend\nconst createProject = async () => {\n  try {\n    isCreatingProject.value = true;\n    const formattedData = prepareDataForSubmission(); // 전달 데이터 형식 변경\n    lastSubmittedData.value = formattedData;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${authToken.value}`,\n      },\n    };\n\n    const response = await axios.post(\n      \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/create-project\",\n      formattedData,\n      config,\n    );\n\n    // 프로젝트 생성이 성공했다면, 노드 정보 업데이트\n    if (response && response.status === 200) {\n      console.log(\"Project created successfully:\", response.data);\n      // 프로젝트 생성 후 노드 정보 새로고침\n      await store.dispatch(\"fetchNodes\");\n      creationSuccess.value = true; // Indicate that the project was created\n      // 성공 메시지 처리 또는 사용자 인터페이스 업데이트 등의 추가적인 처리를 여기에 추가할 수 있습니다.\n    }\n    console.log(response.data);\n    // Handle successful project creation (e.g., redirect or show message)\n  } catch (error) {\n    console.error(\"Failed to create project:\", error);\n    // Handle errors (e.g., show error message)\n  } finally {\n    isCreatingProject.value = false;\n  }\n};\n\nconst modelIdSelected = (modelId) => {\n  if (modelId) {\n    const fullModel = store.state.models.find(\n      (model) => model.model_id === modelId,\n    );\n    if (fullModel) {\n      projectData.model = fullModel; // Assign the full model object\n    } else {\n      console.error(\"Model not found!\");\n    }\n  }\n};\n\nconst datasetSelected = (datasetId) => {\n  projectData.dataset = { dataset_id: datasetId };\n};\n\nconst lastSubmittedData = ref(null); // 백엔드로 마지막으로 전송된 데이터를 저장\n</script>\n\n<template>\n  <div class=\"container-fluid\">\n    <div class=\"py-5-container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <ModelselectBox @update:modelValue=\"modelIdSelected\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <DatasetselectBox @update:modelValue=\"datasetSelected\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <HyperparameterselectBox\n            @update:modelValue=\"hyperparametersSelected\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <NodeselectBox v-model=\"projectData.nodes\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"create-project-button-container\">\n      <button\n        class=\"create-project-button\"\n        @click=\"createProject\"\n        :disabled=\"isCreatingProject\"\n      >\n        {{ isCreatingProject ? \"생성 중\" : \"프로젝트 생성\" }}\n      </button>\n    </div>\n    \n  </div>\n</template>\n<style scoped>\n.py-5-container-fluid {\n  padding: 10px;\n  height: 270px;\n}\n\n.container-fluid {\n  padding: 10px; /* 모든 패딩 제거 */\n}\n\n.create-project-button-container {\n  text-align: right; /* 버튼을 오른쪽 정렬 */\n  padding: 0px 0px; /* 상단과 하단 여백 */\n}\n\n.create-project-button {\n  padding: 10px 30px; /* 버튼 내부 패딩 */\n  margin-top: 20px; /* 버튼 위쪽 여백 */\n  margin-bottom: 0; /* 버튼 아래쪽 여백 제거 */\n  background-color: #4CAF50; /* 진한 초록색 배경 */\n  color: white; /* 텍스트 색상을 흰색으로 변경 */\n  font-size: 18px; /* 글꼴 크기 증가 */\n  font-weight: bold; /* 글꼴 두께를 굵게 */\n  border: none; /* 테두리 제거 */\n  border-radius: 8px; /* 둥근 모서리 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 추가 */\n  cursor: pointer;\n  transition: all 0.3s ease; /* 부드러운 전환 효과 */\n}\n\n.create-project-button:hover {\n  background-color: #45a049; /* 호버 상태의 배경색 변경 */\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* 호버 시 그림자 확대 */\n}\n\n.last-submitted-data-container {\n  margin-top: 20px;\n  background-color: #fbfafa;\n  padding: 15px;\n  border-radius: 5px;\n}\n\nbutton {\n  border-radius: 5px; /* 버튼 모서리 둥글게 */\n  background-color: #90ee90; /* 밝은 초록색 배경 */\n  border: none; /* 테두리 없음 */\n  padding: 10px 20px; /* 내부 패딩 */\n  color: rgb(0, 0, 0); /* 글자 색상 */\n  font-size: 16px; /* 글자 크기 */\n  cursor: pointer; /* 커서 포인터 */\n  transition: background-color 0.3s; /* 배경색 변경 애니메이션 */\n  margin-right : 10px;\n}\n\nbutton:hover {\n  background-color: #76c893; /* 버튼 호버 색상 변경 */\n}\n</style>\n","import script from \"./Tables.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Tables.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Tables.vue?vue&type=style&index=0&id=82698f5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-82698f5a\"]])\n\nexport default __exports__","import script from \"./Navbar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Navbar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <!-- -------- START FOOTER 3 w/ COMPANY DESCRIPTION WITH LINKS & SOCIAL ICONS & COPYRIGHT ------- -->\n  <footer class=\"py-5 footer\">\n    <div class=\"container\">\n      <div class=\"row\"></div>\n      <div class=\"row\">\n        <div class=\"mx-auto mt-1 text-center col-8\">\n          <p class=\"mb-0 text-secondary\">\n            Copyright © {{ new Date().getFullYear() }} Soft by Creative Tim.\n          </p>\n        </div>\n      </div>\n    </div>\n  </footer>\n</template>\n","import { render } from \"./Footer.vue?vue&type=template&id=4c1558d0\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nconst emit = defineEmits([\"update:modelValue\"]);\n\ndefineProps({\n  size: {\n    type: String,\n    default: \"default\",\n  },\n  success: {\n    type: Boolean,\n    default: false,\n  },\n  error: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String,\n    default: \"\",\n  },\n  iconDir: {\n    type: String,\n    default: \"\",\n  },\n  name: {\n    type: String,\n    default: \"\",\n  },\n  id: {\n    type: String,\n    default: \"\",\n  },\n  modelValue: {\n    type: String,\n    default: \"\",\n  },\n  placeholder: {\n    type: String,\n    default: \"\",\n  },\n  type: {\n    type: String,\n    default: \"text\",\n  },\n  isRequired: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst getClasses = (size, success, error) => {\n  let sizeValue, isValidValue;\n\n  sizeValue = size ? `form-control-${size}` : null;\n\n  if (error) {\n    isValidValue = \"is-invalid\";\n  } else if (success) {\n    isValidValue = \"is-valid\";\n  } else {\n    isValidValue = \"\";\n  }\n\n  return `${sizeValue} ${isValidValue}`;\n};\nconst getIcon = (icon) => (icon ? icon : null);\nconst hasIcon = (icon) => (icon ? \"input-group\" : null);\n</script>\n<template>\n  <div class=\"form-group\">\n    <div :class=\"hasIcon(icon)\">\n      <span v-if=\"iconDir === 'left'\" class=\"input-group-text\">\n        <i :class=\"getIcon(icon)\"></i>\n      </span>\n      <input\n        :id=\"id\"\n        :type=\"type\"\n        class=\"form-control\"\n        :class=\"getClasses(size, success, error)\"\n        :name=\"name\"\n        :value=\"modelValue\"\n        :placeholder=\"placeholder\"\n        :isRequired=\"isRequired\"\n        @input=\"emit('update:modelValue', $event.target.value)\"\n      />\n      <span v-if=\"iconDir === 'right'\" class=\"input-group-text\">\n        <i :class=\"getIcon(icon)\"></i>\n      </span>\n    </div>\n  </div>\n</template>\n","import script from \"./ArgonInput.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArgonInput.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\ndefineProps({\n  color: {\n    type: String,\n    default: \"success\",\n  },\n  size: {\n    type: String,\n    default: \"md\",\n  },\n  variant: {\n    type: String,\n    default: \"fill\",\n  },\n  fullWidth: {\n    type: Boolean,\n    default: false,\n  },\n  active: {\n    type: Boolean,\n    default: false,\n  },\n});\nconst getClasses = (variant, color, size, fullWidth, active) => {\n  let colorValue, sizeValue, fullWidthValue, activeValue;\n\n  // Setting the button variant and color\n  if (variant === \"gradient\") {\n    colorValue = `bg-gradient-${color}`;\n  } else if (variant === \"outline\") {\n    colorValue = `btn-outline-${color}`;\n  } else {\n    colorValue = `btn-${color}`;\n  }\n\n  sizeValue = size ? `btn-${size}` : null;\n\n  fullWidthValue = fullWidth ? `w-100` : null;\n\n  activeValue = active ? `active` : null;\n\n  return `${colorValue} ${sizeValue} ${fullWidthValue} ${activeValue}`;\n};\n</script>\n<template>\n  <button\n    class=\"btn mb-0\"\n    :class=\"getClasses(variant, color, size, fullWidth, active)\"\n  >\n    <slot />\n  </button>\n</template>\n","import script from \"./ArgonButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArgonButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\n\nimport Navbar from \"@/examples/PageLayout/Navbar.vue\";\nimport AppFooter from \"@/examples/PageLayout/Footer.vue\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nconst body = document.getElementsByTagName(\"body\")[0];\n\nconst router = useRouter();\n\nconst name = ref(\"\");\nconst email = ref(\"\");\nconst password = ref(\"\");\nconst confirmPassword = ref(\"\");\n\nconst submitForm = async () => {\n  if (password.value !== confirmPassword.value) {\n    alert(\"비밀번호가 일치하지 않습니다.\");\n    return; // 비밀번호가 일치하지 않으면 여기서 처리를 중단합니다.\n  }\n  const formData = {\n    name: name.value,\n    email: email.value,\n    password: password.value,\n  };\n\n  try {\n    const response = await axios.post(\n      \"http://ec2-3-36-137-217.ap-northeast-2.compute.amazonaws.com:5000/api/signup\",\n      formData,\n    );\n    console.log(response.data);\n    // 회원 가입 성공 메시지\n    alert(\n      \"회원 가입에 성공하셨습니다. 확인을 누르시면 로그인 화면으로 이동합니다\",\n    );\n    // 5초 후 로그인 페이지로 리디렉션\n    setTimeout(() => {\n      router.push(\"/signin\");\n    }, 0);\n  } catch (error) {\n    console.error(error);\n    alert(\"회원 가입에 실패했습니다.\"); // 회원 가입 실패 메시지\n  }\n};\n\nconst store = useStore();\nonBeforeMount(() => {\n  store.state.hideConfigButton = true;\n  store.state.showNavbar = false;\n  store.state.showSidenav = false;\n  store.state.showFooter = false;\n  body.classList.remove(\"bg-gray-100\");\n});\nonBeforeUnmount(() => {\n  store.state.hideConfigButton = false;\n  store.state.showNavbar = true;\n  store.state.showSidenav = true;\n  store.state.showFooter = true;\n  body.classList.add(\"bg-gray-100\");\n});\n</script>\n<template>\n  <div class=\"container top-0 position-sticky z-index-sticky\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <navbar isBtn=\"bg-gradient-light\" />\n      </div>\n    </div>\n  </div>\n  <main class=\"main-content mt-0\">\n    <div\n      class=\"page-header align-items-start min-vh-50 pt-5 pb-11 m-3 border-radius-lg\"\n      :style=\"{\n        backgroundImage:\n          'url(' + require('@/assets/img/cloud_background.png') + ')',\n        backgroundPosition: 'top',\n      }\"\n    >\n      <span class=\"mask bg-gradient-dark opacity-6\"></span>\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg-5 text-center mx-auto\">\n            <h1 class=\"text-white mb-4 mt-4\">안녕하세요</h1>\n            <p class=\"text-lead text-white\">\n              CCRC 연구센터 병렬학습 프레임워크 대시보드에 오신 것을 환영합니다.\n              먼저 회원가입을 진행해주시길 바랍니다.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"row mt-lg-n10 mt-md-n11 mt-n10 justify-content-center\">\n        <div class=\"col-xl-4 col-lg-5 col-md-7 mx-auto\">\n          <div class=\"card z-index-0\">\n            <div class=\"card-header text-center pt-4\">\n              <h5>사용자 정보를 입력해주세요</h5>\n            </div>\n            <div class=\"card-body\">\n              <form @submit.prevent=\"submitForm\">\n                <argon-input\n                  id=\"name\"\n                  type=\"text\"\n                  placeholder=\"이름\"\n                  aria-label=\"Name\"\n                  v-model=\"name\"\n                />\n                <argon-input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"이메일\"\n                  aria-label=\"Email\"\n                  v-model=\"email\"\n                />\n                <argon-input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"비밀번호\"\n                  aria-label=\"Password\"\n                  v-model=\"password\"\n                />\n                <argon-input\n                  id=\"confirm_password\"\n                  type=\"password\"\n                  placeholder=\"비밀번호 확인\"\n                  aria-label=\"confirm_Password\"\n                  v-model=\"confirmPassword\"\n                />\n                <div class=\"text-center\">\n                  <argon-button\n                    type=\"submit\"\n                    fullWidth\n                    color=\"dark\"\n                    variant=\"gradient\"\n                    class=\"my-4 mb-2\"\n                    >회원 가입</argon-button\n                  >\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  <app-footer />\n</template>\n","import script from \"./Signup.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Signup.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { ref } from \"vue\";\nimport Navbar from \"@/examples/PageLayout/Navbar.vue\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nimport { useRouter } from \"vue-router\";\n\nconst body = document.getElementsByTagName(\"body\")[0];\nconst router = useRouter();\nconst email = ref(\"\");\nconst password = ref(\"\");\n\nconst signin = async () => {\n  if (email.value.trim() === \"\" || password.value.trim() === \"\") {\n    alert(\"이메일과 비밀번호를 모두 입력해주세요.\");\n    return;\n  }\n\n  try {\n    await store.dispatch(\"signin\", {\n      email: email.value,\n      password: password.value,\n    });\n    // After successful login, redirect to the dashboard page\n    router.push(\"/dashboard-default\");\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    // Handle login failure (e.g., show an error message to the user)\n  }\n};\n\nconst goToSignup = () => {\n  router.push(\"/signup\");\n};\n\nconst store = useStore();\nonBeforeMount(() => {\n  store.state.hideConfigButton = true;\n  store.state.showNavbar = false;\n  store.state.showSidenav = false;\n  store.state.showFooter = false;\n  body.classList.remove(\"bg-gray-100\");\n});\nonBeforeUnmount(() => {\n  store.state.hideConfigButton = false;\n  store.state.showNavbar = true;\n  store.state.showSidenav = true;\n  store.state.showFooter = true;\n  body.classList.add(\"bg-gray-100\");\n});\n</script>\n<template>\n  <div class=\"container top-0 position-sticky z-index-sticky\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <navbar\n          isBlur=\"blur  border-radius-lg my-3 py-2 start-0 end-0 mx-4 shadow\"\n          v-bind:darkMode=\"true\"\n          isBtn=\"bg-gradient-success\"\n        />\n      </div>\n    </div>\n  </div>\n  <main class=\"mt-0 main-content\">\n    <section>\n      <div class=\"page-header min-vh-100\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div\n              class=\"mx-auto col-xl-4 col-lg-5 col-md-7 d-flex flex-column mx-lg-0\"\n            >\n              <div class=\"card card-plain\">\n                <div class=\"pb-0 card-header text-start\">\n                  <h4 class=\"font-weight-bolder\">로그인</h4>\n                  <p class=\"mb-0\">이메일과 비밀번호를 입력하세요</p>\n                </div>\n                <div class=\"card-body\">\n                  <form @submit.prevent=\"signin\">\n                    <div class=\"mb-3\">\n                      <argon-input\n                        v-model=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        size=\"lg\"\n                      />\n                    </div>\n                    <div class=\"mb-3\">\n                      <argon-input\n                        v-model=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        size=\"lg\"\n                      />\n                    </div>\n                    <div class=\"text-center\">\n                      <argon-button\n                        type=\"submit\"\n                        class=\"mt-4\"\n                        variant=\"gradient\"\n                        color=\"success\"\n                        fullWidth\n                        size=\"lg\"\n                        >로그인</argon-button\n                      >\n                    </div>\n                  </form>\n                </div>\n                <div class=\"px-1 pt-0 text-center card-footer px-lg-2\">\n                  <p class=\"mx-auto mb-4 text-sm\">\n                    계정이 없으신가요?\n                    <a\n                      class=\"text-success text-gradient font-weight-bold\"\n                      @click=\"goToSignup\"\n                      style=\"cursor: pointer\"\n                      >회원 가입</a\n                    >\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"top-0 my-auto text-center col-6 d-lg-flex d-none h-100 pe-0 position-absolute end-0 justify-content-center flex-column\"\n            >\n              <div\n                class=\"position-relative bg-gradient-primary h-100 m-3 px-7 border-radius-lg d-flex flex-column justify-content-center overflow-hidden\"\n                style=\"\n                  background-image: url(&quot;https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro/assets/img/signin-ill.jpg&quot;);\n                  background-size: cover;\n                \"\n              >\n                <span class=\"mask bg-gradient-success opacity-6\"></span>\n                <h4\n                  class=\"mt-5 text-white font-weight-bolder position-relative\"\n                >\n                  \"태어나려는 자는 하나의 세계를 깨뜨려야 한다\"\n                </h4>\n                <p class=\"text-white position-relative\">\n                  -헤르만 헤세 데미안 중에서-\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </main>\n</template>\n","import script from \"./Signin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Signin.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"monitoring\">\r\n    <!-- 화면에 보여질 내용이 없으므로 빈 div를 사용합니다. -->\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'Monitoring',\r\n  created() {\r\n    // 컴포넌트가 생성되자마자 특정 URL로 새 탭에서 열립니다.\r\n    window.open(\"http://13.124.158.135:3000/d/rYdddlPWk/metic-monitoring?orgId=1&refresh=1m\", \"_blank\");\r\n    \r\nconst router = useRouter();\r\n    setTimeout(() => {\r\n      router.push({ name: 'Dashboard' });\r\n    }, 100);\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 스타일은 필요에 따라 추가하십시오 */\r\n</style>\r\n","import { render } from \"./Monitoring.vue?vue&type=template&id=2c433944\"\nimport script from \"./Monitoring.vue?vue&type=script&lang=js\"\nexport * from \"./Monitoring.vue?vue&type=script&lang=js\"\n\nimport \"./Monitoring.vue?vue&type=style&index=0&id=2c433944&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\nimport Dashboard from \"../views/Dashboard.vue\";\nimport Tables from \"../views/Tables.vue\";\nimport Signup from \"../views/Signup.vue\";\nimport Signin from \"../views/Signin.vue\";\nimport store from \"../store/index.js\";\nimport Monitoring from \"../views/components/Monitoring.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"/\",\n    redirect: \"/signin\",\n  },\n  {\n    path: \"/dashboard-default\",\n    name: \"Dashboard\",\n    component: Dashboard,\n    // 이 라인 추가: 대시보드 페이지는 로그인이 필요\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    component: Tables,\n    // 이 라인 추가: 테이블 페이지는 로그인이 필요\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/signin\",\n    name: \"Signin\",\n    component: Signin,\n  },\n  {\n    path: \"/signup\",\n    name: \"Signup\",\n    component: Signup,\n  },\n  {\n    path:\"/monitoring\",\n    name:\"Monitoring\",\n    component: Monitoring,\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  linkActiveClass: \"active\",\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (\n    to.matched.some((record) => record.meta.requiresAuth) &&\n    !store.state.authToken\n  ) {\n    // 이 페이지는 인증이 필요하고, 사용자가 로그인하지 않았습니다.\n    console.log(\"Redirecting to login...\");\n    next(\"/signin\");\n  } else {\n    // 인증이 필요 없는 페이지이거나, 이미 로그인되어 있습니다.\n    console.log(\"Proceeding to route:\", to.path);\n    next();\n  }\n});\n\nexport default router;\n","import \"./assets/js/nav-pills.js\";\nimport \"./assets/scss/argon-dashboard.scss\";\n\nexport default {\n  install() {},\n};\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\nimport router from \"./router\";\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/css/nucleo-svg.css\";\nimport ArgonDashboard from \"./argon-dashboard\";\n\nconst appInstance = createApp(App);\nappInstance.use(store);\nappInstance.use(router);\nappInstance.use(ArgonDashboard);\nappInstance.mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfront_end\"] = self[\"webpackChunkfront_end\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6221); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["store","useStore","isRTL","computed","state","sidebarMinimize","commit","minimizeSidebar","window","innerWidth","__exports__","getRoute","route","useRoute","routeArr","path","split","layout","sidebarType","darkMode","isNavFixed","router","useRouter","userEmail","currentRouteName","currentRoute","value","name","currentDirectory","dir","charAt","toUpperCase","slice","logout","dispatch","then","push","catch","error","console","isAbsolute","showSidenav","showNavbar","showFooter","showConfig","hideConfigButton","toggleConfigurator","navClasses","createStore","isPinned","mcolor","showNavs","showMain","authToken","sessionStorage","getItem","models","datasets","projects","nodes","nodesData","maxHistoricalEntries","selectedProjectNodeNames","projectsInfo","selectedProjectId","monitoringData","mutations","sidenav_show","document","querySelector","classList","add","remove","payload","navbarFixed","setAuthToken","token","setItem","setUserEmail","email","clearAuthToken","removeItem","setModels","setDatasets","setProjects","getMonitoringData","setNodes","setRealTimeData","nodeName","key","realTime","historical","addHistoricalDataEntry","dataArray","Array","isArray","log","length","shift","setSelectedProjectNodeNames","nodeNames","setProjectInfo","project","id","setSelectedProjectId","projectId","actions","toggleSidebarColor","signin","credentials","Promise","resolve","reject","axios","post","response","data","access_token","fetchModels","get","fetchDatasets","fetchProjects","headers","Authorization","fetchNodes","fetchData","updateSelectedProjectNodeNames","fetchProjectInfoById","updateSelectedProjectId","getters","userProjects","userNodes","getNodeData","getNodeMemory","node","memoryFree","getNodeDisk","diskFree","getNodeGpuTem","gpuTemperature","intervalId","projectsFromStore","lastFiveProjects","totalProjects","Math","max","reverse","selectedProject","ref","watch","newProjects","deep","newProject","selectProject","status","JSON","parse","project_nodes","isFirst","onMounted","setInterval","executePeriodically","onUnmounted","clearInterval","parseNodes","nodesJson","join","e","stopTraining","async","success","Error","alert","updatedProject","find","p","Chart","register","registerables","lineChart1","lineChart2","pieChart1","pieChart2","currentepoch","generateLabels","map","_","index","myLineChart1","myLineChart2","myPieChart1","myPieChart2","setupCharts","nextTick","destroy","lineChart1Ctx","getContext","type","labels","projectInfo","accuracyHistory","label","fill","borderColor","tension","options","scales","x","ticks","font","size","y","plugins","legend","lineChart2Ctx","lossHistory","cpuUtilizationKeys","Object","keys","node_cpu_utilization_list","gpuUtilizationKeys","node_gpu_utilization_list","cpuUtilizationValues","values","gpuUtilizationValues","every","pieChart1Ctx","backgroundColor","tooltip","bodyFont","pieChart2Ctx","startFetching","epoch","currentstate","newId","immediate","gpuUtilizationList","node_gpu_utilization","cpuUtilizationList","node_cpu_utilization","progress","accuracy","loss","current_state","emit","__emit","selectedModel","updateSelectedModel","model","model_id","selectedDataset","updateSelectedDataset","dataset","dataset_id","props","__props","localHyperparameters","modelValue","handleLearningRateInput","test","learningRate","emitUpdate","newValue","updatedHyperparameters","parseFloat","batchSize","parseInt","epochs","optimizer","lossFunction","unsortedNodes","sort","a","b","localeCompare","isNodeSelected","some","selectedNode","node_id","toggleNodeSelection","isSelected","newSelectedNodes","filter","nodeStatusDescription","statusMap","sortedSelectedNodes","isCreatingProject","creationSuccess","projectData","reactive","hyperparameters","newVal","prepareDataForSubmission","hyperparametersSelected","newHyperparameters","createProject","formattedData","lastSubmittedData","config","modelIdSelected","modelId","fullModel","datasetSelected","datasetId","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","Date","getFullYear","script","render","getClasses","sizeValue","isValidValue","getIcon","icon","hasIcon","variant","color","fullWidth","active","colorValue","fullWidthValue","activeValue","body","getElementsByTagName","password","confirmPassword","submitForm","formData","setTimeout","onBeforeMount","onBeforeUnmount","trim","goToSignup","created","open","routes","redirect","component","Dashboard","meta","requiresAuth","Tables","Signin","Signup","Monitoring","createRouter","history","createWebHistory","process","linkActiveClass","beforeEach","to","from","next","matched","record","install","appInstance","createApp","App","use","ArgonDashboard","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}