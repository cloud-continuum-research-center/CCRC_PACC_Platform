{"ast":null,"code":"import { ref, watch, emit } from 'vue';\n\n// Accepts the current value via v-model in the parent component\n\nexport default {\n  __name: 'DatasetSelector',\n  props: {\n    modelValue: Object\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const datasets = ref([{\n      id: 1,\n      name: 'Dataset A',\n      description: 'Description of Dataset A',\n      selected: false\n    }, {\n      id: 2,\n      name: 'Dataset B',\n      description: 'Description of Dataset B',\n      selected: false\n    }\n    // Continue adding datasets here\n    ]);\n    const selectedDataset = ref(props.modelValue || datasets.value[0]); // Initialize with the first dataset\n\n    const selectDataset = dataset => {\n      selectedDataset.value = dataset;\n      emit('update:modelValue', dataset);\n    };\n\n    // Watch for external changes to modelValue and update selectedDataset accordingly\n    watch(() => props.modelValue, newVal => {\n      selectedDataset.value = newVal;\n    });\n    const __returned__ = {\n      props,\n      datasets,\n      selectedDataset,\n      selectDataset,\n      ref,\n      watch,\n      emit\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","emit","props","__props","datasets","id","name","description","selected","selectedDataset","modelValue","value","selectDataset","dataset","newVal"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/DatasetSelector.vue"],"sourcesContent":["<template>\r\n    <div class=\"dataset-selector-container\">\r\n      <h2 class=\"dataset-header\">Dataset Selection</h2>\r\n      <div class=\"dataset-content\">\r\n        <div class=\"dataset-list\">\r\n          <ul>\r\n            <li v-for=\"dataset in datasets\" :key=\"dataset.id\" @click=\"selectDataset(dataset)\" :class=\"{ selected: dataset.id === selectedDataset.id }\">\r\n              {{ dataset.name }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"dataset-description\">\r\n          <h3>{{ selectedDataset.name }}</h3>\r\n          <p>{{ selectedDataset.description }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, defineProps, watch, emit } from 'vue';\r\n  \r\n  // Accepts the current value via v-model in the parent component\r\n  const props = defineProps({\r\n    modelValue: Object\r\n  });\r\n\r\n  const datasets = ref([\r\n    { id: 1, name: 'Dataset A', description: 'Description of Dataset A', selected: false },\r\n    { id: 2, name: 'Dataset B', description: 'Description of Dataset B', selected: false },\r\n    // Continue adding datasets here\r\n  ]);\r\n  \r\n  const selectedDataset = ref(props.modelValue || datasets.value[0]); // Initialize with the first dataset\r\n  \r\n  const selectDataset = (dataset) => {\r\n    selectedDataset.value = dataset;\r\n  emit('update:modelValue', dataset);\r\n  };\r\n\r\n  // Watch for external changes to modelValue and update selectedDataset accordingly\r\nwatch(() => props.modelValue, (newVal) => {\r\n  selectedDataset.value = newVal;\r\n});\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .dataset-selector-container {\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n  }\r\n  .dataset-header {\r\n  text-align: left;\r\n  padding: 10px 20px;\r\n  background: #f5f5f5; /* Header background */\r\n  margin: 0; /* Remove default margin */\r\n  border-bottom: 1px solid #ddd; /* Separator */\r\n  }\r\n\r\n  .dataset-content {\r\n  display: flex;\r\n  }\r\n\r\n  .dataset-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 250px;\r\n    border-right: 1px solid #ddd;\r\n  }\r\n  \r\n  .dataset-list li {\r\n    padding: 15px 20px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid #eee;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .dataset-list li:hover, .dataset-list li.selected {\r\n    background-color: #b1f397;\r\n  }\r\n  \r\n  .dataset-description {\r\n    padding: 20px;\r\n    flex-grow: 1;\r\n    border-radius: 0 8px 8px 0;\r\n  }\r\n  \r\n  .dataset-description h3 {\r\n    margin-top: 0;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .dataset-selector-container {\r\n      flex-direction: column;\r\n    }\r\n  \r\n    .dataset-list ul {\r\n      width: auto;\r\n      border-right: none;\r\n    }\r\n  \r\n    .dataset-list li {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"AAoBE,SAASA,GAAgB,EAAEC,KAAK,EAAEC,IAAI,QAAQ,KAAK;;AAEnD;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,QAAQ,GAAGL,GAAG,CAAC,CACnB;MAAEM,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,WAAW,EAAE,0BAA0B;MAAEC,QAAQ,EAAE;IAAM,CAAC,EACtF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,WAAW,EAAE,0BAA0B;MAAEC,QAAQ,EAAE;IAAM;IACrF;IAAA,CACD,CAAC;IAEF,MAAMC,eAAe,GAAGV,GAAG,CAACG,KAAK,CAACQ,UAAU,IAAIN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpE,MAAMC,aAAa,GAAIC,OAAO,IAAK;MACjCJ,eAAe,CAACE,KAAK,GAAGE,OAAO;MACjCZ,IAAI,CAAC,mBAAmB,EAAEY,OAAO,CAAC;IAClC,CAAC;;IAED;IACFb,KAAK,CAAC,MAAME,KAAK,CAACQ,UAAU,EAAGI,MAAM,IAAK;MACxCL,eAAe,CAACE,KAAK,GAAGG,MAAM;IAChC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}