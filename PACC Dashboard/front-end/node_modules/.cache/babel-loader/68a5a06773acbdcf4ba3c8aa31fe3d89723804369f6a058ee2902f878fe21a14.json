{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"icon icon-shape icon-sm text-center d-flex align-items-center justify-content-center\"\n};\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'SidenavItem',\n  props: {\n    to: {\n      type: String,\n      required: true\n    },\n    navText: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props) {\n    const store = useStore();\n    const isRTL = computed(() => store.state.isRTL);\n    const sidebarMinimize = () => store.commit(\"sidebarMinimize\");\n    const minimizeSidebar = () => {\n      if (window.innerWidth < 1200) {\n        sidebarMinimize();\n      }\n    };\n    return (_ctx, _cache) => {\n      const _component_router_link = _resolveComponent(\"router-link\");\n      return _openBlock(), _createBlock(_component_router_link, {\n        to: __props.to,\n        class: \"nav-link\",\n        onClick: minimizeSidebar\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"icon\")]), _createElementVNode(\"span\", {\n          class: _normalizeClass([\"nav-link-text\", isRTL.value ? ' me-1' : 'ms-1'])\n        }, _toDisplayString(__props.navText), 3)]),\n        _: 3\n      }, 8, [\"to\"]);\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","store","isRTL","state","sidebarMinimize","commit","minimizeSidebar","window","innerWidth"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/examples/Sidenav/SidenavItem.vue"],"sourcesContent":["<script setup>\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\nconst isRTL = computed(() => store.state.isRTL);\r\nconst sidebarMinimize = () => store.commit(\"sidebarMinimize\");\r\n\r\nconst minimizeSidebar = () => {\r\n  if (window.innerWidth < 1200) {\r\n    sidebarMinimize();\r\n  }\r\n};\r\n\r\ndefineProps({\r\n  to: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  navText: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n});\r\n</script>\r\n<template>\r\n  <router-link :to=\"to\" class=\"nav-link\" @click=\"minimizeSidebar\">\r\n    <div\r\n      class=\"icon icon-shape icon-sm text-center d-flex align-items-center justify-content-center\"\r\n    >\r\n      <slot name=\"icon\"></slot>\r\n    </div>\r\n    <span class=\"nav-link-text\" :class=\"isRTL ? ' me-1' : 'ms-1'\">{{\r\n      navText\r\n    }}</span>\r\n  </router-link>\r\n</template>\r\n"],"mappings":";;;;AACA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,KAAK,GAAGH,QAAQ,CAAC,MAAME,KAAK,CAACE,KAAK,CAACD,KAAK,CAAC;IAC/C,MAAME,eAAe,GAAGA,CAAA,KAAMH,KAAK,CAACI,MAAM,CAAC,iBAAiB,CAAC;IAE7D,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAIC,MAAM,CAACC,UAAU,GAAG,IAAI,EAAE;QAC5BJ,eAAe,CAAC,CAAC;MACnB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}