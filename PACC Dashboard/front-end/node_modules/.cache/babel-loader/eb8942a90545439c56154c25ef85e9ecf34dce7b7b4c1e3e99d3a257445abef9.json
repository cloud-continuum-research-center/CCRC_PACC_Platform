{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d33b5946\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-list-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"chart-list-header\"\n}, \"Chart List\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"chart-list-body\"\n};\nconst _hoisted_4 = {\n  class: \"chart-name-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"memory-gauge-header\"\n}, \"메모리 사용량\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"memory-gauge-wrapper\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"disk-gauge-header\"\n}, \"디스크 사용량\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"disk-gauge-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chartNames, (chartName, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      onClick: $event => _ctx.selectChart(chartName),\n      class: _normalizeClass({\n        'selected': $setup.selectedChart === chartName\n      })\n    }, _toDisplayString(chartName), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 선택된 차트를 렌더링하는 섹션 \"), $setup.filteredNodes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredNodes, node => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"memory-gauge-container\",\n      key: node.id\n    }, [_createVNode($setup[\"MemoryGauge\"], {\n      nodeName: node.name,\n      \"total-size\": node.total_memory_mb,\n      \"remaining-size\": $setup.nodeFreeMemories[node.name]\n    }, null, 8 /* PROPS */, [\"nodeName\", \"total-size\", \"remaining-size\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Disk Usage Section \"), $setup.filteredNodes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredNodes, node => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"disk-gauge-container\",\n      key: node.id\n    }, [_createVNode($setup[\"DiskGauge\"], {\n      nodeName: node.name,\n      \"total-size\": node.total_disk_mb,\n      \"remaining-size\": $setup.nodeFreeDisk[node.name]\n    }, null, 8 /* PROPS */, [\"nodeName\", \"total-size\", \"remaining-size\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","_ctx","chartNames","chartName","index","onClick","$event","selectChart","_normalizeClass","$setup","selectedChart","_hoisted_5","_createCommentVNode","filteredNodes","length","_hoisted_6","_hoisted_7","_hoisted_8","node","id","_createVNode","nodeName","name","total_memory_mb","nodeFreeMemories","_hoisted_9","_hoisted_10","_hoisted_11","total_disk_mb","nodeFreeDisk"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\ChartList.vue"],"sourcesContent":["<!-- ChartList.vue -->\r\n<template>\r\n    <div class=\"chart-list-widget\">\r\n      <h4 class=\"chart-list-header\">Chart List</h4>\r\n      <div class=\"chart-list-body\">\r\n        <ul class=\"chart-name-list\">\r\n          <li\r\n            v-for=\"(chartName, index) in chartNames\"\r\n            :key=\"index\"\r\n            @click=\"selectChart(chartName)\"\r\n            :class=\"{ 'selected': selectedChart === chartName }\"\r\n          >\r\n            {{ chartName }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 선택된 차트를 렌더링하는 섹션 -->\r\n      <div v-if=\"filteredNodes.length > 0\">\r\n      <h2 class=\"memory-gauge-header\">메모리 사용량</h2>\r\n      <div class=\"memory-gauge-wrapper\">\r\n        <div\r\n          class=\"memory-gauge-container\"\r\n          v-for=\"node in filteredNodes\"\r\n          :key=\"node.id\"\r\n        >\r\n          <MemoryGauge\r\n            :nodeName=\"node.name\"\r\n            :total-size=\"node.total_memory_mb\"\r\n            :remaining-size=\"nodeFreeMemories[node.name]\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Disk Usage Section -->\r\n    <div v-if=\"filteredNodes.length > 0\">\r\n      <h2 class=\"disk-gauge-header\">디스크 사용량</h2>\r\n      <div class=\"disk-gauge-wrapper\">\r\n        <div\r\n          class=\"disk-gauge-container\"\r\n          v-for=\"node in filteredNodes\"\r\n          :key=\"node.id\"\r\n        >\r\n          <DiskGauge\r\n            :nodeName=\"node.name\"\r\n            :total-size=\"node.total_disk_mb\" \r\n            :remaining-size=\"nodeFreeDisk[node.name]\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n  </template>\r\n\r\n<script setup>\r\nimport { computed, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport MemoryGauge from \"./MemoryGaugeComponent.vue\";\r\nimport DiskGauge from \"./DiskGaugeComponent.vue\";\r\n\r\n\r\nconst store = useStore();\r\nconst selectedChart = ref(null);\r\n\r\n// Function to handle chart selection\r\nconst handleChartSelection = (chartName) => {\r\n  selectedChart.value = chartName; // Update the selected chart\r\n};\r\n\r\n// Computed property for nodes filtered by the selected project\r\nconst filteredNodes = computed(() =>\r\n  store.getters.userNodes.filter((node) =>\r\n    store.state.selectedProjectNodeNames.includes(node.name),\r\n  ),\r\n);\r\n\r\n// 남은 메모리 정보를 저장하는 객체\r\nconst nodeFreeMemories = computed(() => {\r\n  const memories = {};\r\n  filteredNodes.value.forEach((node) => {\r\n    memories[node.name] = store.getters.getNodeMemory(node.name) || 0;\r\n  });\r\n  return memories;\r\n});\r\n\r\nconst nodeFreeDisk = computed(() => {\r\n  const disks = {};\r\n  filteredNodes.value.forEach((node) => {\r\n    disks[node.name] = store.getters.getNodeDisk(node.name) || 0;\r\n  });\r\n  return disks;\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.chart-list-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n  width: calc(100% - 10px);\r\n  max-width: 1200px;\r\n}\r\n\r\n.chart-list-header {\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.chart-list-body {\r\n  display: flex;\r\n  /* Adjust width or flex properties as needed */\r\n}\r\n\r\n.chart-name-list {\r\n  /* Adjust width or flex properties as needed */\r\n  flex: 1; /* Take up a portion of the space, adjust as needed */\r\n  /* ... existing styles ... */\r\n}\r\n\r\n.chart-display {\r\n  flex: 2; /* Take up more space than the list, adjust as needed */\r\n  /* Additional styles for layout */\r\n  border-left: 1px solid #ddd;\r\n  padding: 16px;\r\n  overflow-y: auto;\r\n}\r\n\r\n\r\n.memory-gauge-header {\r\n  width: 100%; /* Ensures the header spans the full width */\r\n  text-align: center; /* Center the text */\r\n  margin-top: 0;\r\n  margin-bottom: 20px; /* Space before the gauges */\r\n}\r\n\r\n.memory-gauge-wrapper {\r\n  display: flex;\r\n  flex-wrap: wrap; /* Allows gauge containers to wrap */\r\n  width: 100%; /* Takes full width */\r\n}\r\n\r\n.memory-gauge-container {\r\n  flex: 1;\r\n  min-width: calc(\r\n    50% - 30px\r\n  ); /* Minimum width for MemoryGauge components, accounting for the gap */\r\n  max-width: calc(\r\n    50% - 30px\r\n  ); /* Maximum width for MemoryGauge components, accounting for the gap */\r\n}\r\n\r\n.disk-gauge-header {\r\n  width: 100%; /* Ensures the header spans the full width */\r\n  text-align: center; /* Center the text */\r\n  margin-top: 0;\r\n  margin-bottom: 20px; /* Space before the gauges */\r\n}\r\n\r\n.disk-gauge-wrapper {\r\n  display: flex;\r\n  flex-wrap: wrap; /* Allows gauge containers to wrap */\r\n  width: 100%; /* Takes full width */\r\n}\r\n\r\n.disk-gauge-container {\r\n  flex: 1;\r\n  min-width: calc(\r\n    50% - 30px\r\n  ); /* Minimum width for MemoryGauge components, accounting for the gap */\r\n  max-width: calc(\r\n    50% - 30px\r\n  ); /* Maximum width for MemoryGauge components, accounting for the gap */\r\n}\r\n</style>\r\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAA6C;EAAzCD,KAAK,EAAC;AAAmB,GAAC,YAAU;;EACnCA,KAAK,EAAC;AAAiB;;EACtBA,KAAK,EAAC;AAAiB;mBALnC;;EAAAE,GAAA;AAAA;gEAkBMD,mBAAA,CAA4C;EAAxCD,KAAK,EAAC;AAAqB,GAAC,SAAO;;EAClCA,KAAK,EAAC;AAAsB;;EAnBvCE,GAAA;AAAA;iEAmCMD,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAmB,GAAC,SAAO;;EAChCA,KAAK,EAAC;AAAoB;;uBAlCjCG,mBAAA,CAgDE,OAhDFC,UAgDE,GA/CAC,UAA6C,EAC7CJ,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CASK,MATLM,UASK,I,kBARHJ,mBAAA,CAOKK,SAAA,QAbfC,WAAA,CAOyCC,IAAA,CAAAC,UAAU,EAPnD,CAOoBC,SAAS,EAAEC,KAAK;yBAD1BV,mBAAA,CAOK;MALFD,GAAG,EAAEW,KAAK;MACVC,OAAK,EAAAC,MAAA,IAAEL,IAAA,CAAAM,WAAW,CAACJ,SAAS;MAC5BZ,KAAK,EAVlBiB,eAAA;QAAA,YAUkCC,MAAA,CAAAC,aAAa,KAAKP;MAAS;wBAE9CA,SAAS,gCAZxBQ,UAAA;sCAgBMC,mBAAA,sBAAyB,EACdH,MAAA,CAAAI,aAAa,CAACC,MAAM,Q,cAA/BpB,mBAAA,CAeI,OAhCVqB,UAAA,GAkBMC,UAA4C,EAC5CxB,mBAAA,CAYM,OAZNyB,UAYM,I,kBAXJvB,mBAAA,CAUMK,SAAA,QA9BdC,WAAA,CAsByBS,MAAA,CAAAI,aAAa,EAArBK,IAAI;yBAFbxB,mBAAA,CAUM;MATJH,KAAK,EAAC,wBAAwB;MAE7BE,GAAG,EAAEyB,IAAI,CAACC;QAEXC,YAAA,CAIEX,MAAA;MAHCY,QAAQ,EAAEH,IAAI,CAACI,IAAI;MACnB,YAAU,EAAEJ,IAAI,CAACK,eAAe;MAChC,gBAAc,EAAEd,MAAA,CAAAe,gBAAgB,CAACN,IAAI,CAACI,IAAI;;wCA5BvDV,mBAAA,gBAiCIA,mBAAA,wBAA2B,EAChBH,MAAA,CAAAI,aAAa,CAACC,MAAM,Q,cAA/BpB,mBAAA,CAeM,OAjDV+B,UAAA,GAmCMC,WAA0C,EAC1ClC,mBAAA,CAYM,OAZNmC,WAYM,I,kBAXJjC,mBAAA,CAUMK,SAAA,QA/CdC,WAAA,CAuCyBS,MAAA,CAAAI,aAAa,EAArBK,IAAI;yBAFbxB,mBAAA,CAUM;MATJH,KAAK,EAAC,sBAAsB;MAE3BE,GAAG,EAAEyB,IAAI,CAACC;QAEXC,YAAA,CAIEX,MAAA;MAHCY,QAAQ,EAAEH,IAAI,CAACI,IAAI;MACnB,YAAU,EAAEJ,IAAI,CAACU,aAAa;MAC9B,gBAAc,EAAEnB,MAAA,CAAAoB,YAAY,CAACX,IAAI,CAACI,IAAI;;wCA7CnDV,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}