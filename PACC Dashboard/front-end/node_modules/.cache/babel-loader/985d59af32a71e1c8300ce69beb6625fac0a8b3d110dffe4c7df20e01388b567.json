{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"project-list-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"project-info-widget\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"학습 상태\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"ProjectList\"])]), $setup.projectInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, \"학습 진행율: \" + _toDisplayString($setup.projectInfo.progress ? `${$setup.projectInfo.progress}%` : 'N/A'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"현재 에포크: \" + _toDisplayString($setup.projectInfo.epoch !== undefined ? $setup.projectInfo.epoch : 'N/A'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"모델 정확도: \" + _toDisplayString($setup.projectInfo.accuracy ? $setup.projectInfo.accuracy.toFixed(2) + '%' : 'N/A'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"모델 Loss 값: \" + _toDisplayString($setup.projectInfo.loss ? $setup.projectInfo.loss.toFixed(4) : 'N/A'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","$setup","projectInfo","_hoisted_3","_hoisted_4","_toDisplayString","progress","epoch","undefined","accuracy","toFixed","loss","_createCommentVNode"],"sources":["D:\\Git\\ITRC_Front\\vue-flask-dashboard\\front-end\\src\\views\\Dashboard.vue"],"sourcesContent":["<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst intervalId = ref(null); // Use a ref to keep track of the interval ID\n\nfunction startFetching(projectId) {\n  if (intervalId.value) {\n    clearInterval(intervalId.value); // Clear the current interval if it exists\n  }\n  intervalId.value = setInterval(() => {\n    store.dispatch(\"fetchProjectInfoById\", projectId);\n  }, 3000); // Fetch every 3 seconds\n}\n\nonMounted(() => {\n  if (store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjects\");\n    // Assuming project ID is already selected somewhere and stored in the state\n    if (store.state.selectedProjectId) {\n      startFetching(store.state.selectedProjectId);\n    }\n  }\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId && store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjectInfoById\", newId); // Fetch immediately when ID changes\n    startFetching(newId); // Start or restart the fetching interval\n  } else {\n    if (intervalId.value) {\n      clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n      intervalId.value = null;\n    }\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  // Clean up the interval when the component is destroyed\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n// Computed property to display project info\nconst projectInfo = computed(() => store.state.projectsInfo[store.state.selectedProjectId] || {});\n\n</script>\n\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n      <h4>학습 상태</h4>\n      <p>학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : 'N/A' }}</p>\n      <p>현재 에포크: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : 'N/A' }}</p>\n      <p>모델 정확도: {{ projectInfo.accuracy ? projectInfo.accuracy.toFixed(2) + '%' : 'N/A' }}</p>\n      <p>모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : 'N/A' }}</p>\n    </div>\n  </div>\n</template>\n\n<style>\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 340px;\n}\n\n\n\n\n\n\n\n\n</style>\n"],"mappings":";;EAoDOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAwB;;EArDvCC,GAAA;EAwDSD,KAAK,EAAC;;gCACTE,mBAAA,CAAc,YAAV,OAAK;;uBALbC,mBAAA,CAWM,OAXNC,UAWM,GAVJF,mBAAA,CAEM,OAFNG,UAEM,GADJC,YAAA,CAAeC,MAAA,iB,GAEsBA,MAAA,CAAAC,WAAW,I,cAAlDL,mBAAA,CAMM,OANNM,UAMM,GALJC,UAAc,EACdR,mBAAA,CAA8E,WAA3E,UAAQ,GAAAS,gBAAA,CAAGJ,MAAA,CAAAC,WAAW,CAACI,QAAQ,MAAML,MAAA,CAAAC,WAAW,CAACI,QAAQ,6BAC5DV,mBAAA,CAAgF,WAA7E,UAAQ,GAAAS,gBAAA,CAAGJ,MAAA,CAAAC,WAAW,CAACK,KAAK,KAAKC,SAAS,GAAGP,MAAA,CAAAC,WAAW,CAACK,KAAK,0BACjEX,mBAAA,CAAyF,WAAtF,UAAQ,GAAAS,gBAAA,CAAGJ,MAAA,CAAAC,WAAW,CAACO,QAAQ,GAAGR,MAAA,CAAAC,WAAW,CAACO,QAAQ,CAACC,OAAO,mCACjEd,mBAAA,CAA8E,WAA3E,aAAW,GAAAS,gBAAA,CAAGJ,MAAA,CAAAC,WAAW,CAACS,IAAI,GAAGV,MAAA,CAAAC,WAAW,CAACS,IAAI,CAACD,OAAO,4B,KA7DlEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}