{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b750b06a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hyperparameter-settings\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Hyperparameter Settings\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"hyperparameters\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"learningRate\"\n}, \"Learning Rate\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"batchSize\"\n}, \"Batch Size\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"epochs\"\n}, \"Epochs\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"optimizer\"\n}, \"Optimizer\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"adam\"\n}, \"Adam\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"sgd\"\n}, \"SGD\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"rmsprop\"\n}, \"RMSprop\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"lossFunction\"\n}, \"Loss Function\", -1 /* HOISTED */));\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"categorical_crossentropy\"\n}, \" Categorical Crossentropy \", -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"sparse_categorical_crossentropy\"\n}, \" Sparse Categorical Crossentropy \", -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"mean_squared_error\"\n}, \"Mean Squared Error\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"learningRate\",\n    value: _ctx.hyperparameters.learningRate ? _ctx.hyperparameters.learningRate.toString() : '',\n    onInput: _cache[0] || (_cache[0] = $event => $setup.handleInput('learningRate', $event.target.value)),\n    min: \"0.0001\",\n    step: \"0.0001\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"batchSize\",\n    onInput: _cache[1] || (_cache[1] = $event => _ctx.updateHyperparameters('batchSize', $event.target.valueAsNumber)),\n    min: \"1\",\n    step: \"1\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"epochs\",\n    onInput: _cache[2] || (_cache[2] = $event => _ctx.updateHyperparameters('epochs', $event.target.valueAsNumber)),\n    min: \"1\",\n    step: \"1\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"select\", {\n    id: \"optimizer\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.hyperparameters.optimizer = $event)\n  }, [_hoisted_13, _hoisted_14, _hoisted_15, _createCommentVNode(\" Add more optimizers as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.hyperparameters.optimizer]])]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"select\", {\n    id: \"lossFunction\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.hyperparameters.lossFunction = $event)\n  }, [_hoisted_18, _hoisted_19, _hoisted_20, _createCommentVNode(\" Add more loss functions as needed \")], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.hyperparameters.lossFunction]])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","id","_ctx","hyperparameters","learningRate","toString","onInput","_cache","$event","$setup","handleInput","target","min","step","_hoisted_6","_hoisted_7","_hoisted_8","updateHyperparameters","valueAsNumber","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","optimizer","_hoisted_13","_hoisted_14","_hoisted_15","_createCommentVNode","_hoisted_16","_hoisted_17","lossFunction","_hoisted_18","_hoisted_19","_hoisted_20"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\HyperparameterSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"hyperparameter-settings\">\r\n    <h2>Hyperparameter Settings</h2>\r\n    <div class=\"hyperparameters\">\r\n      <div class=\"form-group\">\r\n        <label for=\"learningRate\">Learning Rate</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"learningRate\"\r\n          :value=\"hyperparameters.learningRate ? hyperparameters.learningRate.toString() : ''\"\r\n          @input=\"handleInput('learningRate', $event.target.value)\"\r\n          min=\"0.0001\"\r\n          step=\"0.0001\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"batchSize\">Batch Size</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"batchSize\"\r\n          @input=\"updateHyperparameters('batchSize',$event.target.valueAsNumber )\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"epochs\">Epochs</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"epochs\"\r\n          @input=\"updateHyperparameters('epochs',$event.target.valueAsNumber )\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"optimizer\">Optimizer</label>\r\n        <select id=\"optimizer\" v-model=\"hyperparameters.optimizer\">\r\n          <option value=\"adam\">Adam</option>\r\n          <option value=\"sgd\">SGD</option>\r\n          <option value=\"rmsprop\">RMSprop</option>\r\n          <!-- Add more optimizers as needed -->\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"lossFunction\">Loss Function</label>\r\n        <select id=\"lossFunction\" v-model=\"hyperparameters.lossFunction\">\r\n          <option value=\"categorical_crossentropy\">\r\n            Categorical Crossentropy\r\n          </option>\r\n          <option value=\"sparse_categorical_crossentropy\">\r\n            Sparse Categorical Crossentropy\r\n          </option>\r\n          <option value=\"mean_squared_error\">Mean Squared Error</option>\r\n          <!-- Add more loss functions as needed -->\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, watch, defineProps, defineEmits } from \"vue\";\r\n\r\nconst props = defineProps({\r\n  modelValue: Object,\r\n});\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\n\r\n// Initialize the hyperparameters with the prop value or a default object\r\n// Uses the modelValue for initial values or provides defaults\r\nconst localHyperparameters = ref({\r\n  learningRate: props.modelValue.learningRate || 0.0001,\r\n  batchSize: props.modelValue.batchSize || 32,\r\n  epochs: props.modelValue.epochs || 10,\r\n  optimizer: props.modelValue.optimizer || 'adam',\r\n  lossFunction: props.modelValue.lossFunction || 'categorical_crossentropy',\r\n});\r\n\r\n// Watches for changes to props.modelValue\r\nwatch(() => props.modelValue, (newValue, oldValue) => {\r\n  if (newValue !== oldValue) {\r\n    localHyperparameters.value = { ...newVal };\r\n  }\r\n}, { deep: true });\r\n\r\n// Update local state and emit change to parent component\r\nconst handleInput = (key, stringValue) => {\r\n  // Convert to number if possible, otherwise keep the string to allow for \"0.\" input\r\n  const value = isNaN(parseFloat(stringValue)) ? stringValue : parseFloat(stringValue);\r\n  localHyperparameters.value[key] = value;\r\n  // Emit only valid numbers to parent\r\n  if (!isNaN(value)) {\r\n    emit(\"update:modelValue\", { ...localHyperparameters.value, [key]: value });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.hyperparameter-settings {\r\n  max-width: 100%;\r\n}\r\n\r\n.hyperparameters {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  min-width: 160px; /* Adjust the minimum width as needed */\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}