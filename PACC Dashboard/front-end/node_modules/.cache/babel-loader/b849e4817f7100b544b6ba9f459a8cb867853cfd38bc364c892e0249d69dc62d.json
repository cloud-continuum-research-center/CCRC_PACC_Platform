{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-48eb70a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"project-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"project-widget-header\"\n}, \"Project List\", -1));\nconst _hoisted_3 = {\n  class: \"project-widget-body\"\n};\nconst _hoisted_4 = {\n  class: \"project-list-container\"\n};\nconst _hoisted_5 = {\n  class: \"project-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"project-description-container\"\n};\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ProjectsList',\n  setup(__props) {\n    const store = useStore();\n    const projects = computed(() => store.getters.userProjects);\n    const selectedProject = ref({});\n    const selectProject = project => {\n      selectedProject.value = project;\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projects.value, (project, index) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: index,\n          onClick: $event => selectProject(project),\n          class: _normalizeClass({\n            'is-selected': project.id === selectedProject.value.id\n          })\n        }, _toDisplayString(project.model_name) + \" - \" + _toDisplayString(project.dataset_name) + \" (\" + _toDisplayString(project.status) + \") \", 11, _hoisted_6);\n      }), 128))])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h4\", null, _toDisplayString(selectedProject.value.model_name || 'No project selected'), 1), _createElementVNode(\"p\", null, _toDisplayString(selectedProject.value.dataset_name), 1), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString(selectedProject.value.status), 1), _createElementVNode(\"p\", null, \"Created At: \" + _toDisplayString(selectedProject.value.created_at), 1)])])]);\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","store","projects","getters","userProjects","selectedProject","selectProject","project","value"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/ProjectsList.vue"],"sourcesContent":["<template>\r\n    <div class=\"project-widget\">\r\n      <h4 class=\"project-widget-header\">Project List</h4>\r\n      <div class=\"project-widget-body\">\r\n        <div class=\"project-list-container\">\r\n          <ul class=\"project-list\">\r\n            <li\r\n              v-for=\"(project, index) in projects\"\r\n              :key=\"index\"\r\n              @click=\"selectProject(project)\"\r\n              :class=\"{ 'is-selected': project.id === selectedProject.id }\"\r\n            >\r\n              {{ project.model_name }} - {{ project.dataset_name }} ({{ project.status }})\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"project-description-container\">\r\n          <h4>{{ selectedProject.model_name || 'No project selected' }}</h4>\r\n          <p>{{ selectedProject.dataset_name }}</p>\r\n          <p>Status: {{ selectedProject.status }}</p>\r\n          <p>Created At: {{ selectedProject.created_at }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { computed, ref } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  \r\n  const store = useStore();\r\n  const projects = computed(() => store.getters.userProjects);\r\n  const selectedProject = ref({});\r\n  \r\n  const selectProject = (project) => {\r\n    selectedProject.value = project;\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n  .project-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto; /* Center the widget */\r\n  margin-bottom: 20px; /* Add bottom margin */\r\n  width: calc(100% - 10px); /* Reduce the total width by 20px from each side */\r\n  max-width: 1200px; /* Optionally add a max-width if you want to limit the size on larger screens */\r\n}\r\n  \r\n  .project-widget-header {\r\n    background-color: #f9f9f9;\r\n    padding: 12px 16px;\r\n    margin: 0;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  \r\n  .project-widget-body {\r\n    display: flex;\r\n  }\r\n  \r\n  .project-list-container {\r\n    border-right: 1px solid #ddd;\r\n    flex: 1;\r\n  }\r\n  \r\n  .project-list {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  \r\n  .project-list li {\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s;\r\n  }\r\n  \r\n  .project-list li:hover,\r\n  .project-list li.is-selected {\r\n    background-color: #e8f0f9;\r\n  }\r\n  \r\n  .project-description-container {\r\n    flex: 2;\r\n    padding: 16px;\r\n  }\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA2BE,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,QAAQ,GAAGJ,QAAQ,CAAC,MAAMG,KAAK,CAACE,OAAO,CAACC,YAAY,CAAC;IAC3D,MAAMC,eAAe,GAAGN,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/B,MAAMO,aAAa,GAAIC,OAAO,IAAK;MACjCF,eAAe,CAACG,KAAK,GAAGD,OAAO;IACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}