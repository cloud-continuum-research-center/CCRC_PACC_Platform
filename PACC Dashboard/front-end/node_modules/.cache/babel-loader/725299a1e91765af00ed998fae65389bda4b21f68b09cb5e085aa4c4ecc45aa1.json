{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-44587f60\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"node-selector-container\"\n};\nconst _hoisted_2 = {\n  class: \"node-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"node-description\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"node-description\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Select a node to see its description.\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  class: \"selected-nodes\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Selected Nodes\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Node list on the far left \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.nodes, node => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: node.id,\n      onClick: $event => $setup.selectNode(node),\n      class: _normalizeClass({\n        selected: node === $setup.selectedNode\n      })\n    }, _toDisplayString(node.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Description of the selected node in the middle \"), $setup.selectedNode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString($setup.selectedNode.name) + \" Description\", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.selectedNode.description), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7])), _createCommentVNode(\" List of selected nodes on the far right \"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedNodes, node => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: node.id\n    }, _toDisplayString(node.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_6","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_Fragment","_renderList","$setup","nodes","node","id","onClick","$event","selectNode","_normalizeClass","selected","selectedNode","name","_hoisted_3","_hoisted_4","_toDisplayString","description","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","selectedNodes"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\NodeSelector.vue"],"sourcesContent":["<template>\r\n    <div class=\"node-selector-container\">\r\n      <!-- Node list on the far left -->\r\n      <div class=\"node-list\">\r\n        <ul>\r\n          <li v-for=\"node in nodes\" :key=\"node.id\" @click=\"selectNode(node)\" :class=\"{ selected: node === selectedNode }\">\r\n            {{ node.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <!-- Description of the selected node in the middle -->\r\n      <div class=\"node-description\" v-if=\"selectedNode\">\r\n        <h3>{{ selectedNode.name }} Description</h3>\r\n        <p>{{ selectedNode.description }}</p>\r\n      </div>\r\n      <div class=\"node-description\" v-else>\r\n        <p>Select a node to see its description.</p>\r\n      </div>\r\n      \r\n      <!-- List of selected nodes on the far right -->\r\n      <div class=\"selected-nodes\">\r\n        <h3>Selected Nodes</h3>\r\n        <ul>\r\n          <li v-for=\"node in selectedNodes\" :key=\"node.id\">{{ node.name }}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  \r\n  const nodes = ref([\r\n    { id: 1, name: 'Node 1', description: 'Description of Node 1', selected: false },\r\n    { id: 2, name: 'Node 2', description: 'Description of Node 2', selected: false },\r\n    { id: 3, name: 'Node 3', description: 'Description of Node 3', selected: false },\r\n    { id: 4, name: 'Node 4', description: 'Description of Node 4', selected: false },\r\n    { id: 5, name: 'Node 5', description: 'Description of Node 5', selected: false },\r\n    { id: 6, name: 'Node 6', description: 'Description of Node 6', selected: false },\r\n    { id: 7, name: 'Node 7', description: 'Description of Node 7', selected: false },\r\n    { id: 8, name: 'Node 8', description: 'Description of Node 8', selected: false },\r\n    { id: 9, name: 'Node 9', description: 'Description of Node 9', selected: false },\r\n    // Add more nodes as needed\r\n  ]);\r\n  \r\nconst selectedNode = ref(null);\r\nconst selectedNodes = ref([]);\r\n\r\nconst selectNode = (node) => {\r\n  selectedNode.value = node;\r\n  if (!selectedNodes.value.includes(node)) {\r\n    selectedNodes.value.push(node);\r\n  }\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .node-selector-container {\r\n    display: flex;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .node-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 250px;\r\n    border-right: 1px solid #ddd;\r\n  }\r\n  \r\n  .node-list li {\r\n    padding: 15px 20px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid #eee;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .node-list li:hover, .node-list li.selected {\r\n    background-color: #d3d3d3;\r\n  }\r\n  \r\n  .node-description {\r\n    padding: 20px;\r\n    flex-grow: 1;\r\n    border-radius: 0 8px 8px 0;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .node-selector-container {\r\n      flex-direction: column;\r\n    }\r\n    .node-list ul {\r\n      width: auto;\r\n      border-right: none;\r\n    }\r\n    .node-list li {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAyB;;EAE7BA,KAAK,EAAC;AAAW;mBAH5B;;EAAAC,GAAA;EAYWD,KAAK,EAAC;;;EAZjBC,GAAA;EAgBWD,KAAK,EAAC;;gEACTE,mBAAA,CAA4C,WAAzC,uCAAqC;oBAAxCC,UAA4C,C;;EAIzCH,KAAK,EAAC;AAAgB;gEACzBE,mBAAA,CAAuB,YAAnB,gBAAc;;uBArBtBE,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,+BAAkC,EAClCJ,mBAAA,CAMM,OANNK,UAMM,GALJL,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKI,SAAA,QAPfC,WAAA,CAK6BC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfR,mBAAA,CAEK;MAFsBH,GAAG,EAAEW,IAAI,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,UAAU,CAACJ,IAAI;MAAIZ,KAAK,EALnFiB,eAAA;QAAAC,QAAA,EAKiGN,IAAI,KAAKF,MAAA,CAAAS;MAAY;wBACvGP,IAAI,CAACQ,IAAI,gCANxBC,UAAA;sCAWMf,mBAAA,oDAAuD,EACnBI,MAAA,CAAAS,YAAY,I,cAAhDf,mBAAA,CAGM,OAHNkB,UAGM,GAFJpB,mBAAA,CAA4C,YAAAqB,gBAAA,CAArCb,MAAA,CAAAS,YAAY,CAACC,IAAI,IAAG,cAAY,iBACvClB,mBAAA,CAAqC,WAAAqB,gBAAA,CAA/Bb,MAAA,CAAAS,YAAY,CAACK,WAAW,iB,oBAEhCpB,mBAAA,CAEM,OAFNqB,UAEM,EAlBZ,IAAAC,UAAA,KAoBMpB,mBAAA,6CAAgD,EAChDJ,mBAAA,CAKM,OALNyB,UAKM,GAJJC,UAAuB,EACvB1B,mBAAA,CAEK,c,kBADHE,mBAAA,CAAqEI,SAAA,QAxB/EC,WAAA,CAwB6BC,MAAA,CAAAmB,aAAa,EAArBjB,IAAI;yBAAfR,mBAAA,CAAqE;MAAlCH,GAAG,EAAEW,IAAI,CAACC;wBAAOD,IAAI,CAACQ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}