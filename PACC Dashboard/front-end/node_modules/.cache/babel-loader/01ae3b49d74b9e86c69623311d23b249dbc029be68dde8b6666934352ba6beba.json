{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nimport Chart from \"chart.js/auto\";\nexport default {\n  __name: 'GaugeComponent',\n  props: {\n    totalSize: Number,\n    remainingSize: Number,\n    nodeName: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartCanvas = ref(null);\n    let myChart = null;\n\n    // Chart.js chart configuration\n    const config = {\n      type: \"doughnut\",\n      data: {\n        labels: [\"Used\", \"Free\"],\n        datasets: [{\n          data: [0, 0],\n          // Initial dummy data\n          backgroundColor: [\"#42A5F5\", \"#ddd\"],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          animateRotate: true,\n          animateScale: false\n        },\n        circumference: 180,\n        rotation: 270\n      }\n    };\n    onMounted(() => {\n      console.log(\"덕인 Props in GaugeComponent : \", {\n        totalSize: props.totalSize,\n        remainingSize: props.remainingSize,\n        nodeName: props.nodeName\n      });\n      if (!chartCanvas.value) {\n        console.error(\"Canvas element not found\");\n        return;\n      }\n      const context = chartCanvas.value.getContext('2d');\n      if (!context) {\n        console.error(\"Failed to get canvas context\");\n        return;\n      }\n      myChart = new Chart(context, config);\n    });\n    watch([() => props.totalSize, () => props.remainingSize], newValues => {\n      console.log(\"New values received:\", newValues);\n      const [totalSize, remainingSize] = newValues;\n      const usedSize = totalSize - remainingSize;\n      if (myChart) {\n        myChart.data.datasets[0].data = [usedSize, remainingSize];\n        myChart.update();\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      chartCanvas,\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      config,\n      ref,\n      onMounted,\n      watch,\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","props","__props","chartCanvas","myChart","config","type","data","labels","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","animation","animateRotate","animateScale","circumference","rotation","console","log","totalSize","remainingSize","nodeName","value","error","context","getContext","newValues","usedSize","update","immediate"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/GaugeComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch, defineProps } from \"vue\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst props = defineProps({\r\n  totalSize: Number,\r\n  remainingSize: Number,\r\n  nodeName: String\r\n});\r\n\r\nconst chartCanvas = ref(null);\r\nlet myChart = null;\r\n\r\n// Chart.js chart configuration\r\nconst config = {\r\n  type: \"doughnut\",\r\n  data: {\r\n    labels: [\"Used\", \"Free\"],\r\n    datasets: [\r\n      {\r\n        data: [0, 0], // Initial dummy data\r\n        backgroundColor: [\"#42A5F5\", \"#ddd\"],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: {\r\n      animateRotate: true,\r\n      animateScale: false,\r\n    },\r\n    circumference: 180,\r\n    rotation: 270,\r\n  },\r\n};\r\n\r\nonMounted(() => {\r\n    console.log(\"덕인 Props in GaugeComponent : \", { totalSize: props.totalSize, remainingSize: props.remainingSize, nodeName: props.nodeName });\r\n  if (!chartCanvas.value) {\r\n    console.error(\"Canvas element not found\");\r\n    return;\r\n  }\r\n  const context = chartCanvas.value.getContext('2d');\r\n  if (!context) {\r\n    console.error(\"Failed to get canvas context\");\r\n    return;\r\n  }\r\n  myChart = new Chart(context, config);\r\n});\r\n\r\nwatch(\r\n  [() => props.totalSize, () => props.remainingSize],\r\n  (newValues) => {\r\n    console.log(\"New values received:\", newValues);\r\n    const [totalSize, remainingSize] = newValues;\r\n    const usedSize = totalSize - remainingSize;\r\n    if (myChart) {\r\n      myChart.data.datasets[0].data = [usedSize, remainingSize];\r\n      myChart.update();\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n</script>\r\n\r\n<style>\r\n.chart-container {\r\n  overflow: visible; /* Ensures no clipping */\r\n  opacity: 1; /* Checks that it's not hidden */\r\n  position: relative;\r\n  height: 40vh;\r\n  width: 80vw;\r\n}\r\n</style>\r\n"],"mappings":"AAOA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAkB,QAAQ,KAAK;AACxD,OAAOC,KAAK,MAAM,eAAe;;;;;;;;;;;;IAEjC,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,WAAW,GAAGN,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIO,OAAO,GAAG,IAAI;;IAElB;IACA,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACxBC,QAAQ,EAAE,CACR;UACEF,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAAE;UACdG,eAAe,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,SAAS,EAAE;UACTC,aAAa,EAAE,IAAI;UACnBC,YAAY,EAAE;QAChB,CAAC;QACDC,aAAa,EAAE,GAAG;QAClBC,QAAQ,EAAE;MACZ;IACF,CAAC;IAEDrB,SAAS,CAAC,MAAM;MACZsB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;QAAEC,SAAS,EAAErB,KAAK,CAACqB,SAAS;QAAEC,aAAa,EAAEtB,KAAK,CAACsB,aAAa;QAAEC,QAAQ,EAAEvB,KAAK,CAACuB;MAAS,CAAC,CAAC;MAC5I,IAAI,CAACrB,WAAW,CAACsB,KAAK,EAAE;QACtBL,OAAO,CAACM,KAAK,CAAC,0BAA0B,CAAC;QACzC;MACF;MACA,MAAMC,OAAO,GAAGxB,WAAW,CAACsB,KAAK,CAACG,UAAU,CAAC,IAAI,CAAC;MAClD,IAAI,CAACD,OAAO,EAAE;QACZP,OAAO,CAACM,KAAK,CAAC,8BAA8B,CAAC;QAC7C;MACF;MACAtB,OAAO,GAAG,IAAIJ,KAAK,CAAC2B,OAAO,EAAEtB,MAAM,CAAC;IACtC,CAAC,CAAC;IAEFN,KAAK,CACH,CAAC,MAAME,KAAK,CAACqB,SAAS,EAAE,MAAMrB,KAAK,CAACsB,aAAa,CAAC,EACjDM,SAAS,IAAK;MACbT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,SAAS,CAAC;MAC9C,MAAM,CAACP,SAAS,EAAEC,aAAa,CAAC,GAAGM,SAAS;MAC5C,MAAMC,QAAQ,GAAGR,SAAS,GAAGC,aAAa;MAC1C,IAAInB,OAAO,EAAE;QACXA,OAAO,CAACG,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACF,IAAI,GAAG,CAACuB,QAAQ,EAAEP,aAAa,CAAC;QACzDnB,OAAO,CAAC2B,MAAM,CAAC,CAAC;MAClB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAK,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}