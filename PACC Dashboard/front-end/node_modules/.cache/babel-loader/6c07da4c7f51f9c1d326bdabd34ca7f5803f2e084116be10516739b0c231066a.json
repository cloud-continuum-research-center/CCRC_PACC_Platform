{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-36d561f8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dataset-selector-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"dataset-header\"\n}, \"Dataset Selection\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"dataset-content\"\n};\nconst _hoisted_4 = {\n  class: \"dataset-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"dataset-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.datasets, dataset => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: dataset.dataset_id,\n      onClick: $event => $setup.selectDataset(dataset),\n      class: _normalizeClass({\n        selected: dataset.dataset_id === $setup.selectedDataset.dataset_id\n      })\n    }, _toDisplayString(dataset.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($setup.selectedDataset.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.selectedDataset.description), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","datasets","dataset","key","dataset_id","onClick","$event","selectDataset","_normalizeClass","selected","selectedDataset","name","_hoisted_5","_hoisted_6","_toDisplayString","description"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\DatasetSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"dataset-selector-container\">\r\n    <h2 class=\"dataset-header\">Dataset Selection</h2>\r\n    <div class=\"dataset-content\">\r\n      <div class=\"dataset-list\">\r\n        <ul>\r\n          <li\r\n            v-for=\"dataset in datasets\"\r\n            :key=\"dataset.dataset_id\"\r\n            @click=\"selectDataset(dataset)\"\r\n            :class=\"{ selected: dataset.dataset_id === selectedDataset.dataset_id }\"\r\n          >\r\n            {{ dataset.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"dataset-description\">\r\n        <h3>{{ selectedDataset.name }}</h3>\r\n        <p>{{ selectedDataset.description }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst datasets = computed(() => store.state.datasets);\r\nconst selectedDataset = ref({});\r\n\r\nonMounted(() => {\r\n  store.dispatch('fetchDatasets');\r\n});\r\n\r\nconst selectDataset = (dataset) => {\r\n  selectedDataset.value = dataset;\r\n  // Here you would emit an event or sync with the parent component\r\n  // emit('update:modelValue', dataset);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dataset-selector-container {\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n}\r\n.dataset-header {\r\n  text-align: left;\r\n  padding: 10px 20px;\r\n  background: #f5f5f5; /* Header background */\r\n  margin: 0; /* Remove default margin */\r\n  border-bottom: 1px solid #ddd; /* Separator */\r\n}\r\n\r\n.dataset-content {\r\n  display: flex;\r\n}\r\n\r\n.dataset-list ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 250px;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.dataset-list li {\r\n  padding: 15px 20px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #eee;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.dataset-list li:hover,\r\n.dataset-list li.selected {\r\n  background-color: #b1f397;\r\n}\r\n\r\n.dataset-description {\r\n  padding: 20px;\r\n  flex-grow: 1;\r\n  border-radius: 0 8px 8px 0;\r\n}\r\n\r\n.dataset-description h3 {\r\n  margin-top: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .dataset-selector-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .dataset-list ul {\r\n    width: auto;\r\n    border-right: none;\r\n  }\r\n\r\n  .dataset-list li {\r\n    border-bottom: none;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAA4B;gEACrCC,mBAAA,CAAiD;EAA7CD,KAAK,EAAC;AAAgB,GAAC,mBAAiB;;EACvCA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAc;mBAJ/B;;EAgBWA,KAAK,EAAC;AAAqB;;uBAfpCE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAiD,EACjDH,mBAAA,CAiBM,OAjBNI,UAiBM,GAhBJJ,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CASK,c,kBARHC,mBAAA,CAOKK,SAAA,QAbfC,WAAA,CAO8BC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADhBT,mBAAA,CAOK;MALFU,GAAG,EAAED,OAAO,CAACE,UAAU;MACvBC,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,aAAa,CAACL,OAAO;MAC5BX,KAAK,EAVlBiB,eAAA;QAAAC,QAAA,EAUgCP,OAAO,CAACE,UAAU,KAAKJ,MAAA,CAAAU,eAAe,CAACN;MAAU;wBAElEF,OAAO,CAACS,IAAI,gCAZ3BC,UAAA;sCAgBMpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJrB,mBAAA,CAAmC,YAAAsB,gBAAA,CAA5Bd,MAAA,CAAAU,eAAe,CAACC,IAAI,kBAC3BnB,mBAAA,CAAwC,WAAAsB,gBAAA,CAAlCd,MAAA,CAAAU,eAAe,CAACK,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}