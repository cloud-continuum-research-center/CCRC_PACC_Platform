{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\nimport { ref } from 'vue';\nimport { useStore } from \"vuex\";\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport Navbar from \"@/examples/PageLayout/Navbar.vue\";\nimport AppFooter from \"@/examples/PageLayout/Footer.vue\";\nimport ArgonInput from \"@/components/ArgonInput.vue\";\nimport ArgonButton from \"@/components/ArgonButton.vue\";\nexport default {\n  __name: 'Signup',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const body = document.getElementsByTagName(\"body\")[0];\n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const submitForm = async () => {\n      if (password.value !== confirmPassword.value) {\n        alert('비밀번호가 일치하지 않습니다.');\n        return; // 비밀번호가 일치하지 않으면 여기서 처리를 중단합니다.\n      }\n      const formData = {\n        name: name.value,\n        email: email.value,\n        password: password.value\n      };\n      try {\n        const response = await axios.post('http://localhost:5000/api/signup', formData);\n        console.log(response.data);\n        // 회원 가입 성공 메시지\n        alert('회원 가입에 성공하셨습니다. 5초 후 자동으로 로그인 화면으로 이동합니다');\n        // 5초 후 로그인 페이지로 리디렉션\n        setTimeout(() => {\n          router.push('/signin');\n        }, 5000);\n      } catch (error) {\n        console.error(error);\n        alert('회원 가입에 실패했습니다.'); // 회원 가입 실패 메시지\n      }\n    };\n    const store = useStore();\n    onBeforeMount(() => {\n      store.state.hideConfigButton = true;\n      store.state.showNavbar = false;\n      store.state.showSidenav = false;\n      store.state.showFooter = false;\n      body.classList.remove(\"bg-gray-100\");\n    });\n    onBeforeUnmount(() => {\n      store.state.hideConfigButton = false;\n      store.state.showNavbar = true;\n      store.state.showSidenav = true;\n      store.state.showFooter = true;\n      body.classList.add(\"bg-gray-100\");\n    });\n    const __returned__ = {\n      body,\n      name,\n      email,\n      password,\n      confirmPassword,\n      submitForm,\n      store,\n      onBeforeUnmount,\n      onBeforeMount,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      Navbar,\n      AppFooter,\n      ArgonInput,\n      ArgonButton\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","onBeforeMount","ref","useStore","axios","useRouter","Navbar","AppFooter","ArgonInput","ArgonButton","body","document","getElementsByTagName","name","email","password","confirmPassword","submitForm","value","alert","formData","response","post","console","log","data","setTimeout","router","push","error","store","state","hideConfigButton","showNavbar","showSidenav","showFooter","classList","remove","add"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Signup.vue"],"sourcesContent":["<script setup>\r\nimport { onBeforeUnmount, onBeforeMount } from \"vue\";\r\nimport { ref } from 'vue'\r\nimport { useStore } from \"vuex\";\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nimport Navbar from \"@/examples/PageLayout/Navbar.vue\";\r\nimport AppFooter from \"@/examples/PageLayout/Footer.vue\";\r\nimport ArgonInput from \"@/components/ArgonInput.vue\";\r\nimport ArgonButton from \"@/components/ArgonButton.vue\";\r\nconst body = document.getElementsByTagName(\"body\")[0];\r\n\r\nconst name = ref('');\r\nconst email = ref('');\r\nconst password = ref('');\r\nconst confirmPassword = ref('');\r\n\r\nconst submitForm = async () => {\r\n  if (password.value !== confirmPassword.value) {\r\n    alert('비밀번호가 일치하지 않습니다.');\r\n    return; // 비밀번호가 일치하지 않으면 여기서 처리를 중단합니다.\r\n  }\r\n  const formData = {\r\n    name: name.value,\r\n    email: email.value,\r\n    password: password.value,\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/api/signup', formData);\r\n    console.log(response.data);\r\n    // 회원 가입 성공 메시지\r\n    alert('회원 가입에 성공하셨습니다. 5초 후 자동으로 로그인 화면으로 이동합니다');\r\n    // 5초 후 로그인 페이지로 리디렉션\r\n    setTimeout(() => {\r\n      router.push('/signin');\r\n    }, 5000);\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert('회원 가입에 실패했습니다.'); // 회원 가입 실패 메시지\r\n  }\r\n};\r\n\r\nconst store = useStore();\r\nonBeforeMount(() => {\r\n  store.state.hideConfigButton = true;\r\n  store.state.showNavbar = false;\r\n  store.state.showSidenav = false;\r\n  store.state.showFooter = false;\r\n  body.classList.remove(\"bg-gray-100\");\r\n});\r\nonBeforeUnmount(() => {\r\n  store.state.hideConfigButton = false;\r\n  store.state.showNavbar = true;\r\n  store.state.showSidenav = true;\r\n  store.state.showFooter = true;\r\n  body.classList.add(\"bg-gray-100\");\r\n});\r\n</script>\r\n<template>\r\n  <div class=\"container top-0 position-sticky z-index-sticky\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <navbar isBtn=\"bg-gradient-light\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <main class=\"main-content mt-0\">\r\n    <div\r\n  class=\"page-header align-items-start min-vh-50 pt-5 pb-11 m-3 border-radius-lg\"\r\n  :style=\"{\r\n    backgroundImage: 'url(' + require('@/assets/img/cloud_background.png') + ')',\r\n    backgroundPosition: 'top',\r\n  }\"\r\n>\r\n      <span class=\"mask bg-gradient-dark opacity-6\"></span>\r\n      <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-lg-5 text-center mx-auto\">\r\n            <h1 class=\"text-white mb-4 mt-4\">안녕하세요</h1>\r\n            <p class=\"text-lead text-white\">\r\n              CCRC 연구센터 병렬학습 프레임워크 대시보드에 오신 것을 환영합니다.\r\n              먼저 회원가입을 진행해주시길 바랍니다.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"container\">\r\n      <div class=\"row mt-lg-n10 mt-md-n11 mt-n10 justify-content-center\">\r\n        <div class=\"col-xl-4 col-lg-5 col-md-7 mx-auto\">\r\n          <div class=\"card z-index-0\">\r\n            <div class=\"card-header text-center pt-4\">\r\n              <h5>사용자 정보를 입력해주세요</h5>\r\n            </div>            \r\n            <div class=\"card-body\">\r\n              <form @submit.prevent=\"submitForm\">\r\n                <argon-input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"이름\"\r\n                  aria-label=\"Name\"\r\n                  v-model=\"name\"\r\n                />\r\n                <argon-input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"이메일\"\r\n                  aria-label=\"Email\"\r\n                  v-model=\"email\"\r\n                />\r\n                <argon-input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"비밀번호\"\r\n                  aria-label=\"Password\"\r\n                  v-model=\"password\"\r\n                />\r\n                <argon-input\r\n                  id=\"confirm_password\"\r\n                  type=\"password\"\r\n                  placeholder=\"비밀번호 확인\"\r\n                  aria-label=\"confirm_Password\"\r\n                  v-model=\"confirmPassword\"\r\n                />\r\n                <div class=\"text-center\">\r\n                  <argon-button\r\n                  type=\"submit\"              \r\n                    fullWidth\r\n                    color=\"dark\"\r\n                    variant=\"gradient\"\r\n                    class=\"my-4 mb-2\"\r\n                    >회원 가입</argon-button\r\n                  >\r\n                </div>\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  <app-footer />\r\n</template>\r\n"],"mappings":";AACA,SAASA,eAAe,EAAEC,aAAa,QAAQ,KAAK;AACpD,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,8BAA8B;;;;;;;IACtD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAErD,MAAMC,IAAI,GAAGX,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMY,KAAK,GAAGZ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMa,QAAQ,GAAGb,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMc,eAAe,GAAGd,GAAG,CAAC,EAAE,CAAC;IAE/B,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIF,QAAQ,CAACG,KAAK,KAAKF,eAAe,CAACE,KAAK,EAAE;QAC5CC,KAAK,CAAC,kBAAkB,CAAC;QACzB,OAAO,CAAC;MACV;MACA,MAAMC,QAAQ,GAAG;QACfP,IAAI,EAAEA,IAAI,CAACK,KAAK;QAChBJ,KAAK,EAAEA,KAAK,CAACI,KAAK;QAClBH,QAAQ,EAAEA,QAAQ,CAACG;MACrB,CAAC;MAED,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,kCAAkC,EAAEF,QAAQ,CAAC;QAC/EG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1B;QACAN,KAAK,CAAC,0CAA0C,CAAC;QACjD;QACAO,UAAU,CAAC,MAAM;UACfC,MAAM,CAACC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACpBV,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC3B;IACF,CAAC;IAED,MAAMW,KAAK,GAAG3B,QAAQ,CAAC,CAAC;IACxBF,aAAa,CAAC,MAAM;MAClB6B,KAAK,CAACC,KAAK,CAACC,gBAAgB,GAAG,IAAI;MACnCF,KAAK,CAACC,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BH,KAAK,CAACC,KAAK,CAACG,WAAW,GAAG,KAAK;MAC/BJ,KAAK,CAACC,KAAK,CAACI,UAAU,GAAG,KAAK;MAC9BzB,IAAI,CAAC0B,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;IACtC,CAAC,CAAC;IACFrC,eAAe,CAAC,MAAM;MACpB8B,KAAK,CAACC,KAAK,CAACC,gBAAgB,GAAG,KAAK;MACpCF,KAAK,CAACC,KAAK,CAACE,UAAU,GAAG,IAAI;MAC7BH,KAAK,CAACC,KAAK,CAACG,WAAW,GAAG,IAAI;MAC9BJ,KAAK,CAACC,KAAK,CAACI,UAAU,GAAG,IAAI;MAC7BzB,IAAI,CAAC0B,SAAS,CAACE,GAAG,CAAC,aAAa,CAAC;IACnC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}