{"ast":null,"code":"import { ref, watch } from \"vue\";\nexport default {\n  __name: 'HyperparameterSelector',\n  props: {\n    modelValue: {\n      type: Object,\n      default: () => ({\n        learningRate: 0.001,\n        // Default as number\n        batchSize: 32,\n        // Default as number\n        epochs: 10,\n        // Default as number\n        optimizer: \"adam\",\n        lossFunction: \"categorical_crossentropy\"\n      })\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localHyperparameters = ref({\n      ...props.modelValue\n    });\n    const handleLearningRateInput = value => {\n      if (value === \"\" || /^0\\.\\d*$|^\\.\\d+$|^0$/.test(value)) {\n        localHyperparameters.value.learningRate = parseFloat(value) || 0;\n      }\n      emitUpdate();\n    };\n    watch(() => props.modelValue, newValue => {\n      if (newValue) {\n        localHyperparameters.value = {\n          ...newValue\n        };\n      }\n    }, {\n      deep: true\n    });\n    const emitUpdate = () => {\n      // 문자열로 변환해야 하는 필드에 대한 변환 처리\n      const updatedHyperparameters = {\n        ...localHyperparameters.value,\n        learningRate: String(localHyperparameters.value.learningRate),\n        batchSize: String(localHyperparameters.value.batchSize),\n        epochs: String(localHyperparameters.value.epochs)\n      };\n      emit(\"update:modelValue\", updatedHyperparameters);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      localHyperparameters,\n      handleLearningRateInput,\n      emitUpdate,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","localHyperparameters","modelValue","handleLearningRateInput","value","test","learningRate","parseFloat","emitUpdate","newValue","deep","updatedHyperparameters","String","batchSize","epochs"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/HyperparameterSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"hyperparameter-settings\">\r\n    <h2>Hyperparameter Settings</h2>\r\n    <div class=\"hyperparameters\">\r\n      <div class=\"form-group\">\r\n        <label for=\"learningRate\">Learning Rate</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"learningRate\"\r\n          v-model=\"localHyperparameters.learningRate\"\r\n          @input=\"handleLearningRateInput($event.target.value)\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"batchSize\">Batch Size</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"batchSize\"\r\n          v-model.number=\"localHyperparameters.batchSize\"\r\n          @input=\"emitUpdate\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"epochs\">Epochs</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"epochs\"\r\n          v-model.number=\"localHyperparameters.epochs\"\r\n          @input=\"emitUpdate\"\r\n          min=\"1\"\r\n          step=\"1\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"optimizer\">Optimizer</label>\r\n        <select id=\"optimizer\" v-model=\"localHyperparameters.optimizer\">\r\n          <option value=\"adam\">Adam</option>\r\n          <option value=\"sgd\">SGD</option>\r\n          <option value=\"rmsprop\">RMSprop</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"lossFunction\">Loss Function</label>\r\n        <select id=\"lossFunction\" v-model=\"localHyperparameters.lossFunction\">\r\n          <option value=\"categorical_crossentropy\">\r\n            Categorical Crossentropy\r\n          </option>\r\n          <option value=\"sparse_categorical_crossentropy\">\r\n            Sparse Categorical Crossentropy\r\n          </option>\r\n          <option value=\"mean_squared_error\">Mean Squared Error</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits } from \"vue\";\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: Object,\r\n    default: () => ({\r\n      learningRate: 0.001, // Default as number\r\n      batchSize: 32, // Default as number\r\n      epochs: 10, // Default as number\r\n      optimizer: \"adam\",\r\n      lossFunction: \"categorical_crossentropy\",\r\n    }),\r\n  },\r\n});\r\n\r\nconst emit = defineEmits([\"update:modelValue\"]);\r\n\r\nconst localHyperparameters = ref({ ...props.modelValue });\r\n\r\nconst handleLearningRateInput = (value) => {\r\n  if (value === \"\" || /^0\\.\\d*$|^\\.\\d+$|^0$/.test(value)) {\r\n    localHyperparameters.value.learningRate = parseFloat(value) || 0;\r\n  }\r\n  emitUpdate();\r\n};\r\n\r\nwatch(\r\n  () => props.modelValue,\r\n  (newValue) => {\r\n    if (newValue) {\r\n      localHyperparameters.value = { ...newValue };\r\n    }\r\n  },\r\n  { deep: true },\r\n);\r\n\r\nconst emitUpdate = () => {\r\n  // 문자열로 변환해야 하는 필드에 대한 변환 처리\r\n  const updatedHyperparameters = {\r\n    ...localHyperparameters.value,\r\n    learningRate: String(localHyperparameters.value.learningRate),\r\n    batchSize: String(localHyperparameters.value.batchSize),\r\n    epochs: String(localHyperparameters.value.epochs),\r\n  };\r\n\r\n  emit(\"update:modelValue\", updatedHyperparameters);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.hyperparameter-settings {\r\n  max-width: 100%;\r\n}\r\n\r\n.hyperparameters {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  min-width: 160px; /* Adjust the minimum width as needed */\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"AA8DA,SAASA,GAAG,EAAEC,KAA+B,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;IAE1D,MAAMC,KAAK,GAAGC,OAWZ;IAEF,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,oBAAoB,GAAGN,GAAG,CAAC;MAAE,GAAGE,KAAK,CAACK;IAAW,CAAC,CAAC;IAEzD,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;MACzC,IAAIA,KAAK,KAAK,EAAE,IAAI,sBAAsB,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;QACtDH,oBAAoB,CAACG,KAAK,CAACE,YAAY,GAAGC,UAAU,CAACH,KAAK,CAAC,IAAI,CAAC;MAClE;MACAI,UAAU,CAAC,CAAC;IACd,CAAC;IAEDZ,KAAK,CACH,MAAMC,KAAK,CAACK,UAAU,EACrBO,QAAQ,IAAK;MACZ,IAAIA,QAAQ,EAAE;QACZR,oBAAoB,CAACG,KAAK,GAAG;UAAE,GAAGK;QAAS,CAAC;MAC9C;IACF,CAAC,EACD;MAAEC,IAAI,EAAE;IAAK,CACf,CAAC;IAED,MAAMF,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,MAAMG,sBAAsB,GAAG;QAC7B,GAAGV,oBAAoB,CAACG,KAAK;QAC7BE,YAAY,EAAEM,MAAM,CAACX,oBAAoB,CAACG,KAAK,CAACE,YAAY,CAAC;QAC7DO,SAAS,EAAED,MAAM,CAACX,oBAAoB,CAACG,KAAK,CAACS,SAAS,CAAC;QACvDC,MAAM,EAAEF,MAAM,CAACX,oBAAoB,CAACG,KAAK,CAACU,MAAM;MAClD,CAAC;MAEDf,IAAI,CAAC,mBAAmB,EAAEY,sBAAsB,CAAC;IACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}