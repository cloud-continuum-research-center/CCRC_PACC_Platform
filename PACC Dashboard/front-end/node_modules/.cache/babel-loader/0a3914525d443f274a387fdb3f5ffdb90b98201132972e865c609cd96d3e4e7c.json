{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nexport default {\n  __name: 'NodeSelector',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const nodes = ref([{\n      id: 1,\n      name: 'Node 1',\n      description: 'Description of Node 1',\n      selected: false\n    }, {\n      id: 2,\n      name: 'Node 2',\n      description: 'Description of Node 2',\n      selected: false\n    }, {\n      id: 3,\n      name: 'Node 3',\n      description: 'Description of Node 3',\n      selected: false\n    }, {\n      id: 4,\n      name: 'Node 4',\n      description: 'Description of Node 4',\n      selected: false\n    }, {\n      id: 5,\n      name: 'Node 5',\n      description: 'Description of Node 5',\n      selected: false\n    }, {\n      id: 6,\n      name: 'Node 6',\n      description: 'Description of Node 6',\n      selected: false\n    }, {\n      id: 7,\n      name: 'Node 7',\n      description: 'Description of Node 7',\n      selected: false\n    }, {\n      id: 8,\n      name: 'Node 8',\n      description: 'Description of Node 8',\n      selected: false\n    }, {\n      id: 9,\n      name: 'Node 9',\n      description: 'Description of Node 9',\n      selected: false\n    }\n    // Add more nodes as needed\n    ]);\n    const selectedNodes = ref([]);\n    const toggleNodeSelection = node => {\n      node.selected = !node.selected;\n      if (node.selected) {\n        selectedNodes.value.push(node);\n      } else {\n        const index = selectedNodes.value.findIndex(n => n.id === node.id);\n        if (index !== -1) {\n          selectedNodes.value.splice(index, 1);\n        }\n      }\n    };\n    const __returned__ = {\n      nodes,\n      selectedNodes,\n      toggleNodeSelection,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","nodes","id","name","description","selected","selectedNodes","toggleNodeSelection","node","value","push","index","findIndex","n","splice"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/NodeSelector.vue"],"sourcesContent":["<template>\r\n    <div class=\"node-selector-container\">\r\n      <!-- Node list on the far left -->\r\n      <div class=\"node-list\">\r\n        <ul>\r\n          <li v-for=\"node in nodes\" :key=\"node.id\" @click=\"selectNode(node)\" :class=\"{ selected: node === selectedNode }\">\r\n            {{ node.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <!-- Description of the selected node in the middle -->\r\n      <div class=\"node-description\" v-if=\"selectedNode\">\r\n        <h3>{{ selectedNode.name }} Description</h3>\r\n        <p>{{ selectedNode.description }}</p>\r\n      </div>\r\n      <div class=\"node-description\" v-else>\r\n        <p>Select a node to see its description.</p>\r\n      </div>\r\n      \r\n      <!-- List of selected nodes on the far right -->\r\n      <div class=\"selected-nodes\">\r\n        <h3>Selected Nodes</h3>\r\n        <ul>\r\n          <li v-for=\"node in selectedNodes\" :key=\"node.id\">{{ node.name }}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  \r\n  const nodes = ref([\r\n    { id: 1, name: 'Node 1', description: 'Description of Node 1', selected: false },\r\n    { id: 2, name: 'Node 2', description: 'Description of Node 2', selected: false },\r\n    { id: 3, name: 'Node 3', description: 'Description of Node 3', selected: false },\r\n    { id: 4, name: 'Node 4', description: 'Description of Node 4', selected: false },\r\n    { id: 5, name: 'Node 5', description: 'Description of Node 5', selected: false },\r\n    { id: 6, name: 'Node 6', description: 'Description of Node 6', selected: false },\r\n    { id: 7, name: 'Node 7', description: 'Description of Node 7', selected: false },\r\n    { id: 8, name: 'Node 8', description: 'Description of Node 8', selected: false },\r\n    { id: 9, name: 'Node 9', description: 'Description of Node 9', selected: false },\r\n    // Add more nodes as needed\r\n  ]);\r\n  \r\n  const selectedNodes = ref([]);\r\n  \r\n  const toggleNodeSelection = (node) => {\r\n    node.selected = !node.selected;\r\n    if (node.selected) {\r\n      selectedNodes.value.push(node);\r\n    } else {\r\n      const index = selectedNodes.value.findIndex((n) => n.id === node.id);\r\n      if (index !== -1) {\r\n        selectedNodes.value.splice(index, 1);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .node-selector-container {\r\n    display: flex;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .node-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 250px;\r\n    border-right: 1px solid #ddd;\r\n  }\r\n  \r\n  .node-list li {\r\n    padding: 15px 20px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid #eee;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .node-list li:hover, .node-list li.selected {\r\n    background-color: #d3d3d3;\r\n  }\r\n  \r\n  .node-description {\r\n    padding: 20px;\r\n    flex-grow: 1;\r\n    border-radius: 0 8px 8px 0;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .node-selector-container {\r\n      flex-direction: column;\r\n    }\r\n    .node-list ul {\r\n      width: auto;\r\n      border-right: none;\r\n    }\r\n    .node-list li {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":";AA+BE,SAASA,GAAG,QAAQ,KAAK;;;;;;;IAEzB,MAAMC,KAAK,GAAGD,GAAG,CAAC,CAChB;MAAEE,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChF;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,uBAAuB;MAAEC,QAAQ,EAAE;IAAM;IAC/E;IAAA,CACD,CAAC;IAEF,MAAMC,aAAa,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE7B,MAAMO,mBAAmB,GAAIC,IAAI,IAAK;MACpCA,IAAI,CAACH,QAAQ,GAAG,CAACG,IAAI,CAACH,QAAQ;MAC9B,IAAIG,IAAI,CAACH,QAAQ,EAAE;QACjBC,aAAa,CAACG,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;MAChC,CAAC,MAAM;QACL,MAAMG,KAAK,GAAGL,aAAa,CAACG,KAAK,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACX,EAAE,KAAKM,IAAI,CAACN,EAAE,CAAC;QACpE,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBL,aAAa,CAACG,KAAK,CAACK,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QACtC;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}