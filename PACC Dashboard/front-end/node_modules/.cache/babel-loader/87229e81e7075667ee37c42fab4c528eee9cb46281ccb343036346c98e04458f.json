{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport { Doughnut } from 'vue3-chart-v2';\nexport default {\n  __name: 'GaugeComponent',\n  props: {\n    totalSize: Number,\n    remainingSize: Number\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartData = ref({\n      labels: ['Used', 'Free'],\n      datasets: [{\n        data: [0,\n        // Initial dummy data, will be replaced by watch effect\n        0],\n        backgroundColor: ['#42A5F5', '#ddd'],\n        borderWidth: 0\n      }]\n    });\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        animateRotate: true,\n        animateScale: false\n      },\n      circumference: 180,\n      rotation: 270\n    };\n\n    // Update chart data whenever props change\n    watch([() => props.totalSize, () => props.remainingSize], () => {\n      chartData.value.datasets[0].data = [(props.totalSize - props.remainingSize) / props.totalSize * 100, props.remainingSize / props.totalSize * 100];\n    }, {\n      immediate: true\n    }); // Immediate true to update data on initial render\n\n    const __returned__ = {\n      props,\n      chartData,\n      chartOptions,\n      ref,\n      watch,\n      get Doughnut() {\n        return Doughnut;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","Doughnut","props","__props","chartData","labels","datasets","data","backgroundColor","borderWidth","chartOptions","responsive","maintainAspectRatio","animation","animateRotate","animateScale","circumference","rotation","totalSize","remainingSize","value","immediate"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/GaugeComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <Doughnut :chart-data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </template>\r\n  \r\n<script setup>\r\nimport { ref, watch, defineProps } from \"vue\";\r\nimport { Doughnut } from 'vue3-chart-v2';\r\n\r\nconst props = defineProps({\r\n  totalSize: Number,\r\n  remainingSize: Number\r\n});\r\n\r\nconst chartData = ref({\r\n  labels: ['Used', 'Free'],\r\n  datasets: [\r\n    {\r\n      data: [\r\n        0, // Initial dummy data, will be replaced by watch effect\r\n        0\r\n      ],\r\n      backgroundColor: ['#42A5F5', '#ddd'],\r\n      borderWidth: 0\r\n    }\r\n  ]\r\n});\r\n\r\nconst chartOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  circumference: 180,\r\n  rotation: 270\r\n};\r\n\r\n// Update chart data whenever props change\r\nwatch([() => props.totalSize, () => props.remainingSize], () => {\r\n  chartData.value.datasets[0].data = [\r\n    ((props.totalSize - props.remainingSize) / props.totalSize) * 100,\r\n    (props.remainingSize / props.totalSize) * 100\r\n  ];\r\n}, { immediate: true }); // Immediate true to update data on initial render\r\n\r\n</script>\r\n"],"mappings":"AAOA,SAASA,GAAG,EAAEC,KAAkB,QAAQ,KAAK;AAC7C,SAASC,QAAQ,QAAQ,eAAe;;;;;;;;;;;IAExC,MAAMC,KAAK,GAAGC,OAGZ;IAEF,MAAMC,SAAS,GAAGL,GAAG,CAAC;MACpBM,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;MACxBC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,CACJ,CAAC;QAAE;QACH,CAAC,CACF;QACDC,eAAe,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;QACpCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAG;MACnBC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,SAAS,EAAE;QACTC,aAAa,EAAE,IAAI;QACnBC,YAAY,EAAE;MAChB,CAAC;MACDC,aAAa,EAAE,GAAG;MAClBC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACAjB,KAAK,CAAC,CAAC,MAAME,KAAK,CAACgB,SAAS,EAAE,MAAMhB,KAAK,CAACiB,aAAa,CAAC,EAAE,MAAM;MAC9Df,SAAS,CAACgB,KAAK,CAACd,QAAQ,CAAC,CAAC,CAAC,CAACC,IAAI,GAAG,CAChC,CAACL,KAAK,CAACgB,SAAS,GAAGhB,KAAK,CAACiB,aAAa,IAAIjB,KAAK,CAACgB,SAAS,GAAI,GAAG,EAChEhB,KAAK,CAACiB,aAAa,GAAGjB,KAAK,CAACgB,SAAS,GAAI,GAAG,CAC9C;IACH,CAAC,EAAE;MAAEG,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}