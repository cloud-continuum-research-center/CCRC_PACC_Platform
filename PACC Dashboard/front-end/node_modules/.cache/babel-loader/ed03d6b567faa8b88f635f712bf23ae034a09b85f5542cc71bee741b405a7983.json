{"ast":null,"code":"import { reactive, onMounted, watch, ref } from 'vue';\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const lineChart1 = ref(null);\n    const lineChart2 = ref(null);\n    const lineChart1Instance = ref(null);\n    const lineChart2Instance = ref(null);\n    const pieChart1 = ref(null);\n    const pieChart2 = ref(null);\n    const projectInfo = reactive({\n      progress: 0,\n      epoch: 0,\n      accuracy: 0,\n      loss: 0,\n      accuracylist: [],\n      losslist: []\n    });\n    const setupCharts = () => {\n      const lineChart1Ctx = lineChart1.value.getContext('2d');\n      const lineChart2Ctx = lineChart2.value.getContext('2d');\n      // Chart setup code here...\n    };\n    const updateCharts = (accuracy, loss) => {\n      // Chart update code here...\n    };\n    const store = useStore();\n    const intervalId = ref(null);\n    const startFetching = () => {\n      const projectId = store.state.selectedProjectId;\n      if (projectId && store.state.authToken) {\n        if (intervalId.value) clearInterval(intervalId.value);\n        intervalId.value = setInterval(async () => {\n          await store.dispatch(\"fetchProjectInfoById\", projectId);\n          const projectData = store.state.projectsInfo[projectId];\n          if (projectData) {\n            Object.assign(projectInfo, {\n              progress: projectData.progress || 0,\n              epoch: projectData.epoch || 0,\n              accuracy: projectData.accuracy && projectData.accuracy.length > 0 ? projectData.accuracy[projectData.accuracy.length - 1] : 0,\n              loss: projectData.loss && projectData.loss.length > 0 ? projectData.loss[projectData.loss.length - 1] : 0,\n              accuracylist: projectData.accuracy || [],\n              losslist: projectData.loss || []\n            });\n            updateCharts(projectInfo.accuracylist, projectInfo.losslist);\n          }\n        }, 3000);\n      }\n    };\n    onMounted(() => {\n      setupCharts();\n      if (store.state.authToken && store.state.userEmail && store.state.selectedProjectId) {\n        startFetching();\n      }\n    });\n    watch(() => store.state.selectedProjectId, newId => {\n      if (newId) startFetching();else if (intervalId.value) clearInterval(intervalId.value);\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      if (intervalId.value) clearInterval(intervalId.value);\n    });\n    const __returned__ = {\n      lineChart1,\n      lineChart2,\n      lineChart1Instance,\n      lineChart2Instance,\n      pieChart1,\n      pieChart2,\n      projectInfo,\n      setupCharts,\n      updateCharts,\n      store,\n      intervalId,\n      startFetching,\n      reactive,\n      onMounted,\n      watch,\n      ref,\n      ProjectList,\n      get useStore() {\n        return useStore;\n      },\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","watch","ref","ProjectList","useStore","Chart","registerables","register","lineChart1","lineChart2","lineChart1Instance","lineChart2Instance","pieChart1","pieChart2","projectInfo","progress","epoch","accuracy","loss","accuracylist","losslist","setupCharts","lineChart1Ctx","value","getContext","lineChart2Ctx","updateCharts","store","intervalId","startFetching","projectId","state","selectedProjectId","authToken","clearInterval","setInterval","dispatch","projectData","projectsInfo","Object","assign","length","userEmail","newId","immediate","onUnmounted"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : '0' }}</p>\n    <p class=\"project-info-highlight accuracy\">모델 정확도: {{ projectInfo.accuracy ? projectInfo.accuracy.toFixed(2) + '%' : '0' }}</p>\n    <p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas ref=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n\n\n<script setup>\nimport { reactive, onMounted, watch, ref } from 'vue';\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst lineChart1Instance = ref(null);\nconst lineChart2Instance = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\nconst projectInfo = reactive({\n  progress: 0,\n  epoch: 0,\n  accuracy: 0,\n  loss: 0,\n  accuracylist: [],\n  losslist: []\n});\n\nconst setupCharts = () => {\n  const lineChart1Ctx = lineChart1.value.getContext('2d');\n  const lineChart2Ctx = lineChart2.value.getContext('2d');\n  // Chart setup code here...\n};\n\nconst updateCharts = (accuracy, loss) => {\n  // Chart update code here...\n};\n\nconst store = useStore();\nconst intervalId = ref(null);\n\nconst startFetching = () => {\n  const projectId = store.state.selectedProjectId;\n  if (projectId && store.state.authToken) {\n    if (intervalId.value) clearInterval(intervalId.value);\n    intervalId.value = setInterval(async () => {\n      await store.dispatch(\"fetchProjectInfoById\", projectId);\n      const projectData = store.state.projectsInfo[projectId];\n      if (projectData) {\n        Object.assign(projectInfo, {\n          progress: projectData.progress || 0,\n          epoch: projectData.epoch || 0,\n          accuracy: projectData.accuracy && projectData.accuracy.length > 0 ? projectData.accuracy[projectData.accuracy.length - 1] : 0,\n          loss: projectData.loss && projectData.loss.length > 0 ? projectData.loss[projectData.loss.length - 1] : 0,\n          accuracylist: projectData.accuracy || [],\n          losslist: projectData.loss || []\n        });\n        updateCharts(projectInfo.accuracylist, projectInfo.losslist);\n      }\n    }, 3000);\n  }\n};\n\nonMounted(() => {\n  setupCharts();\n  if (store.state.authToken && store.state.userEmail && store.state.selectedProjectId) {\n    startFetching();\n  }\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId) startFetching();\n  else if (intervalId.value) clearInterval(intervalId.value);\n}, { immediate: true });\n\nonUnmounted(() => {\n  if (intervalId.value) clearInterval(intervalId.value);\n});\n</script>\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}