{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3a34df2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"project-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"project-header\"\n}, \"프로젝트 목록\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"project-content\"\n};\nconst _hoisted_4 = {\n  class: \"project-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"project-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.projects, (project, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      onClick: $event => $setup.selectProject(project),\n      class: _normalizeClass({\n        'is-selected': project.id === $setup.selectedProject.id\n      })\n    }, _toDisplayString(project.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h4\", null, _toDisplayString($setup.selectedProject.name || 'No project selected'), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.selectedProject.description || 'Select a project to see the description'), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","projects","project","index","key","onClick","$event","selectProject","_normalizeClass","id","selectedProject","name","_hoisted_5","_hoisted_6","_toDisplayString","description"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\ProjectsList.vue"],"sourcesContent":["<template>\r\n    <div class=\"project-container\">\r\n      <h3 class=\"project-header\">프로젝트 목록</h3>\r\n      <div class=\"project-content\">\r\n        <div class=\"project-list\">\r\n          <ul>\r\n            <li\r\n              v-for=\"(project, index) in projects\"\r\n              :key=\"index\"\r\n              @click=\"selectProject(project)\"\r\n              :class=\"{ 'is-selected': project.id === selectedProject.id }\"\r\n            >\r\n              {{ project.name }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"project-description\">\r\n          <h4>{{ selectedProject.name || 'No project selected' }}</h4>\r\n          <p>{{ selectedProject.description || 'Select a project to see the description' }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n<script setup>\r\n  import { ref } from 'vue';\r\n  \r\n  const projects = ref([{ /* ... project data ... */ }]);\r\n  const selectedProject = ref({});\r\n  \r\n  const selectProject = (project) => {\r\n    selectedProject.value = project;\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .project-container {\r\n    width: 80%;\r\n    margin-left: 30px;\r\n    margin-top: 30px;\r\n    display: flex;\r\n    border: 1px solid #ccc; /* Add a border to the entire container */\r\n    border-radius: 8px; /* Rounded corners */\r\n    overflow: hidden; /* Ensure nested elements don't overflow */\r\n    background-color: white; /* White background for the container */\r\n  }\r\n  \r\n  .project-header {\r\n    text-align: center;\r\n    background-color: #f5f5f5; /* Light grey background for the header */\r\n    padding: 10px 0; /* Some padding around the header text */\r\n  }\r\n  \r\n  .project-content {\r\n    display: flex;\r\n  }\r\n  \r\n  .project-list {\r\n    flex: 1; /* Take up an equal amount of space */\r\n    border-right: 1px solid #ccc; /* Separator between list and description */\r\n  }\r\n  \r\n  .project-list ul {\r\n    list-style: none; /* Remove default list styling */\r\n    padding: 0; /* Remove default padding */\r\n    margin: 0; /* Remove default margin */\r\n  }\r\n  \r\n  .project-list li {\r\n    padding: 10px; /* Add some padding to each list item */\r\n    cursor: pointer; /* Change cursor to indicate interactivity */\r\n    transition: background-color 0.3s; /* Smooth transition for hover effect */\r\n  }\r\n  \r\n  .project-list li:hover,\r\n  .project-list li.is-selected {\r\n    background-color: #e8f5e9; /* Highlight on hover and selection */\r\n  }\r\n  \r\n  .project-description {\r\n    flex: 2; /* Take up double the space of the list */\r\n    padding: 20px; /* More padding for the description area */\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAgB,GAAC,SAAO;;EAC7BA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAc;mBAJjC;;EAgBaA,KAAK,EAAC;AAAqB;;uBAfpCE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAuC,EACvCH,mBAAA,CAiBM,OAjBNI,UAiBM,GAhBJJ,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CASK,c,kBARHC,mBAAA,CAOKK,SAAA,QAbjBC,WAAA,CAOyCC,MAAA,CAAAC,QAAQ,EAPjD,CAOsBC,OAAO,EAAEC,KAAK;yBADxBV,mBAAA,CAOK;MALFW,GAAG,EAAED,KAAK;MACVE,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,aAAa,CAACL,OAAO;MAC5BX,KAAK,EAVpBiB,eAAA;QAAA,eAUuCN,OAAO,CAACO,EAAE,KAAKT,MAAA,CAAAU,eAAe,CAACD;MAAE;wBAEvDP,OAAO,CAACS,IAAI,gCAZ7BC,UAAA;sCAgBQpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJrB,mBAAA,CAA4D,YAAAsB,gBAAA,CAArDd,MAAA,CAAAU,eAAe,CAACC,IAAI,2CAC3BnB,mBAAA,CAAqF,WAAAsB,gBAAA,CAA/Ed,MAAA,CAAAU,eAAe,CAACK,WAAW,8D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}