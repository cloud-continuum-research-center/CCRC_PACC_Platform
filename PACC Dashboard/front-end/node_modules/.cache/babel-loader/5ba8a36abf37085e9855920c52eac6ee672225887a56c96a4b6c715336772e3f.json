{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport MemoryGauge from \"./components/MemoryGaugeComponent.vue\";\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const nodeData = computed(() => {\n      return store.getters.getAllNodeData; // Ensure this getter is defined in your store\n    });\n    onMounted(() => {\n      // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        // 실시간 데이터 가져오기를 시작합니다.\n        startFetchingNodeMonitoringData();\n      }\n    });\n\n    // 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\n    onUnmounted(() => {\n      stopFetchingRealTimeData();\n    });\n\n    // 실시간 데이터를 주기적으로 가져오기 위한 로직입니다.\n    const DataInterval = ref(null);\n    function startFetchingNodeMonitoringData() {\n      // 1초마다 실시간 데이터를 가져오는 동작을 수행합니다.\n      DataInterval.value = setInterval(() => {\n        store.dispatch('fetchData');\n      }, 1000);\n    }\n    function stopFetchingRealTimeData() {\n      clearInterval(realTimeDataInterval.value);\n    }\n    const __returned__ = {\n      store,\n      nodeData,\n      DataInterval,\n      startFetchingNodeMonitoringData,\n      stopFetchingRealTimeData,\n      ProjectList,\n      onMounted,\n      onUnmounted,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      MemoryGauge\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","onMounted","onUnmounted","ref","useStore","MemoryGauge","store","nodeData","computed","getters","getAllNodeData","state","authToken","userEmail","dispatch","startFetchingNodeMonitoringData","stopFetchingRealTimeData","DataInterval","value","setInterval","clearInterval","realTimeDataInterval"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\r\nimport ProjectList from \"./components/ProjectsList.vue\";\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport MemoryGauge from \"./components/MemoryGaugeComponent.vue\";\r\n\r\nconst store = useStore();\r\n\r\nconst nodeData = computed(() => {\r\n  return store.getters.getAllNodeData; // Ensure this getter is defined in your store\r\n});\r\n\r\n\r\nonMounted(() => {\r\n  // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\r\n  if (store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjects\");\r\n    // 실시간 데이터 가져오기를 시작합니다.\r\n    startFetchingNodeMonitoringData();\r\n  }\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\r\nonUnmounted(() => {\r\n  stopFetchingRealTimeData();\r\n});\r\n\r\n// 실시간 데이터를 주기적으로 가져오기 위한 로직입니다.\r\nconst DataInterval = ref(null);\r\n\r\nfunction startFetchingNodeMonitoringData() {\r\n  // 1초마다 실시간 데이터를 가져오는 동작을 수행합니다.\r\n  DataInterval.value = setInterval(() => {\r\n    store.dispatch('fetchData');\r\n  }, 1000);\r\n}\r\n\r\nfunction stopFetchingRealTimeData() {\r\n  clearInterval(realTimeDataInterval.value);\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"dashboard\">\r\n    <ProjectList />\r\n    <MemoryGauge v-for=\"node in nodeData\" :key=\"node.name\" :total-size=\"node.totalMemory\" :remaining-size=\"node.freeMemory\" />\r\n  </div>\r\n</template>"],"mappings":"AACA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,SAASC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACjD,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,WAAW,MAAM,uCAAuC;;;;;;;IAE/D,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAExB,MAAMG,QAAQ,GAAGC,QAAQ,CAAC,MAAM;MAC9B,OAAOF,KAAK,CAACG,OAAO,CAACC,cAAc,CAAC,CAAC;IACvC,CAAC,CAAC;IAGFT,SAAS,CAAC,MAAM;MACd;MACA,IAAIK,KAAK,CAACK,KAAK,CAACC,SAAS,IAAIN,KAAK,CAACK,KAAK,CAACE,SAAS,EAAE;QAClDP,KAAK,CAACQ,QAAQ,CAAC,eAAe,CAAC;QAC/B;QACAC,+BAA+B,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;;IAEF;IACAb,WAAW,CAAC,MAAM;MAChBc,wBAAwB,CAAC,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAGd,GAAG,CAAC,IAAI,CAAC;IAE9B,SAASY,+BAA+BA,CAAA,EAAG;MACzC;MACAE,YAAY,CAACC,KAAK,GAAGC,WAAW,CAAC,MAAM;QACrCb,KAAK,CAACQ,QAAQ,CAAC,WAAW,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,SAASE,wBAAwBA,CAAA,EAAG;MAClCI,aAAa,CAACC,oBAAoB,CAACH,KAAK,CAAC;IAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}