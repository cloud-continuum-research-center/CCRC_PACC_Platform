{"ast":null,"code":"import { mergeProps as _mergeProps, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"nav\", _mergeProps({\n    class: [\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\", $setup.isRTL ? 'top-0 position-sticky z-index-sticky' : '']\n  }, _ctx.$attrs, {\n    id: \"navbarBlur\",\n    \"data-scroll\": \"true\"\n  }), null, 16 /* FULL_PROPS */);\n}","map":{"version":3,"names":["_createElementBlock","_mergeProps","class","$setup","isRTL","_ctx","$attrs","id"],"sources":["D:\\Git\\ITRC_Front\\vue-flask-dashboard\\front-end\\src\\examples\\Navbars\\Navbar.vue"],"sourcesContent":["<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter, useRoute } from \"vue-router\"; // Correctly import both useRouter and useRoute\nimport Breadcrumbs from \"../Breadcrumbs.vue\";\n\nconst store = useStore();\nconst router = useRouter();\nconst route = useRoute(); // Use useRoute to access the current route information\nconst isRTL = computed(() => store.state.isRTL);\nconst userEmail = computed(() => store.state.userEmail);\n\nconst currentRouteName = computed(() => router.currentRoute.value.name);\n\nconst currentDirectory = computed(() => {\n  const dir = route.path.split(\"/\")[1];\n  return dir.charAt(0).toUpperCase() + dir.slice(1);\n});\n\nconst logout = () => {\n  store\n    .dispatch(\"logout\")\n    .then(() => {\n      router.push(\"/signin\");\n    })\n    .catch((error) => {\n      console.error(\"Logout Error:\", error);\n    });\n};\n</script>\n<template>\n  <nav\n    class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\n    :class=\"isRTL ? 'top-0 position-sticky z-index-sticky' : ''\"\n    v-bind=\"$attrs\"\n    id=\"navbarBlur\"\n    data-scroll=\"true\"\n  >\n    \n  </nav>\n</template>\n"],"mappings":";;uBA+BEA,mBAAA,CAQM,OARNC,WAAA,CAQM;IAPJC,KAAK,GAAC,4EAA4E,EAC1EC,MAAA,CAAAC,KAAK;KACLC,IAAA,CAAAC,MAAM;IACdC,EAAE,EAAC,YAAY;IACf,aAAW,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}