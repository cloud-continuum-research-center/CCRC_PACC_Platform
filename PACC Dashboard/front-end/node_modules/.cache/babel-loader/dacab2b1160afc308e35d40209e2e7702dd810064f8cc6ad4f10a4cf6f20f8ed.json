{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nimport Chart from \"chart.js/auto\";\nimport 'chartjs-plugin-datalabels';\nexport default {\n  __name: 'GaugeComponent',\n  props: {\n    totalSize: Number,\n    remainingSize: Number,\n    nodeName: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartCanvas = ref(null);\n    let myChart = null;\n    const createChartData = (totalSize, remainingSize) => {\n      const usedSize = totalSize - remainingSize;\n      return {\n        labels: [\"Used\", \"Free\"],\n        datasets: [{\n          label: 'Memory Usage',\n          data: [usedSize, remainingSize],\n          backgroundColor: [\"#42A5F5\", \"#ddd\"],\n          borderWidth: 0\n        }]\n      };\n    };\n\n    // Chart.js chart configuration\n    const createChartConfig = chartData => {\n      return {\n        type: \"doughnut\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            animateRotate: true,\n            animateScale: false\n          },\n          circumference: 180,\n          rotation: 270,\n          title: {\n            display: true,\n            text: props.nodeName,\n            color: '#666',\n            font: {\n              size: 16\n            }\n          },\n          tooltips: {\n            enabled: true,\n            mode: 'index',\n            intersect: false,\n            callbacks: {\n              label: function (tooltipItem, data) {\n                let label = data.datasets[tooltipItem.datasetIndex].label || '';\n                if (label) {\n                  label += ': ';\n                }\n                label += `${tooltipItem.yLabel} MB`;\n                return label;\n              }\n            }\n          },\n          plugins: {\n            datalabels: {\n              color: '#444',\n              textAlign: 'center',\n              font: {\n                weight: 'bold',\n                size: 16\n              },\n              formatter: (value, context) => {\n                return context.chart.data.labels[context.dataIndex] + \"\\n\" + value + ' MB';\n              }\n            }\n          }\n        },\n        plugins: ['datalabels']\n      };\n    };\n    onMounted(() => {\n      const chartData = createChartData(props.totalSize, props.remainingSize);\n      const config = createChartConfig(chartData);\n      const context = chartCanvas.value.getContext('2d');\n      myChart = new Chart(context, config);\n    });\n    watch(() => [props.totalSize, props.remainingSize], newValues => {\n      const [totalSize, remainingSize] = newValues;\n      const newChartData = createChartData(totalSize, remainingSize);\n      if (myChart) {\n        myChart.data = newChartData;\n        myChart.update();\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      chartCanvas,\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      createChartData,\n      createChartConfig,\n      ref,\n      onMounted,\n      watch,\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","props","__props","chartCanvas","myChart","createChartData","totalSize","remainingSize","usedSize","labels","datasets","label","data","backgroundColor","borderWidth","createChartConfig","chartData","type","options","responsive","maintainAspectRatio","animation","animateRotate","animateScale","circumference","rotation","title","display","text","nodeName","color","font","size","tooltips","enabled","mode","intersect","callbacks","tooltipItem","datasetIndex","yLabel","plugins","datalabels","textAlign","weight","formatter","value","context","chart","dataIndex","config","getContext","newValues","newChartData","update","immediate"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/GaugeComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch, defineProps } from \"vue\";\r\nimport Chart from \"chart.js/auto\";\r\nimport 'chartjs-plugin-datalabels'; \r\n\r\nconst props = defineProps({\r\n  totalSize: Number,\r\n  remainingSize: Number,\r\n  nodeName: String\r\n});\r\n\r\nconst chartCanvas = ref(null);\r\nlet myChart = null;\r\n\r\nconst createChartData = (totalSize, remainingSize) => {\r\n  const usedSize = totalSize - remainingSize;\r\n  return {\r\n    labels: [\"Used\", \"Free\"],\r\n    datasets: [\r\n      {\r\n        label: 'Memory Usage',\r\n        data: [usedSize, remainingSize],\r\n        backgroundColor: [\"#42A5F5\", \"#ddd\"],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\n// Chart.js chart configuration\r\nconst createChartConfig = (chartData) => {\r\n  return {\r\n    type: \"doughnut\",\r\n    data: chartData,\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      animation: {\r\n        animateRotate: true,\r\n        animateScale: false,\r\n      },\r\n      circumference: 180,\r\n      rotation: 270,\r\n      title: {\r\n        display: true,\r\n        text: props.nodeName,\r\n        color: '#666',\r\n        font: {\r\n          size: 16\r\n        }\r\n      },\r\n      tooltips: {\r\n        enabled: true,\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(tooltipItem, data) {\r\n            let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            label += `${tooltipItem.yLabel} MB`;\r\n            return label;\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          color: '#444',\r\n          textAlign: 'center',\r\n          font: {\r\n            weight: 'bold',\r\n            size: 16,\r\n          },\r\n          formatter: (value, context) => {\r\n            return context.chart.data.labels[context.dataIndex] + \"\\n\" + value + ' MB';\r\n          }\r\n        }\r\n      }\r\n    },\r\n    plugins: ['datalabels']\r\n  };\r\n};\r\n\r\nonMounted(() => {\r\n  const chartData = createChartData(props.totalSize, props.remainingSize);\r\n  const config = createChartConfig(chartData);\r\n\r\n  const context = chartCanvas.value.getContext('2d');\r\n  myChart = new Chart(context, config);\r\n});\r\n\r\nwatch(() => [props.totalSize, props.remainingSize], (newValues) => {\r\n  const [totalSize, remainingSize] = newValues;\r\n  const newChartData = createChartData(totalSize, remainingSize);\r\n\r\n  if (myChart) {\r\n    myChart.data = newChartData;\r\n    myChart.update();\r\n  }\r\n}, { immediate: true });\r\n\r\n</script>\r\n\r\n<style>\r\n.chart-container {\r\n  overflow: visible; /* Ensures no clipping */\r\n  opacity: 1; /* Checks that it's not hidden */\r\n  position: relative;\r\n  height: 40vh;\r\n  width: 80vw;\r\n}\r\n</style>\r\n"],"mappings":"AAOA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAkB,QAAQ,KAAK;AACxD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,2BAA2B;;;;;;;;;;;;IAElC,MAAMC,KAAK,GAAGC,OAIZ;IAEF,MAAMC,WAAW,GAAGN,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIO,OAAO,GAAG,IAAI;IAElB,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,aAAa,KAAK;MACpD,MAAMC,QAAQ,GAAGF,SAAS,GAAGC,aAAa;MAC1C,OAAO;QACLE,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACxBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAE,CAACJ,QAAQ,EAAED,aAAa,CAAC;UAC/BM,eAAe,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;IACH,CAAC;;IAED;IACA,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;MACvC,OAAO;QACLC,IAAI,EAAE,UAAU;QAChBL,IAAI,EAAEI,SAAS;QACfE,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,SAAS,EAAE;YACTC,aAAa,EAAE,IAAI;YACnBC,YAAY,EAAE;UAChB,CAAC;UACDC,aAAa,EAAE,GAAG;UAClBC,QAAQ,EAAE,GAAG;UACbC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE3B,KAAK,CAAC4B,QAAQ;YACpBC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE;cACJC,IAAI,EAAE;YACR;UACF,CAAC;UACDC,QAAQ,EAAE;YACRC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,OAAO;YACbC,SAAS,EAAE,KAAK;YAChBC,SAAS,EAAE;cACT1B,KAAK,EAAE,SAAAA,CAAS2B,WAAW,EAAE1B,IAAI,EAAE;gBACjC,IAAID,KAAK,GAAGC,IAAI,CAACF,QAAQ,CAAC4B,WAAW,CAACC,YAAY,CAAC,CAAC5B,KAAK,IAAI,EAAE;gBAC/D,IAAIA,KAAK,EAAE;kBACTA,KAAK,IAAI,IAAI;gBACf;gBACAA,KAAK,IAAK,GAAE2B,WAAW,CAACE,MAAO,KAAI;gBACnC,OAAO7B,KAAK;cACd;YACF;UACF,CAAC;UACD8B,OAAO,EAAE;YACPC,UAAU,EAAE;cACVZ,KAAK,EAAE,MAAM;cACba,SAAS,EAAE,QAAQ;cACnBZ,IAAI,EAAE;gBACJa,MAAM,EAAE,MAAM;gBACdZ,IAAI,EAAE;cACR,CAAC;cACDa,SAAS,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;gBAC7B,OAAOA,OAAO,CAACC,KAAK,CAACpC,IAAI,CAACH,MAAM,CAACsC,OAAO,CAACE,SAAS,CAAC,GAAG,IAAI,GAAGH,KAAK,GAAG,KAAK;cAC5E;YACF;UACF;QACF,CAAC;QACDL,OAAO,EAAE,CAAC,YAAY;MACxB,CAAC;IACH,CAAC;IAED3C,SAAS,CAAC,MAAM;MACd,MAAMkB,SAAS,GAAGX,eAAe,CAACJ,KAAK,CAACK,SAAS,EAAEL,KAAK,CAACM,aAAa,CAAC;MACvE,MAAM2C,MAAM,GAAGnC,iBAAiB,CAACC,SAAS,CAAC;MAE3C,MAAM+B,OAAO,GAAG5C,WAAW,CAAC2C,KAAK,CAACK,UAAU,CAAC,IAAI,CAAC;MAClD/C,OAAO,GAAG,IAAIJ,KAAK,CAAC+C,OAAO,EAAEG,MAAM,CAAC;IACtC,CAAC,CAAC;IAEFnD,KAAK,CAAC,MAAM,CAACE,KAAK,CAACK,SAAS,EAAEL,KAAK,CAACM,aAAa,CAAC,EAAG6C,SAAS,IAAK;MACjE,MAAM,CAAC9C,SAAS,EAAEC,aAAa,CAAC,GAAG6C,SAAS;MAC5C,MAAMC,YAAY,GAAGhD,eAAe,CAACC,SAAS,EAAEC,aAAa,CAAC;MAE9D,IAAIH,OAAO,EAAE;QACXA,OAAO,CAACQ,IAAI,GAAGyC,YAAY;QAC3BjD,OAAO,CAACkD,MAAM,CAAC,CAAC;MAClB;IACF,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}