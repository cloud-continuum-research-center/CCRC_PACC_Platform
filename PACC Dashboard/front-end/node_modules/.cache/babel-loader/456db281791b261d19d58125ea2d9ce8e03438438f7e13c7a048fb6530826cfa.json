{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7cd58ab4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"memory-gauge\"\n};\nconst _hoisted_2 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\MemoryGaugeComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <GaugeComponent :total-size=\"totalSize\" :remaining-size=\"remainingSize\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport GaugeComponent from './GaugeComponent.vue';\r\n\r\n// Props are defined to accept totalSize and remainingSize from the parent component\r\nconst props = defineProps({\r\n  totalSize: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  remainingSize: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst { totalSize, remainingSize } = props;\r\n</script> -->\r\n\r\n\r\n<template>\r\n    <div class=\"memory-gauge\">\r\n      <canvas ref=\"chartCanvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, onUnmounted } from 'vue';\r\n  import Chart from 'chart.js/auto';\r\n  \r\n  const chartCanvas = ref(null);\r\n  let chartInstance = null;\r\n  \r\n  onMounted(() => {\r\n    if (chartCanvas.value) {\r\n      const context = chartCanvas.value.getContext('2d');\r\n      chartInstance = new Chart(context, {\r\n        type: 'doughnut',\r\n        data: {\r\n          labels: ['Used', 'Free'],\r\n          datasets: [\r\n            {\r\n              label: 'Memory Usage',\r\n              data: [30, 70], // Example data\r\n              backgroundColor: ['#FF6384', '#36A2EB'],\r\n              hoverBackgroundColor: ['#FF6384', '#36A2EB'],\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          circumference: 180,\r\n          rotation: 270,\r\n        },\r\n      });\r\n    }\r\n  });\r\n  onUnmounted(() => {\r\n  if (chartInstance) {\r\n    chartInstance.destroy();\r\n  }\r\n});\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .memory-gauge {\r\n    width: 50%;\r\n    margin: auto;\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EA6BSA,KAAK,EAAC;AAAc;;EACfC,GAAG,EAAC;AAAa;;uBAD3BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAAmC,UAAnCC,UAAmC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}