{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8b1396ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"project-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"project-widget-header\"\n}, \"Project List\", -1));\nconst _hoisted_3 = {\n  class: \"project-widget-body\"\n};\nconst _hoisted_4 = {\n  class: \"project-list-container\"\n};\nconst _hoisted_5 = {\n  class: \"project-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"project-description-container\"\n};\nconst _hoisted_8 = {\n  class: \"project-actions-container\"\n};\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  __name: 'ProjectsList',\n  setup(__props) {\n    const store = useStore();\n    const projects = computed(() => store.getters.userProjects);\n    const selectedProject = ref({});\n    const selectProject = project => {\n      selectedProject.value = project;\n    };\n    const stopTraining = async () => {\n      if (!selectedProject.value || !selectedProject.value.id) {\n        console.error(\"No project selected or selected project does not have an id\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/stop-training\", {\n          projectId: selectedProject.value.id\n        }, {\n          headers: {\n            Authorization: `Bearer ${store.state.authToken}`\n          }\n        });\n        if (response.data.success) {\n          console.log(\"학습 중단 요청 성공\", selectedProject.value.id);\n          // Refetch projects to update the list\n          await store.dispatch(\"fetchProjects\");\n          // Update selectedProject to reflect the changes if it's still selected\n          const updatedProject = store.getters.userProjects.find(p => p.id === selectedProject.value.id);\n          if (updatedProject) {\n            selectedProject.value = updatedProject;\n          }\n        } else {\n          // Handle case where response.data.success is false\n          throw new Error('학습 중단 요청이 실패했습니다.');\n        }\n      } catch (error) {\n        console.error(\"학습 중단 요청 실패\", selectedProject.value.id, error);\n        // Display an error message to the user\n        alert('학습 중지 요청에 실패하였습니다.'); // Use a more user-friendly error handling instead of alert\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projects.value, (project, index) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: index,\n          onClick: $event => selectProject(project),\n          class: _normalizeClass({\n            'is-selected': project.id === selectedProject.value.id\n          })\n        }, _toDisplayString(project.model_name) + \" - \" + _toDisplayString(project.dataset_name), 11, _hoisted_6);\n      }), 128))])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h4\", null, _toDisplayString(selectedProject.value.model_name || \"No project selected\"), 1), _createElementVNode(\"p\", null, _toDisplayString(selectedProject.value.dataset_name), 1), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString(selectedProject.value.status), 1), _createElementVNode(\"p\", null, \"Created At: \" + _toDisplayString(selectedProject.value.created_at), 1)]), _createElementVNode(\"div\", _hoisted_8, [selectedProject.value.status === '학습 중' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        onClick: _cache[0] || (_cache[0] = $event => stopTraining(selectedProject.value.id))\n      }, \" 학습 중단 \")) : _createCommentVNode(\"\", true)])])]);\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","axios","store","projects","getters","userProjects","selectedProject","selectProject","project","value","stopTraining","id","console","error","response","post","projectId","headers","Authorization","state","authToken","data","success","log","dispatch","updatedProject","find","p","Error","alert"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/ProjectsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"project-widget\">\r\n    <h4 class=\"project-widget-header\">Project List</h4>\r\n    <div class=\"project-widget-body\">\r\n      <div class=\"project-list-container\">\r\n        <ul class=\"project-list\">\r\n          <li\r\n            v-for=\"(project, index) in projects\"\r\n            :key=\"index\"\r\n            @click=\"selectProject(project)\"\r\n            :class=\"{ 'is-selected': project.id === selectedProject.id }\"\r\n          >\r\n            {{ project.model_name }} - {{ project.dataset_name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"project-description-container\">\r\n        <h4>{{ selectedProject.model_name || \"No project selected\" }}</h4>\r\n        <p>{{ selectedProject.dataset_name }}</p>\r\n        <p>Status: {{ selectedProject.status }}</p>\r\n        <p>Created At: {{ selectedProject.created_at }}</p>\r\n      </div>\r\n      <div class=\"project-actions-container\">\r\n        <button\r\n          v-if=\"selectedProject.status === '학습 중'\"\r\n          @click=\"stopTraining(selectedProject.id)\"\r\n        >\r\n          학습 중단\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nconst store = useStore();\r\nconst projects = computed(() => store.getters.userProjects);\r\nconst selectedProject = ref({});\r\n\r\nconst selectProject = (project) => {\r\n  selectedProject.value = project;\r\n};\r\n\r\nconst stopTraining = async () => {\r\n  if (!selectedProject.value || !selectedProject.value.id) {\r\n    console.error(\"No project selected or selected project does not have an id\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/stop-training\",\r\n      { projectId: selectedProject.value.id },\r\n      { headers: { Authorization: `Bearer ${store.state.authToken}` } }\r\n    );\r\n    if (response.data.success) {\r\n      console.log(\"학습 중단 요청 성공\", selectedProject.value.id);\r\n      // Refetch projects to update the list\r\n      await store.dispatch(\"fetchProjects\");\r\n      // Update selectedProject to reflect the changes if it's still selected\r\n      const updatedProject = store.getters.userProjects.find(p => p.id === selectedProject.value.id);\r\n      if (updatedProject) {\r\n        selectedProject.value = updatedProject;\r\n      }\r\n    } else {\r\n      // Handle case where response.data.success is false\r\n      throw new Error('학습 중단 요청이 실패했습니다.');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"학습 중단 요청 실패\", selectedProject.value.id, error);\r\n    // Display an error message to the user\r\n    alert('학습 중지 요청에 실패하였습니다.'); // Use a more user-friendly error handling instead of alert\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.project-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto; /* Center the widget */\r\n  margin-bottom: 20px; /* Add bottom margin */\r\n  width: calc(100% - 10px); /* Reduce the total width by 20px from each side */\r\n  max-width: 1200px; /* Optionally add a max-width if you want to limit the size on larger screens */\r\n}\r\n\r\n.project-widget-header {\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-widget-body {\r\n  display: flex;\r\n}\r\n\r\n.project-list-container {\r\n  border-right: 1px solid #ddd;\r\n  flex: 1;\r\n}\r\n\r\n.project-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.project-list li {\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.project-list li:hover,\r\n.project-list li.is-selected {\r\n  background-color: #e8f0f9;\r\n}\r\n\r\n.project-description-container {\r\n  flex: 2;\r\n  padding: 16px;\r\n}\r\n\r\n.project-actions-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n}\r\n\r\nbutton {\r\n  border-radius: 5px; /* Adjust the pixel value to control the roundness */\r\n  background-color: #90ee90; /* This is a light green color */\r\n  border: none; /* Removes the default border */\r\n  padding: 10px 20px; /* Adds some padding inside the button */\r\n  color: rgb(0, 0, 0); /* Changes the text color to white */\r\n  font-size: 16px; /* Adjust the font size as needed */\r\n  cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */\r\n  transition: background-color 0.3s; /* Smooth transition for background color */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #76c893; /* Slightly darker green color for the hover state */\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;;;;IAEzB,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,QAAQ,GAAGL,QAAQ,CAAC,MAAMI,KAAK,CAACE,OAAO,CAACC,YAAY,CAAC;IAC3D,MAAMC,eAAe,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/B,MAAMQ,aAAa,GAAIC,OAAO,IAAK;MACjCF,eAAe,CAACG,KAAK,GAAGD,OAAO;IACjC,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACJ,eAAe,CAACG,KAAK,IAAI,CAACH,eAAe,CAACG,KAAK,CAACE,EAAE,EAAE;QACvDC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;QAC5E;MACF;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,yCAAyC,EACzC;UAAEC,SAAS,EAAEV,eAAe,CAACG,KAAK,CAACE;QAAG,CAAC,EACvC;UAAEM,OAAO,EAAE;YAAEC,aAAa,EAAG,UAAShB,KAAK,CAACiB,KAAK,CAACC,SAAU;UAAE;QAAE,CAClE,CAAC;QACD,IAAIN,QAAQ,CAACO,IAAI,CAACC,OAAO,EAAE;UACzBV,OAAO,CAACW,GAAG,CAAC,aAAa,EAAEjB,eAAe,CAACG,KAAK,CAACE,EAAE,CAAC;UACpD;UACA,MAAMT,KAAK,CAACsB,QAAQ,CAAC,eAAe,CAAC;UACrC;UACA,MAAMC,cAAc,GAAGvB,KAAK,CAACE,OAAO,CAACC,YAAY,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKL,eAAe,CAACG,KAAK,CAACE,EAAE,CAAC;UAC9F,IAAIc,cAAc,EAAE;YAClBnB,eAAe,CAACG,KAAK,GAAGgB,cAAc;UACxC;QACF,CAAC,MAAM;UACL;UACA,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;QACtC;MACF,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEP,eAAe,CAACG,KAAK,CAACE,EAAE,EAAEE,KAAK,CAAC;QAC7D;QACAgB,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}