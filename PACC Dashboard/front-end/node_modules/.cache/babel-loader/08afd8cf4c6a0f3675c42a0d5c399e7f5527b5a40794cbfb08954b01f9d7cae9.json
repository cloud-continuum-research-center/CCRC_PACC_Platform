{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7cd58ab4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"memory-gauge\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Memory Usage\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode($setup[\"Doughnut\"], {\n    \"chart-data\": $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","$setup","chartData","options","chartOptions"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\MemoryGaugeComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <GaugeComponent :total-size=\"totalSize\" :remaining-size=\"remainingSize\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport GaugeComponent from './GaugeComponent.vue';\r\n\r\n// Props are defined to accept totalSize and remainingSize from the parent component\r\nconst props = defineProps({\r\n  totalSize: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  remainingSize: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst { totalSize, remainingSize } = props;\r\n</script> -->\r\n\r\n\r\n<template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <Doughnut :chart-data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { Doughnut } from 'vue3-chart-v2';\r\n  import { reactive } from 'vue';\r\n  \r\n  // Setup static chart data\r\n  const chartData = reactive({\r\n    labels: ['Used', 'Free'],\r\n    datasets: [{\r\n      data: [30, 70], // Hardcoded data for the chart\r\n      backgroundColor: ['#FF6384', '#36A2EB'],\r\n      hoverBackgroundColor: ['#FF6384', '#36A2EB']\r\n    }]\r\n  });\r\n  \r\n  const chartOptions = reactive({\r\n    responsive: true, // Make sure chart is responsive\r\n    maintainAspectRatio: false, // Do not maintain w/h ratio\r\n    circumference: 180,\r\n    rotation: 270\r\n  });\r\n  </script>\r\n  \r\n<style scoped>\r\n.memory-gauge {\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EA6BSA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAAqB,YAAjB,cAAY;;uBADlBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,UAAqB,EACrBC,YAAA,CAA4DC,MAAA;IAAjD,YAAU,EAAEA,MAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}