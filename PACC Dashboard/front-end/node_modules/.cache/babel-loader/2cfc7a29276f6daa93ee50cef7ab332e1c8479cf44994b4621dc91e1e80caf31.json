{"ast":null,"code":"import Chart from 'chart.js';\nimport { defineComponent, h, reactive } from 'vue';\nfunction useChartInfo() {\n  const state = reactive({\n    myName: '',\n    userData: {},\n    userOptions: {}\n  });\n  function setChartData(payload) {\n    state.userData = payload;\n  }\n  function setChartOption(payload) {\n    state.userOptions = payload;\n  }\n  return {\n    state,\n    setChartData,\n    setChartOption\n  };\n}\n\n/**\r\n *\r\n * @param chartsId string\r\n * @param chartsType string\r\n */\nfunction generateChart(chartsId, chartsType) {\n  let {\n    state,\n    setChartData,\n    setChartOption\n  } = useChartInfo();\n  return defineComponent({\n    name: 'BaseChart',\n    props: {\n      chartId: {\n        type: String,\n        required: false\n      },\n      chartType: {\n        type: String,\n        required: false\n      },\n      width: {\n        type: Number,\n        required: false,\n        default: 400\n      },\n      height: {\n        type: Number,\n        required: false,\n        default: 400\n      },\n      cssClasses: {\n        type: String,\n        required: false,\n        default: ''\n      },\n      styles: {\n        type: Object,\n        required: false\n      }\n    },\n    data() {\n      return {\n        state: {\n          chartObj: null\n        }\n      };\n    },\n    // emits: ['chart:update'],\n\n    beforeUnmount() {\n      if (this.state.chartObj) {\n        this.state.chartObj.destroy();\n      }\n    },\n    methods: {\n      renderChart(userData, userOptions) {\n        setChartData(userData);\n        setChartOption(userOptions);\n        if (this.state.chartObj) {\n          // this.state.chartObj.destroy()\n        }\n        // if (!this.$refs.canvas) {\n        //   throw new Error('Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components')\n        // }\n\n        // REMOVE OLD DATA FIRST BEFORE UPDATE.\n        if (this.state.chartObj != null && this.state.chartObj.data != null) {\n          this.state.chartObj.data.datasets.pop();\n        }\n        let ctx = this.$refs.canvas.getContext('2d');\n        this.state.chartObj = new Chart(ctx, {\n          type: chartsType,\n          data: userData,\n          options: userOptions\n          // plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeMount() {\n      if (document.getElementById(chartsId)) {\n        let ctx = document.getElementById(chartsId).getContext('2d');\n        this.state.chartObj = new Chart(ctx, {\n          type: chartsType,\n          data: {\n            datasets: [{\n              data: [1, 2, 3, 4],\n              backgroundColor: ['Red', 'Yellow', 'Blue', 'Green']\n            }],\n            // These labels appear in the legend and in the tooltips when hovering different arcs\n            labels: ['Red', 'Yellow', 'Blue', 'Green']\n          },\n          options: {\n            responsive: false\n          }\n          // options: this.options,\n          // plugins: this.$data._plugins\n        });\n      }\n    },\n    computed: {\n      currentChartData() {\n        return state.userData;\n      },\n      currentChartOption() {\n        return state.userOptions;\n      }\n    },\n    watch: {\n      chartData(prevState, newState) {\n        if (prevState !== newState) {\n          this.renderChart(newState, this.currentChartOption);\n        }\n      }\n    },\n    render() {\n      // return h('canvas', {\n      //   ref: 'canvas',\n      //   id: this.chartId,\n      //   width: this.width,\n      //   height: this.height\n      // })\n      return h('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [h('canvas', {\n        ref: 'canvas',\n        id: this.chartId,\n        width: this.width,\n        height: this.height\n      })]);\n    }\n  });\n}\nconst Bar = generateChart('bar-chart', 'bar');\nconst Bubble = generateChart('bubble-chart', 'bubble');\nconst Doughnut = generateChart('doughnut-chart', 'doughnut');\nconst HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nconst Line = generateChart('line-chart', 'line');\nconst Pie = generateChart('pie-chart', 'pie');\nconst PolarArea = generateChart('polar-chart', 'polarArea');\nconst Radar = generateChart('radar-chart', 'radar');\nconst Scatter = generateChart('scatter-chart', 'scatter');\nexport { Bar, Bubble, Doughnut, HorizontalBar, Line, Pie, PolarArea, Radar, Scatter, generateChart\n// renderChart\n};","map":{"version":3,"names":["Chart","defineComponent","h","reactive","useChartInfo","state","myName","userData","userOptions","setChartData","payload","setChartOption","generateChart","chartsId","chartsType","name","props","chartId","type","String","required","chartType","width","Number","default","height","cssClasses","styles","Object","data","chartObj","beforeUnmount","destroy","methods","renderChart","datasets","pop","ctx","$refs","canvas","getContext","options","beforeMount","document","getElementById","backgroundColor","labels","responsive","computed","currentChartData","currentChartOption","watch","chartData","prevState","newState","render","style","class","ref","id","Bar","Bubble","Doughnut","HorizontalBar","Line","Pie","PolarArea","Radar","Scatter"],"sources":["D:/develop/vue-flask-dashboard/front-end/node_modules/vue3-chart-v2/src/components/BaseChart.js"],"sourcesContent":["import Chart from 'chart.js'\r\nimport { defineComponent, h, reactive } from 'vue'\r\n\r\nfunction useChartInfo() {\r\n  const state = reactive({\r\n    myName: '',\r\n    userData: {},\r\n    userOptions: {}\r\n  })\r\n\r\n  function setChartData(payload) {\r\n    state.userData = payload\r\n  }\r\n\r\n  function setChartOption(payload) {\r\n    state.userOptions = payload\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setChartData,\r\n    setChartOption\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param chartsId string\r\n * @param chartsType string\r\n */\r\nfunction generateChart(chartsId, chartsType) {\r\n  let { state, setChartData, setChartOption } = useChartInfo()\r\n\r\n  return defineComponent({\r\n    name: 'BaseChart',\r\n    props: {\r\n      chartId: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      chartType: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      width: {\r\n        type: Number,\r\n        required: false,\r\n        default: 400\r\n      },\r\n      height: {\r\n        type: Number,\r\n        required: false,\r\n        default: 400\r\n      },\r\n      cssClasses: {\r\n        type: String,\r\n        required: false,\r\n        default: ''\r\n      },\r\n      styles: {\r\n        type: Object,\r\n        required: false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        state: {\r\n          chartObj: null\r\n        }\r\n      }\r\n    },\r\n    // emits: ['chart:update'],\r\n\r\n    beforeUnmount() {\r\n      if (this.state.chartObj) {\r\n        this.state.chartObj.destroy()\r\n      }\r\n    },\r\n    methods: {\r\n      renderChart(userData, userOptions) {\r\n        setChartData(userData)\r\n        setChartOption(userOptions)\r\n\r\n        if (this.state.chartObj) {\r\n          // this.state.chartObj.destroy()\r\n        }\r\n        // if (!this.$refs.canvas) {\r\n        //   throw new Error('Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components')\r\n        // }\r\n\r\n        // REMOVE OLD DATA FIRST BEFORE UPDATE.\r\n        if (this.state.chartObj != null && this.state.chartObj.data != null) { this.state.chartObj.data.datasets.pop() }\r\n\r\n        let ctx = this.$refs.canvas.getContext('2d')\r\n        this.state.chartObj = new Chart(ctx, {\r\n          type: chartsType,\r\n          data: userData,\r\n          options: userOptions\r\n          // plugins: this.$data._plugins\r\n        })\r\n      }\r\n    },\r\n    beforeMount() {\r\n      if (document.getElementById(chartsId)) {\r\n        let ctx = document.getElementById(chartsId).getContext('2d')\r\n        this.state.chartObj = new Chart(ctx, {\r\n          type: chartsType,\r\n          data: {\r\n            datasets: [\r\n              {\r\n                data: [1, 2, 3, 4],\r\n                backgroundColor: ['Red', 'Yellow', 'Blue', 'Green']\r\n              }\r\n            ],\r\n            // These labels appear in the legend and in the tooltips when hovering different arcs\r\n            labels: ['Red', 'Yellow', 'Blue', 'Green']\r\n          },\r\n          options: {\r\n            responsive: false\r\n          }\r\n          // options: this.options,\r\n          // plugins: this.$data._plugins\r\n        })\r\n      }\r\n    },\r\n    computed: {\r\n      currentChartData() {\r\n        return state.userData\r\n      },\r\n      currentChartOption() {\r\n        return state.userOptions\r\n      }\r\n    },\r\n    watch: {\r\n      chartData(prevState, newState) {\r\n        if (prevState !== newState) {\r\n          this.renderChart(newState, this.currentChartOption)\r\n        }\r\n      }\r\n    },\r\n    render() {\r\n      // return h('canvas', {\r\n      //   ref: 'canvas',\r\n      //   id: this.chartId,\r\n      //   width: this.width,\r\n      //   height: this.height\r\n      // })\r\n      return h('div', { style: this.styles, class: this.cssClasses }, [\r\n        h('canvas', {\r\n          ref: 'canvas',\r\n          id: this.chartId,\r\n          width: this.width,\r\n          height: this.height\r\n        })\r\n      ])\r\n    }\r\n  })\r\n}\r\n\r\nconst Bar = generateChart('bar-chart', 'bar')\r\nconst Bubble = generateChart('bubble-chart', 'bubble')\r\nconst Doughnut = generateChart('doughnut-chart', 'doughnut')\r\nconst HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar')\r\nconst Line = generateChart('line-chart', 'line')\r\nconst Pie = generateChart('pie-chart', 'pie')\r\nconst PolarArea = generateChart('polar-chart', 'polarArea')\r\nconst Radar = generateChart('radar-chart', 'radar')\r\nconst Scatter = generateChart('scatter-chart', 'scatter')\r\n\r\nexport {\r\n  Bar,\r\n  Bubble,\r\n  Doughnut,\r\n  HorizontalBar,\r\n  Line,\r\n  Pie,\r\n  PolarArea,\r\n  Radar,\r\n  Scatter,\r\n  generateChart\r\n  // renderChart\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}