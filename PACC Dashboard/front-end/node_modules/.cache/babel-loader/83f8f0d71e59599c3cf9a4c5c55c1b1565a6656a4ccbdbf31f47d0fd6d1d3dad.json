{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"DoughnutChart\"], {\n    \"chart-data\": $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","chartData","options","chartOptions"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\GaugeComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <doughnut-chart :chart-data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, watch, defineProps } from \"vue\";\r\n  import { Doughnut } from 'vue-chartjs';\r\n  \r\n  const props = defineProps({\r\n    totalSize: Number,\r\n    remainingSize: Number\r\n  });\r\n  \r\n  const chartData = ref({\r\n    datasets: [\r\n      {\r\n        data: [\r\n          ((props.totalSize - props.remainingSize) / props.totalSize) * 100,\r\n          (props.remainingSize / props.totalSize) * 100\r\n        ],\r\n        backgroundColor: ['#42A5F5', '#ddd'],\r\n        borderWidth: 0\r\n      }\r\n    ],\r\n    labels: ['Used', 'Free']\r\n  });\r\n  \r\n  const chartOptions = {\r\n    rotation: 1 * Math.PI,\r\n    circumference: 1 * Math.PI,\r\n    cutoutPercentage: 80,\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: {\r\n      animateRotate: true,\r\n      animateScale: true\r\n    }\r\n  };\r\n  \r\n  watch([() => props.totalSize, () => props.remainingSize], () => {\r\n    chartData.value.datasets[0].data = [\r\n      ((props.totalSize - props.remainingSize) / props.totalSize) * 100,\r\n      (props.remainingSize / props.totalSize) * 100\r\n    ];\r\n  });\r\n  \r\n  const DoughnutChart = {\r\n    extends: Doughnut,\r\n    setup() {\r\n      return {\r\n        chartData,\r\n        chartOptions\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":";;uBACIA,mBAAA,CAEM,cADJC,YAAA,CAAkEC,MAAA;IAAjD,YAAU,EAAEA,MAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}