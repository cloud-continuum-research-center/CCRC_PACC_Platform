{"ast":null,"code":"import { ref, watch } from \"vue\";\nexport default {\n  __name: 'HyperparameterSelector',\n  props: {\n    modelValue: {\n      type: Object,\n      default: () => ({\n        learningRate: \"\",\n        // Default as number\n        batchSize: \"\",\n        // Default as number\n        epochs: \"\",\n        // Default as number\n        optimizer: \"\",\n        lossFunction: \"\"\n      })\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localHyperparameters = ref({\n      ...props.modelValue\n    });\n    const handleLearningRateInput = value => {\n      // 입력값이 유효한지 검사하는 정규식을 수정합니다.\n      if (value === \"\" || /^0(\\.\\d+)?$|^\\.\\d+$/.test(value)) {\n        localHyperparameters.value.learningRate = value;\n        emitUpdate();\n      }\n    };\n    watch(() => props.modelValue, newValue => {\n      if (newValue) {\n        localHyperparameters.value = {\n          ...newValue\n        };\n      }\n    }, {\n      deep: true\n    });\n    const emitUpdate = () => {\n      // `parseFloat` 또는 `parseInt`를 사용하여 숫자로 변환\n      const updatedHyperparameters = {\n        learningRate: parseFloat(localHyperparameters.value.learningRate),\n        batchSize: parseInt(localHyperparameters.value.batchSize),\n        epochs: parseInt(localHyperparameters.value.epochs),\n        optimizer: localHyperparameters.value.optimizer ? parseInt(localHyperparameters.value.optimizer, 10) : 1,\n        // Providing default value as 1\n        lossFunction: localHyperparameters.value.lossFunction ? parseInt(localHyperparameters.value.lossFunction, 10) : 1 // Providing default value as 1\n      };\n      emit(\"update:modelValue\", updatedHyperparameters);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      localHyperparameters,\n      handleLearningRateInput,\n      emitUpdate,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","localHyperparameters","modelValue","handleLearningRateInput","value","test","learningRate","emitUpdate","newValue","deep","updatedHyperparameters","parseFloat","batchSize","parseInt","epochs","optimizer","lossFunction"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/HyperparameterSelector.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"container-header\">\n      <h2>Hyperparameter Settings</h2>\n    </div>\n    <div class=\"hyperparameter-settings\">\n      <div class=\"hyperparameters\">\n        <div class=\"form-group\">\n          <label for=\"learningRate\">Learning Rate</label>\n          <input\n            type=\"text\"\n            id=\"learningRate\"\n            v-model=\"localHyperparameters.learningRate\"\n            @input=\"handleLearningRateInput($event.target.value)\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"batchSize\">Batch Size</label>\n          <input\n            type=\"text\"\n            id=\"batchSize\"\n            v-model.number=\"localHyperparameters.batchSize\"\n            @input=\"emitUpdate\"\n            min=\"1\"\n            step=\"1\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"epochs\">Epochs</label>\n          <input\n            type=\"text\"\n            id=\"epochs\"\n            v-model.number=\"localHyperparameters.epochs\"\n            @input=\"emitUpdate\"\n            min=\"1\"\n            step=\"1\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"optimizer\">Optimizer</label>\n          <select id=\"optimizer\" v-model.number=\"localHyperparameters.optimizer\">\n            <option value=\"1\">Adam</option>\n            <option value=\"2\">SGD</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"lossFunction\">Loss Function</label>\n          <select\n            id=\"lossFunction\"\n            v-model.number=\"localHyperparameters.lossFunction\"\n          >\n            <option value=\"1\">Crossentropy</option>\n            <option value=\"2\">Mean Squared Error</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, defineProps, defineEmits } from \"vue\";\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({\n      learningRate: \"\", // Default as number\n      batchSize: \"\", // Default as number\n      epochs: \"\", // Default as number\n      optimizer: \"\",\n      lossFunction: \"\",\n    }),\n  },\n});\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst localHyperparameters = ref({ ...props.modelValue });\n\nconst handleLearningRateInput = (value) => {\n  // 입력값이 유효한지 검사하는 정규식을 수정합니다.\n  if (value === \"\" || /^0(\\.\\d+)?$|^\\.\\d+$/.test(value)) {\n    localHyperparameters.value.learningRate = value;\n    emitUpdate();\n  }\n};\n\nwatch(\n  () => props.modelValue,\n  (newValue) => {\n    if (newValue) {\n      localHyperparameters.value = { ...newValue };\n    }\n  },\n  { deep: true },\n);\n\nconst emitUpdate = () => {\n  // `parseFloat` 또는 `parseInt`를 사용하여 숫자로 변환\n  const updatedHyperparameters = {\n    learningRate: parseFloat(localHyperparameters.value.learningRate),\n    batchSize: parseInt(localHyperparameters.value.batchSize),\n    epochs: parseInt(localHyperparameters.value.epochs),\n    optimizer: localHyperparameters.value.optimizer\n      ? parseInt(localHyperparameters.value.optimizer, 10)\n      : 1, // Providing default value as 1\n    lossFunction: localHyperparameters.value.lossFunction\n      ? parseInt(localHyperparameters.value.lossFunction, 10)\n      : 1, // Providing default value as 1\n  };\n\n  emit(\"update:modelValue\", updatedHyperparameters);\n};\n</script>\n\n<style scoped>\n.container {\n  border: 1px solid #ccc;\n  padding: 20px;\n  margin: 20px;\n  margin-left: 12px; /* Adjusted margin to move the container 12px to the left */\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding-left: 0px;\n}\n\n.container-header {\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.hyperparameter-settings {\n  max-width: 100%;\n}\n\n.hyperparameters {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.form-group {\n  flex: 1;\n  min-width: 160px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input,\n.form-group select {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n</style>\n"],"mappings":"AA6DA,SAASA,GAAG,EAAEC,KAA+B,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;IAE1D,MAAMC,KAAK,GAAGC,OAWZ;IAEF,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,oBAAoB,GAAGN,GAAG,CAAC;MAAE,GAAGE,KAAK,CAACK;IAAW,CAAC,CAAC;IAEzD,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;MACzC;MACA,IAAIA,KAAK,KAAK,EAAE,IAAI,qBAAqB,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;QACrDH,oBAAoB,CAACG,KAAK,CAACE,YAAY,GAAGF,KAAK;QAC/CG,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAEDX,KAAK,CACH,MAAMC,KAAK,CAACK,UAAU,EACrBM,QAAQ,IAAK;MACZ,IAAIA,QAAQ,EAAE;QACZP,oBAAoB,CAACG,KAAK,GAAG;UAAE,GAAGI;QAAS,CAAC;MAC9C;IACF,CAAC,EACD;MAAEC,IAAI,EAAE;IAAK,CACf,CAAC;IAED,MAAMF,UAAU,GAAGA,CAAA,KAAM;MACvB;MACA,MAAMG,sBAAsB,GAAG;QAC7BJ,YAAY,EAAEK,UAAU,CAACV,oBAAoB,CAACG,KAAK,CAACE,YAAY,CAAC;QACjEM,SAAS,EAAEC,QAAQ,CAACZ,oBAAoB,CAACG,KAAK,CAACQ,SAAS,CAAC;QACzDE,MAAM,EAAED,QAAQ,CAACZ,oBAAoB,CAACG,KAAK,CAACU,MAAM,CAAC;QACnDC,SAAS,EAAEd,oBAAoB,CAACG,KAAK,CAACW,SAAS,GAC3CF,QAAQ,CAACZ,oBAAoB,CAACG,KAAK,CAACW,SAAS,EAAE,EAAE,CAAC,GAClD,CAAC;QAAE;QACPC,YAAY,EAAEf,oBAAoB,CAACG,KAAK,CAACY,YAAY,GACjDH,QAAQ,CAACZ,oBAAoB,CAACG,KAAK,CAACY,YAAY,EAAE,EAAE,CAAC,GACrD,CAAC,CAAE;MACT,CAAC;MAEDjB,IAAI,CAAC,mBAAmB,EAAEW,sBAAsB,CAAC;IACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}