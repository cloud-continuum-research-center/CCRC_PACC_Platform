{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"mb-3 card\"\n};\nconst _hoisted_2 = {\n  class: \"p-3 card-body\"\n};\nconst _hoisted_3 = {\n  class: \"numbers\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-sm font-weight-bolder\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nexport default {\n  __name: 'MiniStatisticsCard',\n  props: {\n    rowReverse: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: [Object, String],\n      required: true,\n      text: {\n        type: String\n      },\n      color: {\n        type: String\n      }\n    },\n    description: {\n      type: String,\n      default: \"\"\n    },\n    value: {\n      type: [Object, String, Number],\n      required: true,\n      text: {\n        type: [String, Number]\n      },\n      color: {\n        type: String\n      }\n    },\n    percentage: {\n      type: [Object, String],\n      value: {\n        type: String\n      },\n      color: {\n        type: String\n      },\n      default: () => ({\n        color: \"success\"\n      })\n    },\n    icon: {\n      type: [String, Object],\n      component: {\n        type: String\n      },\n      background: {\n        type: String\n      },\n      shape: {\n        type: String\n      },\n      default: () => ({\n        background: \"bg-white\",\n        shape: \" border-radius-md\"\n      })\n    },\n    classContent: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"d-flex\", __props.rowReverse ? '' : 'flex-row-reverse justify-content-between'])\n      }, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"text-center shadow icon icon-shape\", [typeof __props.icon === 'object' ? `${__props.icon.background} ${__props.icon.shape}` : 'border-radius-md', __props.rowReverse ? 'me-2' : '']])\n      }, [_createElementVNode(\"i\", {\n        class: _normalizeClass([\"text-lg opacity-10\", typeof __props.icon === 'string' ? __props.icon : __props.icon.component]),\n        \"aria-hidden\": \"true\"\n      }, null, 2)], 2), _createElementVNode(\"div\", {\n        class: _normalizeClass(__props.classContent)\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", {\n        class: _normalizeClass([\"mb-0 text-sm text-uppercase font-weight-bold\", __props.title.color])\n      }, _toDisplayString(typeof __props.title === \"string\" ? __props.title : __props.title.text), 3), _createElementVNode(\"h5\", {\n        class: _normalizeClass(`mb-0 font-weight-bolder ${__props.value.color}`)\n      }, [_createTextVNode(_toDisplayString(__props.value && typeof __props.value === \"string\" || __props.value && typeof __props.value === \"number\" ? __props.value : __props.value.text) + \" \", 1), __props.percentage && typeof __props.percentage === 'string' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(__props.percentage), 1)) : _createCommentVNode(\"\", true), __props.percentage && typeof __props.percentage === 'object' ? (_openBlock(), _createElementBlock(\"span\", {\n        key: 1,\n        class: _normalizeClass(`text-sm font-weight-bolder text-${__props.percentage.color}`)\n      }, _toDisplayString(__props.percentage.value), 3)) : _createCommentVNode(\"\", true)], 2), __props.description ? (_openBlock(), _createElementBlock(\"p\", {\n        key: 0,\n        class: \"mt-2 mb-0\",\n        innerHTML: __props.description\n      }, null, 8, _hoisted_5)) : _createCommentVNode(\"\", true)])], 2)], 2)])]);\n    };\n  }\n};","map":{"version":3,"names":[],"sources":["D:/develop/vue-flask-dashboard/front-end/src/examples/Cards/MiniStatisticsCard.vue"],"sourcesContent":["<script setup>\r\ndefineProps({\r\n  rowReverse: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  title: {\r\n    type: [Object, String],\r\n    required: true,\r\n    text: {\r\n      type: String,\r\n    },\r\n    color: {\r\n      type: String,\r\n    },\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  value: {\r\n    type: [Object, String, Number],\r\n    required: true,\r\n    text: {\r\n      type: [String, Number],\r\n    },\r\n    color: {\r\n      type: String,\r\n    },\r\n  },\r\n  percentage: {\r\n    type: [Object, String],\r\n    value: {\r\n      type: String,\r\n    },\r\n    color: {\r\n      type: String,\r\n    },\r\n    default: () => ({\r\n      color: \"success\",\r\n    }),\r\n  },\r\n  icon: {\r\n    type: [String, Object],\r\n    component: {\r\n      type: String,\r\n    },\r\n    background: {\r\n      type: String,\r\n    },\r\n    shape: {\r\n      type: String,\r\n    },\r\n    default: () => ({\r\n      background: \"bg-white\",\r\n      shape: \" border-radius-md\",\r\n    }),\r\n  },\r\n  classContent: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n</script>\r\n<template>\r\n  <div class=\"mb-3 card\">\r\n    <div class=\"p-3 card-body\">\r\n      <div\r\n        class=\"d-flex\"\r\n        :class=\"rowReverse ? '' : 'flex-row-reverse justify-content-between'\"\r\n      >\r\n        <div\r\n          class=\"text-center shadow icon icon-shape\"\r\n          :class=\"[\r\n            typeof icon === 'object'\r\n              ? `${icon.background} ${icon.shape}`\r\n              : 'border-radius-md',\r\n            rowReverse ? 'me-2' : '',\r\n          ]\"\r\n        >\r\n          <i\r\n            class=\"text-lg opacity-10\"\r\n            :class=\"typeof icon === 'string' ? icon : icon.component\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </div>\r\n        <div :class=\"classContent\">\r\n          <div class=\"numbers\">\r\n            <p\r\n              class=\"mb-0 text-sm text-uppercase font-weight-bold\"\r\n              :class=\"title.color\"\r\n            >\r\n              {{ typeof title === \"string\" ? title : title.text }}\r\n            </p>\r\n            <h5 :class=\"`mb-0 font-weight-bolder ${value.color}`\">\r\n              {{\r\n                (value && typeof value === \"string\") ||\r\n                (value && typeof value === \"number\")\r\n                  ? value\r\n                  : value.text\r\n              }}\r\n              <span\r\n                v-if=\"percentage && typeof percentage === 'string'\"\r\n                class=\"text-sm font-weight-bolder\"\r\n              >\r\n                {{ percentage }}\r\n              </span>\r\n              <span\r\n                v-if=\"percentage && typeof percentage === 'object'\"\r\n                :class=\"`text-sm font-weight-bolder text-${percentage.color}`\"\r\n              >\r\n                {{ percentage.value }}\r\n              </span>\r\n            </h5>\r\n            <!--  eslint-disable-next-line vue/no-v-html -->\r\n            <p v-if=\"description\" class=\"mt-2 mb-0\" v-html=\"description\"></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}