{"ast":null,"code":"import { onMounted, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport ChartList from \"./components/ChartList.vue\";\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    onMounted(() => {\n      // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        // 실시간 데이터 가져오기를 시작합니다.\n        startFetchingNodeMonitoringData();\n      }\n    });\n\n    // 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\n    onUnmounted(() => {\n      stopFetchingNodeMonitoringData();\n    });\n\n    // 실시간 데이터를 Store에 주기적으로 가져오기 위한 로직입니다.\n    const dataInterval = ref(null);\n    function startFetchingNodeMonitoringData() {\n      stopFetchingNodeMonitoringData(); // Prevent multiple intervals\n      dataInterval.value = setInterval(() => {\n        store.dispatch(\"fetchData\");\n      }, 1000);\n    }\n    function stopFetchingNodeMonitoringData() {\n      if (dataInterval.value) {\n        clearInterval(dataInterval.value);\n        dataInterval.value = null;\n      }\n    }\n    const __returned__ = {\n      store,\n      dataInterval,\n      startFetchingNodeMonitoringData,\n      stopFetchingNodeMonitoringData,\n      onMounted,\n      onUnmounted,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      ProjectList,\n      ChartList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","useStore","ProjectList","ChartList","store","state","authToken","userEmail","dispatch","startFetchingNodeMonitoringData","stopFetchingNodeMonitoringData","dataInterval","value","setInterval","clearInterval"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport ProjectList from \"./components/ProjectsList.vue\";\r\nimport ChartList from \"./components/ChartList.vue\";\r\n\r\n\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\r\n  if (store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjects\");\r\n    // 실시간 데이터 가져오기를 시작합니다.\r\n    startFetchingNodeMonitoringData();\r\n  }\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\r\nonUnmounted(() => {\r\n  stopFetchingNodeMonitoringData();\r\n});\r\n\r\n// 실시간 데이터를 Store에 주기적으로 가져오기 위한 로직입니다.\r\nconst dataInterval = ref(null);\r\n\r\nfunction startFetchingNodeMonitoringData() {\r\n  stopFetchingNodeMonitoringData(); // Prevent multiple intervals\r\n  dataInterval.value = setInterval(() => {\r\n    store.dispatch(\"fetchData\");\r\n  }, 1000);\r\n}\r\n\r\nfunction stopFetchingNodeMonitoringData() {\r\n  if (dataInterval.value) {\r\n    clearInterval(dataInterval.value);\r\n    dataInterval.value = null;\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"project-list-container\">\r\n      <ProjectList />\r\n    </div>\r\n    <div class=\"charts-container\">\r\n      <ChartList />\r\n    </div>\r\n  </div>\r\n</template>\r\n<style>\r\n\r\n.dashboard {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.project-list-container {\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n.chart-list-container {\r\n  display: flex;\r\n}\r\n.chart-list-widget {\r\n  flex: 1; /* 리스트가 차지할 공간 */\r\n}\r\n.chart-display-container {\r\n  flex: 2; /* 선택된 차트가 차지할 공간 */\r\n  /* 필요한 경우 추가 스타일링 */\r\n}\r\n\r\n</style>\r\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACjD,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,SAAS,MAAM,4BAA4B;;;;;;;IAGlD,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IAExBH,SAAS,CAAC,MAAM;MACd;MACA,IAAIM,KAAK,CAACC,KAAK,CAACC,SAAS,IAAIF,KAAK,CAACC,KAAK,CAACE,SAAS,EAAE;QAClDH,KAAK,CAACI,QAAQ,CAAC,eAAe,CAAC;QAC/B;QACAC,+BAA+B,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;;IAEF;IACAV,WAAW,CAAC,MAAM;MAChBW,8BAA8B,CAAC,CAAC;IAClC,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAGX,GAAG,CAAC,IAAI,CAAC;IAE9B,SAASS,+BAA+BA,CAAA,EAAG;MACzCC,8BAA8B,CAAC,CAAC,CAAC,CAAC;MAClCC,YAAY,CAACC,KAAK,GAAGC,WAAW,CAAC,MAAM;QACrCT,KAAK,CAACI,QAAQ,CAAC,WAAW,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,SAASE,8BAA8BA,CAAA,EAAG;MACxC,IAAIC,YAAY,CAACC,KAAK,EAAE;QACtBE,aAAa,CAACH,YAAY,CAACC,KAAK,CAAC;QACjCD,YAAY,CAACC,KAAK,GAAG,IAAI;MAC3B;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}