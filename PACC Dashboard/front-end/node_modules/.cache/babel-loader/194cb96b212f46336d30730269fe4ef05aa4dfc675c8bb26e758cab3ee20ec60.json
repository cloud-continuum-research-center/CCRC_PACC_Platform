{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nimport ProjectList from './components/ProjectsList.vue';\nimport { useStore } from 'vuex';\n\n// Register the necessary Chart.js components\n\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const store = useStore();\n    const lineChart1 = ref(null);\n    const lineChart2 = ref(null);\n    const pieChart1 = ref(null);\n    const pieChart2 = ref(null);\n    const setupCharts = () => {\n      // Setup line chart 1\n      const lineChart1Ctx = lineChart1.value.getContext('2d');\n      new Chart(lineChart1Ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n          datasets: [{\n            label: 'Dataset 1',\n            data: [65, 59, 80, 81, 56],\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        }\n      });\n\n      // Setup line chart 2\n      const lineChart2Ctx = lineChart2.value.getContext('2d');\n      new Chart(lineChart2Ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n          datasets: [{\n            label: 'Dataset 2',\n            data: [28, 48, 40, 19, 86],\n            fill: false,\n            borderColor: 'rgb(255, 99, 132)',\n            tension: 0.1\n          }]\n        }\n      });\n\n      // Setup pie chart 1\n      const pieChart1Ctx = pieChart1.value.getContext('2d');\n      new Chart(pieChart1Ctx, {\n        type: 'pie',\n        data: {\n          labels: ['Red', 'Blue', 'Yellow'],\n          datasets: [{\n            label: 'Dataset 1',\n            data: [300, 50, 100],\n            backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n          }]\n        }\n      });\n\n      // Setup pie chart 2\n      const pieChart2Ctx = pieChart2.value.getContext('2d');\n      new Chart(pieChart2Ctx, {\n        type: 'pie',\n        data: {\n          labels: ['Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: 'Dataset 2',\n            data: [200, 150, 150],\n            backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']\n          }]\n        }\n      });\n    };\n    onMounted(() => {\n      setupCharts();\n    });\n    const __returned__ = {\n      store,\n      lineChart1,\n      lineChart2,\n      pieChart1,\n      pieChart2,\n      setupCharts,\n      onMounted,\n      ref,\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      },\n      ProjectList,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","Chart","registerables","ProjectList","useStore","register","store","lineChart1","lineChart2","pieChart1","pieChart2","setupCharts","lineChart1Ctx","value","getContext","type","data","labels","datasets","label","fill","borderColor","tension","lineChart2Ctx","pieChart1Ctx","backgroundColor","pieChart2Ctx"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nimport ProjectList from './components/ProjectsList.vue';\nimport { useStore } from 'vuex';\n\n// Register the necessary Chart.js components\nChart.register(...registerables);\n\nconst store = useStore();\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\nconst setupCharts = () => {\n  // Setup line chart 1\n  const lineChart1Ctx = lineChart1.value.getContext('2d');\n  new Chart(lineChart1Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [65, 59, 80, 81, 56],\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    }\n  });\n\n  // Setup line chart 2\n  const lineChart2Ctx = lineChart2.value.getContext('2d');\n  new Chart(lineChart2Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [28, 48, 40, 19, 86],\n        fill: false,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1\n      }]\n    }\n  });\n\n  // Setup pie chart 1\n  const pieChart1Ctx = pieChart1.value.getContext('2d');\n  new Chart(pieChart1Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [300, 50, 100],\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n      }]\n    }\n  });\n\n  // Setup pie chart 2\n  const pieChart2Ctx = pieChart2.value.getContext('2d');\n  new Chart(pieChart2Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [200, 150, 150],\n        backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']\n      }]\n    }\n  });\n};\n\nonMounted(() => {\n  setupCharts();\n});\n</script>\n\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n      <canvas ref=\"lineChart1\"></canvas>\n      <canvas ref=\"lineChart2\"></canvas>\n      <canvas ref=\"pieChart1\"></canvas>\n      <canvas ref=\"pieChart2\"></canvas>\n    </div>\n  </div>\n</template>\n\n<style>\n/* Your existing CSS */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}