{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, computed, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ModelselectBox from \"./components/ModelSelector.vue\";\nimport DatasetselectBox from \"./components/DatasetSelector.vue\";\nimport HyperparameterselectBox from \"./components/HyperparameterSelector.vue\";\nimport NodeselectBox from \"./components/NodeSelector.vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'Tables',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const authToken = computed(() => store.state.authToken);\n    const projectData = reactive({\n      model: {},\n      // Initially an object, later to be just a string of model_id\n      dataset: {},\n      // Initially an object, later to be just a string of dataset_id\n      hyperparameters: {},\n      // Already in the desired format\n      nodes: [] // Initially an array of objects, later to be an array of node names\n    });\n    const isCreatingProject = ref(false);\n    watch(projectData.hyperparameters, newVal => {\n      console.log(\"Hyperparameters updated:\", newVal);\n    }, {\n      deep: true\n    });\n    const handleSelectedNodeChange = selectedNode => {\n      const index = projectData.nodes.findIndex(node => node.id === selectedNode.id);\n      if (index > -1) {\n        // Node is already selected, remove it\n        projectData.nodes.splice(index, 1);\n      } else {\n        // Node is not selected, add it\n        projectData.nodes.push(selectedNode);\n      }\n    };\n    const prepareDataForSubmission = () => {\n      return {\n        model: projectData.model.model_id,\n        dataset: projectData.dataset.dataset_id,\n        hyperparameters: {\n          ...projectData.hyperparameters,\n          optimizer: projectData.hyperparameters.optimizer,\n          lossFunction: projectData.hyperparameters.lossFunction\n        },\n        nodes: projectData.nodes.map(node => node.name)\n      };\n    };\n    const hyperparametersSelected = newHyperparameters => {\n      projectData.hyperparameters = {\n        ...projectData.hyperparameters,\n        ...newHyperparameters\n      };\n    };\n\n    // Method to send data to backend\n    const createProject = async () => {\n      try {\n        isCreatingProject.value = true;\n        const formattedData = prepareDataForSubmission(); // 전달 데이터 형식 변경\n        lastSubmittedData.value = formattedData;\n        const config = {\n          headers: {\n            Authorization: `Bearer ${authToken.value}`\n          }\n        };\n        const response = await axios.post(\"http://localhost:5000/api/create-project\", formattedData, config);\n        console.log(response.data);\n        // Handle successful project creation (e.g., redirect or show message)\n      } catch (error) {\n        console.error(\"Failed to create project:\", error);\n        // Handle errors (e.g., show error message)\n      } finally {\n        isCreatingProject.value = false;\n      }\n    };\n    const modelIdSelected = modelId => {\n      if (modelId) {\n        const fullModel = store.state.models.find(model => model.model_id === modelId);\n        if (fullModel) {\n          projectData.model = fullModel; // Assign the full model object\n        } else {\n          console.error(\"Model not found!\");\n        }\n      }\n    };\n    const datasetSelected = datasetId => {\n      projectData.dataset = {\n        dataset_id: datasetId\n      };\n    };\n    const stringifyData = value => {\n      return JSON.stringify(value, null, 2); // Pretty print JSON\n    };\n    const lastSubmittedData = ref(null); // 백엔드로 마지막으로 전송된 데이터를 저장\n\n    const __returned__ = {\n      store,\n      authToken,\n      projectData,\n      isCreatingProject,\n      handleSelectedNodeChange,\n      prepareDataForSubmission,\n      hyperparametersSelected,\n      createProject,\n      modelIdSelected,\n      datasetSelected,\n      stringifyData,\n      lastSubmittedData,\n      reactive,\n      ref,\n      computed,\n      watch,\n      get useStore() {\n        return useStore;\n      },\n      ModelselectBox,\n      DatasetselectBox,\n      HyperparameterselectBox,\n      NodeselectBox,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","computed","watch","useStore","ModelselectBox","DatasetselectBox","HyperparameterselectBox","NodeselectBox","axios","store","authToken","state","projectData","model","dataset","hyperparameters","nodes","isCreatingProject","newVal","console","log","deep","handleSelectedNodeChange","selectedNode","index","findIndex","node","id","splice","push","prepareDataForSubmission","model_id","dataset_id","optimizer","lossFunction","map","name","hyperparametersSelected","newHyperparameters","createProject","value","formattedData","lastSubmittedData","config","headers","Authorization","response","post","data","error","modelIdSelected","modelId","fullModel","models","find","datasetSelected","datasetId","stringifyData","JSON","stringify"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Tables.vue"],"sourcesContent":["<script setup>\r\nimport { reactive, ref, computed, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport ModelselectBox from \"./components/ModelSelector.vue\";\r\nimport DatasetselectBox from \"./components/DatasetSelector.vue\";\r\nimport HyperparameterselectBox from \"./components/HyperparameterSelector.vue\";\r\nimport NodeselectBox from \"./components/NodeSelector.vue\";\r\nimport axios from \"axios\";\r\n\r\nconst store = useStore();\r\n\r\nconst authToken = computed(() => store.state.authToken);\r\n\r\nconst projectData = reactive({\r\n  model: {}, // Initially an object, later to be just a string of model_id\r\n  dataset: {}, // Initially an object, later to be just a string of dataset_id\r\n  hyperparameters: {}, // Already in the desired format\r\n  nodes: [], // Initially an array of objects, later to be an array of node names\r\n});\r\n\r\nconst isCreatingProject = ref(false);\r\n\r\nwatch(\r\n  projectData.hyperparameters,\r\n  (newVal) => {\r\n    console.log(\"Hyperparameters updated:\", newVal);\r\n  },\r\n  { deep: true },\r\n);\r\n\r\nconst handleSelectedNodeChange = (selectedNode) => {\r\n  const index = projectData.nodes.findIndex(node => node.id === selectedNode.id);\r\n  if (index > -1) {\r\n    // Node is already selected, remove it\r\n    projectData.nodes.splice(index, 1);\r\n  } else {\r\n    // Node is not selected, add it\r\n    projectData.nodes.push(selectedNode);\r\n  }\r\n};\r\n\r\nconst prepareDataForSubmission = () => {\r\n  return {\r\n    model: projectData.model.model_id,\r\n    dataset: projectData.dataset.dataset_id,\r\n    hyperparameters: {\r\n      ...projectData.hyperparameters,\r\n      optimizer: projectData.hyperparameters.optimizer,\r\n      lossFunction: projectData.hyperparameters.lossFunction,\r\n    },\r\n    nodes: projectData.nodes.map((node) => node.name),\r\n  };\r\n};\r\n\r\nconst hyperparametersSelected = (newHyperparameters) => {\r\n  projectData.hyperparameters = {\r\n    ...projectData.hyperparameters,\r\n    ...newHyperparameters,\r\n  };\r\n};\r\n\r\n// Method to send data to backend\r\nconst createProject = async () => {\r\n  try {\r\n    isCreatingProject.value = true;\r\n    const formattedData = prepareDataForSubmission(); // 전달 데이터 형식 변경\r\n    lastSubmittedData.value = formattedData;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${authToken.value}`,\r\n      },\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/create-project\",\r\n      formattedData,\r\n      config,\r\n    );\r\n\r\n    console.log(response.data);\r\n    // Handle successful project creation (e.g., redirect or show message)\r\n  } catch (error) {\r\n    console.error(\"Failed to create project:\", error);\r\n    // Handle errors (e.g., show error message)\r\n  } finally {\r\n    isCreatingProject.value = false;\r\n  }\r\n};\r\n\r\nconst modelIdSelected = (modelId) => {\r\n  if (modelId) {\r\n    const fullModel = store.state.models.find(\r\n      (model) => model.model_id === modelId,\r\n    );\r\n    if (fullModel) {\r\n      projectData.model = fullModel; // Assign the full model object\r\n    } else {\r\n      console.error(\"Model not found!\");\r\n    }\r\n  }\r\n};\r\n\r\nconst datasetSelected = (datasetId) => {\r\n  projectData.dataset = { dataset_id: datasetId };\r\n};\r\n\r\nconst stringifyData = (value) => {\r\n  return JSON.stringify(value, null, 2); // Pretty print JSON\r\n};\r\n\r\nconst lastSubmittedData = ref(null); // 백엔드로 마지막으로 전송된 데이터를 저장\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"py-5 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <ModelselectBox @update:modelValue=\"modelIdSelected\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"py-2 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <DatasetselectBox @update:modelValue=\"datasetSelected\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"py-2 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <HyperparameterselectBox\r\n            @update:modelValue=\"hyperparametersSelected\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"py-2 container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <NodeselectBox\r\n  v-model=\"projectData.nodes\"\r\n  @update:selectedNode=\"handleSelectedNodeChange\"\r\n/> />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"create-project-button-container\">\r\n      <button\r\n        class=\"create-project-button\"\r\n        @click=\"createProject\"\r\n        :disabled=\"isCreatingProject\"\r\n      >\r\n        {{ isCreatingProject ? \"Creating...\" : \"Create Project\" }}\r\n      </button>\r\n    </div>\r\n    <div class=\"last-submitted-data-container\">\r\n      <h3>Last Submitted Data</h3>\r\n      <pre>{{ stringifyData(lastSubmittedData) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* ... other styles ... */\r\n\r\n/* Add padding to the bottom of the container to push the footer down */\r\n.container-fluid {\r\n  padding-bottom: 50px; /* Adjust the value as needed to create space above the footer */\r\n}\r\n\r\n/* Adjust the styling of the button and its container */\r\n.create-project-button-container {\r\n  text-align: right; /* Aligns the button to the right */\r\n  padding-top: 20px; /* Adds space above the button */\r\n  padding-bottom: 20px; /* Adds space below the button, above the footer */\r\n}\r\n\r\n.create-project-button {\r\n  padding: 10px 30px; /* Larger padding for a larger button */\r\n  margin-top: 20px; /* Adds space above the button */\r\n  margin-bottom: 40px; /* Adds space below the button */\r\n  /* Other styling remains unchanged */\r\n}\r\n\r\n.last-submitted-data-container {\r\n  margin-top: 20px;\r\n  background-color: #fbfafa;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* ... */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}