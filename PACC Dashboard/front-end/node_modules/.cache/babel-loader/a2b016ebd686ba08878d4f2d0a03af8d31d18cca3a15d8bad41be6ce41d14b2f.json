{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const lineChart1 = ref(null);\n    const lineChart2 = ref(null);\n    const pieChart1 = ref(null);\n    const pieChart2 = ref(null);\n    const store = useStore();\n    const intervalId = ref(null); // Use a ref to keep track of the interval ID\n\n    function setupCharts() {\n      const lineChart1Ctx = document.getElementById('lineChart1').getContext('2d');\n      const lineChart2Ctx = document.getElementById('lineChart2').getContext('2d');\n      if (!charts.lineChart1) {\n        charts.lineChart1 = new Chart(lineChart1Ctx, {\n          type: 'line',\n          data: {\n            labels: projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`),\n            datasets: [{\n              label: 'Model Accuracy',\n              data: projectInfo.value.accuracyList,\n              fill: false,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1\n            }]\n          }\n        });\n      } else {\n        charts.lineChart1.data.labels = projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`);\n        charts.lineChart1.data.datasets[0].data = projectInfo.value.accuracyList;\n        charts.lineChart1.update();\n      }\n      if (!charts.lineChart2) {\n        charts.lineChart2 = new Chart(lineChart2Ctx, {\n          type: 'line',\n          data: {\n            labels: projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`),\n            datasets: [{\n              label: 'Model Loss',\n              data: projectInfo.value.lossList,\n              fill: false,\n              borderColor: 'rgb(255, 99, 132)',\n              tension: 0.1\n            }]\n          }\n        });\n      } else {\n        charts.lineChart2.data.labels = projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`);\n        charts.lineChart2.data.datasets[0].data = projectInfo.value.lossList;\n        charts.lineChart2.update();\n      }\n    }\n    function startFetching(projectId) {\n      if (intervalId.value) {\n        clearInterval(intervalId.value); // Clear the current interval if it exists\n      }\n      intervalId.value = setInterval(() => {\n        store.dispatch(\"fetchProjectInfoById\", projectId);\n        setupCharts();\n      }, 3000); // Fetch every 3 seconds\n    }\n    onMounted(() => {\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        // Assuming project ID is already selected somewhere and stored in the state\n        if (store.state.selectedProjectId) {\n          startFetching(store.state.selectedProjectId);\n        }\n      }\n    });\n    watch(() => store.state.selectedProjectId, newId => {\n      if (newId && store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjectInfoById\", newId); // Fetch immediately when ID changes\n        startFetching(newId); // Start or restart the fetching interval\n      } else {\n        if (intervalId.value) {\n          clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n          intervalId.value = null;\n        }\n      }\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      // Clean up the interval when the component is destroyed\n      if (intervalId.value) {\n        clearInterval(intervalId.value);\n      }\n    });\n\n    // Computed property to display project info\n    const projectInfo = computed(() => {\n      const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n      return {\n        progress: data.progress || 0,\n        epoch: data.epoch || 0,\n        accuracy: data.accuracy && data.accuracy.length > 0 ? data.accuracy[data.accuracy.length - 1] : 0,\n        loss: data.loss && data.loss.length > 0 ? data.loss[data.loss.length - 1] : 0,\n        accuracyList: data.accuracy || [],\n        lossList: data.loss || []\n      };\n    });\n    const __returned__ = {\n      lineChart1,\n      lineChart2,\n      pieChart1,\n      pieChart2,\n      store,\n      intervalId,\n      setupCharts,\n      startFetching,\n      projectInfo,\n      ProjectList,\n      onMounted,\n      watch,\n      computed,\n      onUnmounted,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","onMounted","watch","computed","onUnmounted","ref","useStore","Chart","registerables","register","lineChart1","lineChart2","pieChart1","pieChart2","store","intervalId","setupCharts","lineChart1Ctx","document","getElementById","getContext","lineChart2Ctx","charts","type","data","labels","projectInfo","value","accuracyList","map","_","index","datasets","label","fill","borderColor","tension","update","lossList","startFetching","projectId","clearInterval","setInterval","dispatch","state","authToken","userEmail","selectedProjectId","newId","immediate","projectsInfo","progress","epoch","accuracy","length","loss"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : '0' }}</p>\n    <p class=\"project-info-highlight accuracy\">모델 정확도: {{ projectInfo.accuracy ? projectInfo.accuracy.toFixed(2) + '%' : '0' }}</p>\n    <p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas ref=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n\n\n<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\n\nconst store = useStore();\nconst intervalId = ref(null); // Use a ref to keep track of the interval ID\n\n\nfunction setupCharts() {\n  const lineChart1Ctx = document.getElementById('lineChart1').getContext('2d');\n  const lineChart2Ctx = document.getElementById('lineChart2').getContext('2d');\n  \n  if (!charts.lineChart1) {\n    charts.lineChart1 = new Chart(lineChart1Ctx, {\n      type: 'line',\n      data: {\n        labels: projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`),\n        datasets: [{\n          label: 'Model Accuracy',\n          data: projectInfo.value.accuracyList,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      }\n    });\n  } else {\n    charts.lineChart1.data.labels = projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`);\n    charts.lineChart1.data.datasets[0].data = projectInfo.value.accuracyList;\n    charts.lineChart1.update();\n  }\n\n  if (!charts.lineChart2) {\n    charts.lineChart2 = new Chart(lineChart2Ctx, {\n      type: 'line',\n      data: {\n        labels: projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`),\n        datasets: [{\n          label: 'Model Loss',\n          data: projectInfo.value.lossList,\n          fill: false,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }]\n      }\n    });\n  } else {\n    charts.lineChart2.data.labels = projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`);\n    charts.lineChart2.data.datasets[0].data = projectInfo.value.lossList;\n    charts.lineChart2.update();\n  }\n}\n\n\nfunction startFetching(projectId) {\n  if (intervalId.value) {\n    clearInterval(intervalId.value); // Clear the current interval if it exists\n  }\n  intervalId.value = setInterval(() => {\n    store.dispatch(\"fetchProjectInfoById\", projectId);\n    setupCharts();\n  }, 3000); // Fetch every 3 seconds\n}\n\nonMounted(() => {\n  if (store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjects\");\n    // Assuming project ID is already selected somewhere and stored in the state\n    if (store.state.selectedProjectId) {\n      startFetching(store.state.selectedProjectId);\n    }\n  }\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId && store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjectInfoById\", newId); // Fetch immediately when ID changes\n    startFetching(newId); // Start or restart the fetching interval\n  } else {\n    if (intervalId.value) {\n      clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n      intervalId.value = null;\n    }\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  // Clean up the interval when the component is destroyed\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n// Computed property to display project info\nconst projectInfo = computed(() => {\n  const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n  return {\n    progress: data.progress || 0,\n    epoch: data.epoch || 0,\n    accuracy: (data.accuracy && data.accuracy.length > 0) ? data.accuracy[data.accuracy.length - 1] : 0,\n    loss: (data.loss && data.loss.length > 0) ? data.loss[data.loss.length - 1] : 0,\n    accuracyList: data.accuracy || [],\n    lossList: data.loss || []\n  };\n});\n</script>\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}