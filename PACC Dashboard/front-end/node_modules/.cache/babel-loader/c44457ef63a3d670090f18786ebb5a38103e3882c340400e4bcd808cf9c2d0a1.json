{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-76acd2c2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"py-5-container-fluid\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-12\"\n};\nconst _hoisted_5 = {\n  class: \"py-2 container-fluid\"\n};\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"col-12\"\n};\nconst _hoisted_8 = {\n  class: \"py-2 container-fluid\"\n};\nconst _hoisted_9 = {\n  class: \"row\"\n};\nconst _hoisted_10 = {\n  class: \"col-12\"\n};\nconst _hoisted_11 = {\n  class: \"py-2 container-fluid\"\n};\nconst _hoisted_12 = {\n  class: \"row\"\n};\nconst _hoisted_13 = {\n  class: \"col-12\"\n};\nconst _hoisted_14 = {\n  class: \"create-project-button-container\"\n};\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"ModelselectBox\"], {\n    \"onUpdate:modelValue\": $setup.modelIdSelected\n  })])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode($setup[\"DatasetselectBox\"], {\n    \"onUpdate:modelValue\": $setup.datasetSelected\n  })])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createVNode($setup[\"HyperparameterselectBox\"], {\n    \"onUpdate:modelValue\": $setup.hyperparametersSelected\n  })])])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createVNode($setup[\"NodeselectBox\"], {\n    modelValue: $setup.projectData.nodes,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.projectData.nodes = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    class: \"create-project-button\",\n    onClick: $setup.createProject,\n    disabled: $setup.isCreatingProject\n  }, _toDisplayString($setup.isCreatingProject ? \"생성 중\" : \"프로젝트 생성\"), 9 /* TEXT, PROPS */, _hoisted_15)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","$setup","modelIdSelected","_hoisted_5","_hoisted_6","_hoisted_7","datasetSelected","_hoisted_8","_hoisted_9","_hoisted_10","hyperparametersSelected","_hoisted_11","_hoisted_12","_hoisted_13","modelValue","projectData","nodes","_cache","$event","_hoisted_14","onClick","createProject","disabled","isCreatingProject","_hoisted_15"],"sources":["D:\\Git\\ITRC_Front\\vue-flask-dashboard\\front-end\\src\\views\\Tables.vue"],"sourcesContent":["<script setup>\nimport { reactive, ref, computed, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport ModelselectBox from \"./components/ModelSelector.vue\";\nimport DatasetselectBox from \"./components/DatasetSelector.vue\";\nimport HyperparameterselectBox from \"./components/HyperparameterSelector.vue\";\nimport NodeselectBox from \"./components/NodeSelector.vue\";\nimport axios from \"axios\";\n\nconst store = useStore();\nconst router = useRouter(); // Instantiate the router\nconst isCreatingProject = ref(false);\nconst creationSuccess = ref(false); // New ref to track creation success\nconst authToken = computed(() => store.state.authToken);\n\nconst projectData = reactive({\n  model: {}, // Initially an object, later to be just a string of model_id\n  dataset: {}, // Initially an object, later to be just a string of dataset_id\n  hyperparameters: {}, // Already in the desired format\n  nodes: [], // Initially an array of objects, later to be an array of node names\n});\n\nwatch(\n  projectData.hyperparameters,\n  (newVal) => {\n    console.log(\"Hyperparameters updated:\", newVal);\n  },\n  { deep: true },\n);\n\nwatch(creationSuccess, (newValue) => {\n  if (newValue) {\n    alert(\"프로젝트가 생성되었습니다.\"); // Alert the user about success\n    creationSuccess.value = false; // Reset the creation success state\n    router.push(\"/dashboard-default\"); // Redirect to the Dashboard page\n  }\n});\n\n// const handleSelectedNodeChange = (selectedNode) => {\n//   const index = projectData.nodes.findIndex(node => node.id === selectedNode.id);\n//   if (index > -1) {\n//     // Node is already selected, remove it\n//     projectData.nodes.splice(index, 1);\n//   } else {\n//     // Node is not selected, add it\n//     projectData.nodes.push(selectedNode);\n//   }\n// };\n\nconst prepareDataForSubmission = () => {\n  return {\n    model: projectData.model.model_id,\n    dataset: projectData.dataset.dataset_id,\n    hyperparameters: {\n      ...projectData.hyperparameters,\n      optimizer: projectData.hyperparameters.optimizer,\n      lossFunction: projectData.hyperparameters.lossFunction,\n    },\n    nodes: projectData.nodes.map((node) => node.name),\n  };\n};\n\nconst hyperparametersSelected = (newHyperparameters) => {\n  projectData.hyperparameters = {\n    ...projectData.hyperparameters,\n    ...newHyperparameters,\n  };\n};\n\n// Method to send data to backend\nconst createProject = async () => {\n  try {\n    isCreatingProject.value = true;\n    const formattedData = prepareDataForSubmission(); // 전달 데이터 형식 변경\n    lastSubmittedData.value = formattedData;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${authToken.value}`,\n      },\n    };\n\n    const response = await axios.post(\n      \"http://163.180.117.23:5000/api/create-project\",\n      formattedData,\n      config,\n    );\n\n    // 프로젝트 생성이 성공했다면, 노드 정보 업데이트\n    if (response && response.status === 200) {\n      console.log(\"Project created successfully:\", response.data);\n      // 프로젝트 생성 후 노드 정보 새로고침\n      await store.dispatch(\"fetchNodes\");\n      creationSuccess.value = true; // Indicate that the project was created\n      // 성공 메시지 처리 또는 사용자 인터페이스 업데이트 등의 추가적인 처리를 여기에 추가할 수 있습니다.\n    }\n    console.log(response.data);\n    // Handle successful project creation (e.g., redirect or show message)\n  } catch (error) {\n    console.error(\"Failed to create project:\", error);\n    // Handle errors (e.g., show error message)\n  } finally {\n    isCreatingProject.value = false;\n  }\n};\n\nconst modelIdSelected = (modelId) => {\n  if (modelId) {\n    const fullModel = store.state.models.find(\n      (model) => model.model_id === modelId,\n    );\n    if (fullModel) {\n      projectData.model = fullModel; // Assign the full model object\n    } else {\n      console.error(\"Model not found!\");\n    }\n  }\n};\n\nconst datasetSelected = (datasetId) => {\n  projectData.dataset = { dataset_id: datasetId };\n};\n\nconst lastSubmittedData = ref(null); // 백엔드로 마지막으로 전송된 데이터를 저장\n</script>\n\n<template>\n  <div class=\"container-fluid\">\n    <div class=\"py-5-container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <ModelselectBox @update:modelValue=\"modelIdSelected\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <DatasetselectBox @update:modelValue=\"datasetSelected\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <HyperparameterselectBox\n            @update:modelValue=\"hyperparametersSelected\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"py-2 container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <NodeselectBox v-model=\"projectData.nodes\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"create-project-button-container\">\n      <button\n        class=\"create-project-button\"\n        @click=\"createProject\"\n        :disabled=\"isCreatingProject\"\n      >\n        {{ isCreatingProject ? \"생성 중\" : \"프로젝트 생성\" }}\n      </button>\n    </div>\n    \n  </div>\n</template>\n<style scoped>\n.py-5-container-fluid {\n  padding: 10px;\n  height: 270px;\n}\n\n.container-fluid {\n  padding: 10px; /* 모든 패딩 제거 */\n}\n\n.create-project-button-container {\n  text-align: right; /* 버튼을 오른쪽 정렬 */\n  padding: 20px 0; /* 상단과 하단 여백 */\n}\n\n.create-project-button {\n  padding: 10px 30px; /* 버튼 내부 패딩 */\n  margin-top: 20px; /* 버튼 위쪽 여백 */\n  margin-bottom: 0; /* 버튼 아래쪽 여백 제거 */\n  background-color: #4CAF50; /* 진한 초록색 배경 */\n  color: white; /* 텍스트 색상을 흰색으로 변경 */\n  font-size: 18px; /* 글꼴 크기 증가 */\n  font-weight: bold; /* 글꼴 두께를 굵게 */\n  border: none; /* 테두리 제거 */\n  border-radius: 8px; /* 둥근 모서리 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 추가 */\n  cursor: pointer;\n  transition: all 0.3s ease; /* 부드러운 전환 효과 */\n}\n\n.create-project-button:hover {\n  background-color: #45a049; /* 호버 상태의 배경색 변경 */\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* 호버 시 그림자 확대 */\n}\n\n.last-submitted-data-container {\n  margin-top: 20px;\n  background-color: #fbfafa;\n  padding: 15px;\n  border-radius: 5px;\n}\n\nbutton {\n  border-radius: 5px; /* 버튼 모서리 둥글게 */\n  background-color: #90ee90; /* 밝은 초록색 배경 */\n  border: none; /* 테두리 없음 */\n  padding: 10px 20px; /* 내부 패딩 */\n  color: rgb(0, 0, 0); /* 글자 색상 */\n  font-size: 16px; /* 글자 크기 */\n  cursor: pointer; /* 커서 포인터 */\n  transition: background-color 0.3s; /* 배경색 변경 애니메이션 */\n  margin-right : 10px;\n  margin-top : 50px;\n}\n\nbutton:hover {\n  background-color: #76c893; /* 버튼 호버 색상 변경 */\n}\n</style>\n"],"mappings":";;;EA+HOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;;EAMlBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;;EAMlBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;;EAQlBA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAQ;;EAMlBA,KAAK,EAAC;AAAiC;oBAlKhD;;uBA+HEC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAIM,OAJNE,UAIM,GAHJF,mBAAA,CAEM,OAFNG,UAEM,GADJC,YAAA,CAAuDC,MAAA;IAAtC,qBAAiB,EAAEA,MAAA,CAAAC;EAAe,G,OAKzDN,mBAAA,CAMM,OANNO,UAMM,GALJP,mBAAA,CAIM,OAJNQ,UAIM,GAHJR,mBAAA,CAEM,OAFNS,UAEM,GADJL,YAAA,CAAyDC,MAAA;IAAtC,qBAAiB,EAAEA,MAAA,CAAAK;EAAe,G,OAK3DV,mBAAA,CAQM,OARNW,UAQM,GAPJX,mBAAA,CAMM,OANNY,UAMM,GALJZ,mBAAA,CAIM,OAJNa,WAIM,GAHJT,YAAA,CAEEC,MAAA;IADC,qBAAiB,EAAEA,MAAA,CAAAS;EAAuB,G,OAMnDd,mBAAA,CAMM,OANNe,WAMM,GALJf,mBAAA,CAIM,OAJNgB,WAIM,GAHJhB,mBAAA,CAEM,OAFNiB,WAEM,GADJb,YAAA,CAA6CC,MAAA;IA7JvDa,UAAA,EA6JkCb,MAAA,CAAAc,WAAW,CAACC,KAAK;IA7JnD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6JkCjB,MAAA,CAAAc,WAAW,CAACC,KAAK,GAAAE,MAAA;iDAK/CtB,mBAAA,CAQM,OARNuB,WAQM,GAPJvB,mBAAA,CAMS;IALPH,KAAK,EAAC,uBAAuB;IAC5B2B,OAAK,EAAEnB,MAAA,CAAAoB,aAAa;IACpBC,QAAQ,EAAErB,MAAA,CAAAsB;sBAERtB,MAAA,CAAAsB,iBAAiB,6CAxK5BC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}