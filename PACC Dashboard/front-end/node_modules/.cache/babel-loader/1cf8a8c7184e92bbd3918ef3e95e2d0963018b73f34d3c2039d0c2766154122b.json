{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref, reactive } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n\n    // Define and initialize the charts object\n    const charts = reactive({\n      lineChart1: null,\n      lineChart2: null,\n      pieChart1: null,\n      pieChart2: null\n    });\n    const store = useStore();\n    const intervalId = ref(null); // Use a ref to keep track of the interval ID\n\n    const projectInfo = computed(() => {\n      const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n      return {\n        progress: data.progress || 0,\n        epoch: data.epoch || 0,\n        accuracy: data.accuracy && data.accuracy.length > 0 ? data.accuracy[data.accuracy.length - 1] : 0,\n        loss: data.loss && data.loss.length > 0 ? data.loss[data.loss.length - 1] : 0,\n        accuracyList: data.accuracy || [],\n        lossList: data.loss || []\n      };\n    });\n    function setupCharts() {\n      const lineChart1Ctx = document.getElementById('lineChart1').getContext('2d');\n      const lineChart2Ctx = document.getElementById('lineChart2').getContext('2d');\n      if (!charts.lineChart1) {\n        charts.lineChart1 = new Chart(lineChart1Ctx, {\n          type: 'line',\n          data: {\n            labels: projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`),\n            datasets: [{\n              label: 'Model Accuracy',\n              data: projectInfo.value.accuracyList,\n              fill: false,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1\n            }]\n          }\n        });\n      } else {\n        charts.lineChart1.data.labels = projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`);\n        charts.lineChart1.data.datasets[0].data = projectInfo.value.accuracyList;\n        charts.lineChart1.update();\n      }\n      if (!charts.lineChart2) {\n        charts.lineChart2 = new Chart(lineChart2Ctx, {\n          type: 'line',\n          data: {\n            labels: projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`),\n            datasets: [{\n              label: 'Model Loss',\n              data: projectInfo.value.lossList,\n              fill: false,\n              borderColor: 'rgb(255, 99, 132)',\n              tension: 0.1\n            }]\n          }\n        });\n      } else {\n        charts.lineChart2.data.labels = projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`);\n        charts.lineChart2.data.datasets[0].data = projectInfo.value.lossList;\n        charts.lineChart2.update();\n      }\n    }\n    function startFetching(projectId) {\n      if (intervalId.value) {\n        clearInterval(intervalId.value); // Clear the current interval if it exists\n      }\n      intervalId.value = setInterval(() => {\n        store.dispatch(\"fetchProjectInfoById\", projectId);\n        setupCharts(); // Update charts with new data\n      }, 3000); // Fetch every 3 seconds\n    }\n    onMounted(() => {\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        if (store.state.selectedProjectId) {\n          startFetching(store.state.selectedProjectId);\n        }\n      }\n    });\n    watch(() => store.state.selectedProjectId, newId => {\n      if (newId && store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjectInfoById\", newId);\n        startFetching(newId); // Start or restart the fetching interval\n      } else {\n        if (intervalId.value) {\n          clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n          intervalId.value = null;\n        }\n      }\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      if (intervalId.value) {\n        clearInterval(intervalId.value);\n      }\n    });\n    const __returned__ = {\n      charts,\n      store,\n      intervalId,\n      projectInfo,\n      setupCharts,\n      startFetching,\n      ProjectList,\n      onMounted,\n      watch,\n      computed,\n      onUnmounted,\n      ref,\n      reactive,\n      get useStore() {\n        return useStore;\n      },\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","onMounted","watch","computed","onUnmounted","ref","reactive","useStore","Chart","registerables","register","charts","lineChart1","lineChart2","pieChart1","pieChart2","store","intervalId","projectInfo","data","state","projectsInfo","selectedProjectId","progress","epoch","accuracy","length","loss","accuracyList","lossList","setupCharts","lineChart1Ctx","document","getElementById","getContext","lineChart2Ctx","type","labels","value","map","_","index","datasets","label","fill","borderColor","tension","update","startFetching","projectId","clearInterval","setInterval","dispatch","authToken","userEmail","newId","immediate"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : '0' }}</p>\n    <p class=\"project-info-highlight accuracy\">모델 정확도: {{ projectInfo.accuracy ? projectInfo.accuracy.toFixed(2) + '%' : '0' }}</p>\n    <p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas ref=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref, reactive } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\n// Define and initialize the charts object\nconst charts = reactive({\n  lineChart1: null,\n  lineChart2: null,\n  pieChart1: null,\n  pieChart2: null\n});\n\nconst store = useStore();\nconst intervalId = ref(null); // Use a ref to keep track of the interval ID\n\nconst projectInfo = computed(() => {\n  const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n  return {\n    progress: data.progress || 0,\n    epoch: data.epoch || 0,\n    accuracy: (data.accuracy && data.accuracy.length > 0) ? data.accuracy[data.accuracy.length - 1] : 0,\n    loss: (data.loss && data.loss.length > 0) ? data.loss[data.loss.length - 1] : 0,\n    accuracyList: data.accuracy || [],\n    lossList: data.loss || []\n  };\n});\n\nfunction setupCharts() {\n  const lineChart1Ctx = document.getElementById('lineChart1').getContext('2d');\n  const lineChart2Ctx = document.getElementById('lineChart2').getContext('2d');\n\n  if (!charts.lineChart1) {\n    charts.lineChart1 = new Chart(lineChart1Ctx, {\n      type: 'line',\n      data: {\n        labels: projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`),\n        datasets: [{\n          label: 'Model Accuracy',\n          data: projectInfo.value.accuracyList,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      }\n    });\n  } else {\n    charts.lineChart1.data.labels = projectInfo.value.accuracyList.map((_, index) => `Epoch ${index + 1}`);\n    charts.lineChart1.data.datasets[0].data = projectInfo.value.accuracyList;\n    charts.lineChart1.update();\n  }\n\n  if (!charts.lineChart2) {\n    charts.lineChart2 = new Chart(lineChart2Ctx, {\n      type: 'line',\n      data: {\n        labels: projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`),\n        datasets: [{\n          label: 'Model Loss',\n          data: projectInfo.value.lossList,\n          fill: false,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }]\n      }\n    });\n  } else {\n    charts.lineChart2.data.labels = projectInfo.value.lossList.map((_, index) => `Epoch ${index + 1}`);\n    charts.lineChart2.data.datasets[0].data = projectInfo.value.lossList;\n    charts.lineChart2.update();\n  }\n}\n\nfunction startFetching(projectId) {\n  if (intervalId.value) {\n    clearInterval(intervalId.value); // Clear the current interval if it exists\n  }\n  intervalId.value = setInterval(() => {\n    store.dispatch(\"fetchProjectInfoById\", projectId);\n    setupCharts();  // Update charts with new data\n  }, 3000); // Fetch every 3 seconds\n}\n\nonMounted(() => {\n  if (store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjects\");\n    if (store.state.selectedProjectId) {\n      startFetching(store.state.selectedProjectId);\n    }\n  }\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId && store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjectInfoById\", newId);\n    startFetching(newId); // Start or restart the fetching interval\n  } else {\n    if (intervalId.value) {\n      clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n      intervalId.value = null;\n    }\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n</script>\n\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}