{"ast":null,"code":"export default {\n  __name: 'MemoryGaugeComponent',\n  props: {\n    totalSize: Number,\n    remainingSize: Number,\n    nodeName: String // You could pass this as a prop to identify the node.\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const {\n      totalSize,\n      remainingSize,\n      nodeName\n    } = props;\n    console.log(`Data for ${nodeName}: Total - ${totalSize}, Remaining - ${remainingSize}`);\n    const __returned__ = {\n      props,\n      totalSize,\n      remainingSize,\n      nodeName\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["props","__props","totalSize","remainingSize","nodeName","console","log"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/MemoryGaugeComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <GaugeComponent :total-size=\"totalSize\" :remaining-size=\"remainingSize\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport GaugeComponent from './GaugeComponent.vue';\r\n\r\n// Props are defined to accept totalSize and remainingSize from the parent component\r\nconst props = defineProps({\r\n  totalSize: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  remainingSize: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst { totalSize, remainingSize } = props;\r\n</script> -->\r\n\r\n\r\n<template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage for {{ nodeName }}</h2>\r\n      <p>Total Size: {{ totalSize }} MB</p>\r\n      <p>Remaining Size: {{ remainingSize }} MB</p>\r\n      <!-- Your chart component here -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    totalSize: Number,\r\n    remainingSize: Number,\r\n    nodeName: String  // You could pass this as a prop to identify the node.\r\n  });\r\n  \r\n  const { totalSize, remainingSize, nodeName } = props;\r\n  console.log(`Data for ${nodeName}: Total - ${totalSize}, Remaining - ${remainingSize}`);\r\n  </script>\r\n  \r\n<style scoped>\r\n.memory-gauge {\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;IAwCE,MAAMA,KAAK,GAAGC,OAIZ;IAEF,MAAM;MAAEC,SAAS;MAAEC,aAAa;MAAEC;IAAS,CAAC,GAAGJ,KAAK;IACpDK,OAAO,CAACC,GAAG,CAAE,YAAWF,QAAS,aAAYF,SAAU,iBAAgBC,aAAc,EAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}