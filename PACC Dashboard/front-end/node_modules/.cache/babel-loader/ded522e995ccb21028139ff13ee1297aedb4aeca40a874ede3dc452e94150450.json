{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7cd58ab4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"memory-gauge\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Memory Usage for \" + _toDisplayString($setup.nodeName), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Total Size: \" + _toDisplayString($setup.totalSize) + \" MB\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Remaining Size: \" + _toDisplayString($setup.remainingSize) + \" MB\", 1 /* TEXT */), _createCommentVNode(\" Your chart component here \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","nodeName","totalSize","remainingSize","_createCommentVNode"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\MemoryGaugeComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <GaugeComponent :total-size=\"totalSize\" :remaining-size=\"remainingSize\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport GaugeComponent from './GaugeComponent.vue';\r\n\r\n// Props are defined to accept totalSize and remainingSize from the parent component\r\nconst props = defineProps({\r\n  totalSize: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  remainingSize: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst { totalSize, remainingSize } = props;\r\n</script> -->\r\n\r\n\r\n<template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage for {{ nodeName }}</h2>\r\n      <p>Total Size: {{ totalSize }} MB</p>\r\n      <p>Remaining Size: {{ remainingSize }} MB</p>\r\n      <!-- Your chart component here -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    totalSize: Number,\r\n    remainingSize: Number,\r\n    nodeName: String  // You could pass this as a prop to identify the node.\r\n  });\r\n  \r\n  const { totalSize, remainingSize, nodeName } = props;\r\n  console.log(`Data for ${nodeName}: Total - ${totalSize}, Remaining - ${remainingSize}`);\r\n  </script>\r\n  \r\n<style scoped>\r\n.memory-gauge {\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EA6BSA,KAAK,EAAC;AAAc;;uBAAzBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAAwC,YAApC,mBAAiB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,kBAChCH,mBAAA,CAAqC,WAAlC,cAAY,GAAAC,gBAAA,CAAGC,MAAA,CAAAE,SAAS,IAAG,KAAG,iBACjCJ,mBAAA,CAA6C,WAA1C,kBAAgB,GAAAC,gBAAA,CAAGC,MAAA,CAAAG,aAAa,IAAG,KAAG,iBACzCC,mBAAA,+BAAkC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}