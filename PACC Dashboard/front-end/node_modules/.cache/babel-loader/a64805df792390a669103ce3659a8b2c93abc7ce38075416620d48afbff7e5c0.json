{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"Doughnut\"], {\n    \"chart-data\": $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","chartData","options","chartOptions"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\GaugeComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <Doughnut :chart-data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </template>\r\n  \r\n<script setup>\r\nimport { ref, watch, defineProps } from \"vue\";\r\nimport { Doughnut } from 'vue3-chart-v2';\r\n\r\nconst props = defineProps({\r\n  totalSize: Number,\r\n  remainingSize: Number\r\n});\r\n\r\nconst chartData = ref({\r\n  labels: ['Used', 'Free'],\r\n  datasets: [\r\n    {\r\n      data: [\r\n        0, // Initial dummy data, will be replaced by watch effect\r\n        0\r\n      ],\r\n      backgroundColor: ['#42A5F5', '#ddd'],\r\n      borderWidth: 0\r\n    }\r\n  ]\r\n});\r\n\r\nconst chartOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  circumference: 180,\r\n  rotation: 270\r\n};\r\n\r\n// Update chart data whenever props change\r\nwatch([() => props.totalSize, () => props.remainingSize], () => {\r\n  chartData.value.datasets[0].data = [\r\n    ((props.totalSize - props.remainingSize) / props.totalSize) * 100,\r\n    (props.remainingSize / props.totalSize) * 100\r\n  ];\r\n}, { immediate: true }); // Immediate true to update data on initial render\r\n\r\n</script>\r\n"],"mappings":";;uBACIA,mBAAA,CAEM,cADJC,YAAA,CAA4DC,MAAA;IAAjD,YAAU,EAAEA,MAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}