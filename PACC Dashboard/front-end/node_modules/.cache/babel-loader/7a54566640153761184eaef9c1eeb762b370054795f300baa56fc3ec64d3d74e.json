{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"project-list-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"project-info-widget\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tarining-status-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \"학습 상태\")], -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"project-info-highlight\"\n};\nconst _hoisted_9 = {\n  class: \"project-info-highlight epoch\"\n};\nconst _hoisted_10 = {\n  class: \"project-info-highlight accuracy\"\n};\nconst _hoisted_11 = {\n  class: \"project-info-highlight loss\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"project-info-widget-chart\"\n};\nconst _hoisted_13 = {\n  ref: \"lineChart1\",\n  class: \"canvas-size\"\n};\nconst _hoisted_14 = {\n  ref: \"lineChart2\",\n  class: \"canvas-size\"\n};\nconst _hoisted_15 = {\n  ref: \"pieChart1\",\n  class: \"canvas-size\"\n};\nconst _hoisted_16 = {\n  ref: \"pieChart2\",\n  class: \"canvas-size\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"ProjectList\"])]), $setup.projectInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _createElementVNode(\"p\", _hoisted_8, \"모델 학습 진행율: \" + _toDisplayString($setup.projectInfo.progress ? `${$setup.projectInfo.progress}%` : '0'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_9, \"모델 훈련 횟수: \" + _toDisplayString($setup.projectInfo.epoch !== undefined ? $setup.projectInfo.epoch : '0'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_10, \"모델 정확도: \" + _toDisplayString(typeof $setup.projectInfo.accuracy === 'number' ? $setup.projectInfo.accuracy.toFixed(2) + '%' : '0%'), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_11, \"모델 Loss 값: \" + _toDisplayString($setup.projectInfo.loss ? $setup.projectInfo.loss.toFixed(4) : '0'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), $setup.projectInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"canvas\", _hoisted_13, null, 512 /* NEED_PATCH */), _createElementVNode(\"canvas\", _hoisted_14, null, 512 /* NEED_PATCH */), _createElementVNode(\"canvas\", _hoisted_15, null, 512 /* NEED_PATCH */), _createElementVNode(\"canvas\", _hoisted_16, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementVNode","ref","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","$setup","projectInfo","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","progress","_hoisted_9","epoch","undefined","_hoisted_10","accuracy","toFixed","_hoisted_11","loss","_createCommentVNode","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16"],"sources":["D:\\Git\\ITRC_Front\\vue-flask-dashboard\\front-end\\src\\views\\Dashboard.vue"],"sourcesContent":["\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : '0' }}</p>\n    <p class=\"project-info-highlight accuracy\">모델 정확도: {{ typeof projectInfo.accuracy === 'number' ? projectInfo.accuracy.toFixed(2) + '%' : '0%' }}</p>\n<p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas ref=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas ref=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n\n\n<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, watch, computed, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\nconst setupCharts = () => {\n  // Setup line chart 1\n  const lineChart1Ctx = lineChart1.value.getContext('2d');\n  new Chart(lineChart1Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: projectInfo.value.accuracyHistory,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    }\n  });\n\n const lineChart2Ctx = lineChart2.value.getContext('2d');\n  new Chart(lineChart2Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: projectInfo.value.lossHistory,\n        fill: false,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1\n      }]\n    }\n  });\n\n  // Setup pie chart 1\n  const pieChart1Ctx = pieChart1.value.getContext('2d');\n  new Chart(pieChart1Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [300, 50, 100],\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n      }]\n    }\n  });\n\n  // Setup pie chart 2\n  const pieChart2Ctx = pieChart2.value.getContext('2d');\n  new Chart(pieChart2Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [200, 150, 150],\n        backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']\n      }]\n    }\n  });\n};\n\n\nconst store = useStore();\nconst intervalId = ref(null); // Use a ref to keep track of the interval ID\n\nfunction startFetching(projectId) {\n  if (intervalId.value) {\n    clearInterval(intervalId.value); // Clear the current interval if it exists\n  }\n  intervalId.value = setInterval(() => {\n    store.dispatch(\"fetchProjectInfoById\", projectId);\n    \n  }, 3000); // Fetch every 3 seconds\n}\n\nonMounted(() => {\n  if (store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjects\");\n    // Assuming project ID is already selected somewhere and stored in the state\n    if (store.state.selectedProjectId) {\n      startFetching(store.state.selectedProjectId);\n    }\n  }\n  setupCharts();\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId && store.state.authToken && store.state.userEmail) {\n    store.dispatch(\"fetchProjectInfoById\", newId); // Fetch immediately when ID changes\n    startFetching(newId); // Start or restart the fetching interval\n  } else {\n    if (intervalId.value) {\n      clearInterval(intervalId.value); // Clear the interval if the ID becomes invalid\n      intervalId.value = null;\n    }\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  // Clean up the interval when the component is destroyed\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n// Computed property to display project info\nconst projectInfo = computed(() => {\n  const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n  return {\n    progress: data.progress || 0,\n    epoch: data.epoch || 0,\n    accuracy: (data.accuracy && data.accuracy.length > 0) ? data.accuracy[data.accuracy.length - 1] : 0,\n    loss: (data.loss && data.loss.length > 0) ? data.loss[data.loss.length - 1] : 0,\n    accuracyHistory: data.accuracy || [],\n    lossHistory: data.loss || []\n  };\n});\n</script>\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAwB;;EAHvCC,GAAA;EAMSD,KAAK,EAAC;;gCACXE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAwB,I,aACnCE,mBAAA,CAAc,YAAV,OAAK,E;gCAETA,mBAAA,CAAQ;gCACRA,mBAAA,CAAQ;gCACRA,mBAAA,CAAQ;;EACLF,KAAK,EAAC;AAAwB;;EAC9BA,KAAK,EAAC;AAA8B;;EACpCA,KAAK,EAAC;AAAiC;;EAC3CA,KAAK,EAAC;AAA6B;;EAhBtCC,GAAA;EAoBOD,KAAK,EAAC;;;EACLG,GAAG,EAAC,YAAY;EAACH,KAAK,EAAC;;;EACvBG,GAAG,EAAC,YAAY;EAACH,KAAK,EAAC;;;EACvBG,GAAG,EAAC,WAAW;EAACH,KAAK,EAAC;;;EACtBG,GAAG,EAAC,WAAW;EAACH,KAAK,EAAC;;;uBAxB9BI,mBAAA,CAAAC,SAAA,SAEEH,mBAAA,CAiBM,OAjBNI,UAiBM,GAhBJJ,mBAAA,CAEM,OAFNK,UAEM,GADJC,YAAA,CAAeC,MAAA,iB,GAEsBA,MAAA,CAAAC,WAAW,I,cAAlDN,mBAAA,CAYI,OAZJO,UAYI,GAXJC,UAEM,EACNC,UAAQ,EACRC,UAAQ,EACRC,UAAQ,EACRb,mBAAA,CAA8G,KAA9Gc,UAA8G,EAA5E,aAAW,GAAAC,gBAAA,CAAGR,MAAA,CAAAC,WAAW,CAACQ,QAAQ,MAAMT,MAAA,CAAAC,WAAW,CAACQ,QAAQ,2BAC9FhB,mBAAA,CAAqH,KAArHiB,UAAqH,EAA7E,YAAU,GAAAF,gBAAA,CAAGR,MAAA,CAAAC,WAAW,CAACU,KAAK,KAAKC,SAAS,GAAGZ,MAAA,CAAAC,WAAW,CAACU,KAAK,wBACxGlB,mBAAA,CAAoJ,KAApJoB,WAAoJ,EAAzG,UAAQ,GAAAL,gBAAA,QAAUR,MAAA,CAAAC,WAAW,CAACa,QAAQ,gBAAgBd,MAAA,CAAAC,WAAW,CAACa,QAAQ,CAACC,OAAO,kCACjItB,mBAAA,CAAgH,KAAhHuB,WAAgH,EAAzE,aAAW,GAAAR,gBAAA,CAAGR,MAAA,CAAAC,WAAW,CAACgB,IAAI,GAAGjB,MAAA,CAAAC,WAAW,CAACgB,IAAI,CAACF,OAAO,0B,KAhBhGG,mBAAA,e,GAoB+ClB,MAAA,CAAAC,WAAW,I,cAAxDN,mBAAA,CAKQ,OALRwB,WAKQ,GAJV1B,mBAAA,CAAsD,UAAtD2B,WAAsD,+BACtD3B,mBAAA,CAAsD,UAAtD4B,WAAsD,+BACtD5B,mBAAA,CAAqD,UAArD6B,WAAqD,+BACrD7B,mBAAA,CAAqD,UAArD8B,WAAqD,8B,KAxBrDL,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}