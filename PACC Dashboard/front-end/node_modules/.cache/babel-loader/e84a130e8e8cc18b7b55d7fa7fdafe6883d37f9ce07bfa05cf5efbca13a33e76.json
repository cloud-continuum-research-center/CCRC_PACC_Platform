{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nimport ProjectList from './components/ProjectsList.vue';\n\n// Register the necessary Chart.js components\n\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const lineChart1 = ref(null);\n    const lineChart2 = ref(null);\n    const pieChart1 = ref(null);\n    const pieChart2 = ref(null);\n    const setupCharts = () => {\n      // Setup line chart 1\n      const lineChart1Ctx = lineChart1.value.getContext('2d');\n      new Chart(lineChart1Ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n          datasets: [{\n            label: 'Dataset 1',\n            data: [65, 59, 80, 81, 56],\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        }\n      });\n\n      // Setup line chart 2\n      const lineChart2Ctx = lineChart2.value.getContext('2d');\n      new Chart(lineChart2Ctx, {\n        type: 'line',\n        data: {\n          labels: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n          datasets: [{\n            label: 'Dataset 2',\n            data: [28, 48, 40, 19, 86],\n            fill: false,\n            borderColor: 'rgb(255, 99, 132)',\n            tension: 0.1\n          }]\n        }\n      });\n\n      // Setup pie chart 1\n      const pieChart1Ctx = pieChart1.value.getContext('2d');\n      new Chart(pieChart1Ctx, {\n        type: 'pie',\n        data: {\n          labels: ['Red', 'Blue', 'Yellow'],\n          datasets: [{\n            label: 'Dataset 1',\n            data: [300, 50, 100],\n            backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n          }]\n        }\n      });\n\n      // Setup pie chart 2\n      const pieChart2Ctx = pieChart2.value.getContext('2d');\n      new Chart(pieChart2Ctx, {\n        type: 'pie',\n        data: {\n          labels: ['Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: 'Dataset 2',\n            data: [200, 150, 150],\n            backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']\n          }]\n        }\n      });\n    };\n    onMounted(() => {\n      setupCharts();\n    });\n    const __returned__ = {\n      lineChart1,\n      lineChart2,\n      pieChart1,\n      pieChart2,\n      setupCharts,\n      onMounted,\n      ref,\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      },\n      ProjectList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","Chart","registerables","ProjectList","register","lineChart1","lineChart2","pieChart1","pieChart2","setupCharts","lineChart1Ctx","value","getContext","type","data","labels","datasets","label","fill","borderColor","tension","lineChart2Ctx","pieChart1Ctx","backgroundColor","pieChart2Ctx"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nimport ProjectList from './components/ProjectsList.vue';\n\n// Register the necessary Chart.js components\nChart.register(...registerables);\n\nconst lineChart1 = ref(null);\nconst lineChart2 = ref(null);\nconst pieChart1 = ref(null);\nconst pieChart2 = ref(null);\n\nconst setupCharts = () => {\n  // Setup line chart 1\n  const lineChart1Ctx = lineChart1.value.getContext('2d');\n  new Chart(lineChart1Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [65, 59, 80, 81, 56],\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    }\n  });\n\n  // Setup line chart 2\n  const lineChart2Ctx = lineChart2.value.getContext('2d');\n  new Chart(lineChart2Ctx, {\n    type: 'line',\n    data: {\n      labels: ['Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [28, 48, 40, 19, 86],\n        fill: false,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1\n      }]\n    }\n  });\n\n  // Setup pie chart 1\n  const pieChart1Ctx = pieChart1.value.getContext('2d');\n  new Chart(pieChart1Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow'],\n      datasets: [{\n        label: 'Dataset 1',\n        data: [300, 50, 100],\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']\n      }]\n    }\n  });\n\n  // Setup pie chart 2\n  const pieChart2Ctx = pieChart2.value.getContext('2d');\n  new Chart(pieChart2Ctx, {\n    type: 'pie',\n    data: {\n      labels: ['Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: 'Dataset 2',\n        data: [200, 150, 150],\n        backgroundColor: ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']\n      }]\n    }\n  });\n};\n\nonMounted(() => {\n  setupCharts();\n});\n</script>\n\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n      <canvas ref=\"lineChart1\"></canvas>\n      <canvas ref=\"lineChart2\"></canvas>\n      <canvas ref=\"pieChart1\"></canvas>\n      <canvas ref=\"pieChart2\"></canvas>\n    </div>\n  </div>\n</template>\n\n<style>\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}