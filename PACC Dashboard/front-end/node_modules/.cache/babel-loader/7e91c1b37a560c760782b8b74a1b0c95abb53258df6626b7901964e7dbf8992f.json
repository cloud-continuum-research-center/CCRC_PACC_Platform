{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted, onUnmounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    onMounted(() => {\n      // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        // 실시간 데이터 가져오기를 시작합니다.\n        startFetchingNodeMonitoringData();\n      }\n    });\n\n    // 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\n    onUnmounted(() => {\n      stopFetchingNodeMonitoringData();\n    });\n\n    // 실시간 데이터를 Store에 주기적으로 가져오기 위한 로직입니다.\n    const dataInterval = ref(null);\n    const __returned__ = {\n      store,\n      dataInterval,\n      ProjectList,\n      onMounted,\n      onUnmounted,\n      ref,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","onMounted","onUnmounted","ref","useStore","store","state","authToken","userEmail","dispatch","startFetchingNodeMonitoringData","stopFetchingNodeMonitoringData","dataInterval"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\r\nimport ProjectList from \"./components/ProjectsList.vue\";\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\r\n  if (store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjects\");\r\n    // 실시간 데이터 가져오기를 시작합니다.\r\n    startFetchingNodeMonitoringData();\r\n  }\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\r\nonUnmounted(() => {\r\n  stopFetchingNodeMonitoringData();\r\n});\r\n\r\n// 실시간 데이터를 Store에 주기적으로 가져오기 위한 로직입니다.\r\nconst dataInterval = ref(null);\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"project-list-container\">\r\n      <ProjectList />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n.dashboard {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.project-list-container {\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AACA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,SAASC,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACjD,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IAExBH,SAAS,CAAC,MAAM;MACd;MACA,IAAII,KAAK,CAACC,KAAK,CAACC,SAAS,IAAIF,KAAK,CAACC,KAAK,CAACE,SAAS,EAAE;QAClDH,KAAK,CAACI,QAAQ,CAAC,eAAe,CAAC;QAC/B;QACAC,+BAA+B,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;;IAEF;IACAR,WAAW,CAAC,MAAM;MAChBS,8BAA8B,CAAC,CAAC;IAClC,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAGT,GAAG,CAAC,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}