{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\nconst _hoisted_2 = {\n  class: \"col-lg-7 mb-lg\"\n};\nconst _hoisted_3 = {\n  class: \"card z-index-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Project List component \"), _createVNode($setup[\"ProjectList\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Gradient Line Chart component with props \"), _createVNode($setup[\"GradientLineChart\"], {\n    id: \"chart-line\",\n    title: \"Sales Overview\",\n    description: \"<i class='fa fa-arrow-up text-success'></i>\\r\\n          <span class='font-weight-bold'>4% more</span> in 2021\",\n    chart: {\n      labels: ['Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      datasets: [{\n        label: 'Mobile Apps',\n        data: [50, 40, 300, 220, 500, 250, 400, 230, 500]\n      }]\n    }\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","_createElementVNode","_hoisted_2","_hoisted_3","id","title","description","chart"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\Dashboard.vue"],"sourcesContent":["<script setup>\r\nimport GradientLineChart from \"@/examples/Charts/GradientLineChart.vue\";\r\nimport ProjectList from \"./components/ProjectsList.vue\";\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  // 인증 토큰과 사용자 이메일이 있을 때만 프로젝트 목록을 가져옵니다.\r\n  if (store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjects\");\r\n    // 실시간 데이터 가져오기를 시작합니다.\r\n    startFetchingRealTimeData();\r\n  }\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 데이터 가져오기를 중단합니다.\r\nonUnmounted(() => {\r\n  stopFetchingRealTimeData();\r\n});\r\n\r\n// 실시간 데이터를 주기적으로 가져오기 위한 로직입니다.\r\nconst realTimeDataInterval = ref(null);\r\n\r\nfunction startFetchingRealTimeData() {\r\n  // 1초마다 실시간 데이터를 가져오는 동작을 수행합니다.\r\n  realTimeDataInterval.value = setInterval(() => {\r\n    store.dispatch('fetchRealTimeData');\r\n  }, 1000);\r\n}\r\n\r\nfunction stopFetchingRealTimeData() {\r\n  clearInterval(realTimeDataInterval.value);\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"row\">\r\n    <!-- Project List component -->\r\n    <ProjectList />\r\n    <div class=\"col-lg-7 mb-lg\">\r\n      <div class=\"card z-index-2\">\r\n        <!-- Gradient Line Chart component with props -->\r\n        <GradientLineChart\r\n          id=\"chart-line\"\r\n          title=\"Sales Overview\"\r\n          description=\"<i class='fa fa-arrow-up text-success'></i>\r\n          <span class='font-weight-bold'>4% more</span> in 2021\"\r\n          :chart=\"{\r\n            labels: [\r\n              'Apr',\r\n              'May',\r\n              'Jun',\r\n              'Jul',\r\n              'Aug',\r\n              'Sep',\r\n              'Oct',\r\n              'Nov',\r\n              'Dec',\r\n            ],\r\n            datasets: [\r\n              {\r\n                label: 'Mobile Apps',\r\n                data: [50, 40, 300, 220, 500, 250, 400, 230, 500],\r\n              },\r\n            ],\r\n          }\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"mappings":";;EAsCOA,KAAK,EAAC;AAAK;;EAGTA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAgB;;uBAJ/BC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,4BAA+B,EAC/BC,YAAA,CAAeC,MAAA,kBACfC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJD,mBAAA,CA2BM,OA3BNE,UA2BM,GA1BJL,mBAAA,8CAAiD,EACjDC,YAAA,CAwBEC,MAAA;IAvBAI,EAAE,EAAC,YAAY;IACfC,KAAK,EAAC,gBAAgB;IACtBC,WAAW,EAAC,gHAC0C;IACrDC,KAAK,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}