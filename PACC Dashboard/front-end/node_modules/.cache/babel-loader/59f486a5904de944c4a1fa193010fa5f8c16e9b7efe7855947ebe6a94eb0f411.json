{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3a34df2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"project-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"project-widget-header\"\n}, \"Project List\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"project-widget-body\"\n};\nconst _hoisted_4 = {\n  class: \"project-list-container\"\n};\nconst _hoisted_5 = {\n  class: \"project-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"project-description-container\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  class: \"project-actions-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.projects, (project, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      onClick: $event => $setup.selectProject(project),\n      class: _normalizeClass({\n        'is-selected': project.id === $setup.selectedProject.id\n      })\n    }, _toDisplayString(project.model_name) + \" - \" + _toDisplayString(project.dataset_name), 11 /* TEXT, CLASS, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h4\", null, _toDisplayString($setup.selectedProject.model_name || \"No project selected\"), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.selectedProject.dataset_name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString($setup.selectedProject.status), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Created At: \" + _toDisplayString($setup.selectedProject.created_at), 1 /* TEXT */), $setup.selectedProject.project_nodes ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Nodes: \" + _toDisplayString($setup.parseNodes($setup.selectedProject.project_nodes)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [$setup.selectedProject.status === '학습 중' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $setup.stopTraining($setup.selectedProject.id))\n  }, \" 학습 중단 \")) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$setup","projects","project","index","onClick","$event","selectProject","_normalizeClass","id","selectedProject","model_name","_toDisplayString","dataset_name","_hoisted_6","_hoisted_7","status","created_at","project_nodes","_hoisted_8","parseNodes","_createCommentVNode","_hoisted_9","_cache","stopTraining"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\ProjectsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"project-widget\">\r\n    <h4 class=\"project-widget-header\">Project List</h4>\r\n    <div class=\"project-widget-body\">\r\n      <div class=\"project-list-container\">\r\n        <ul class=\"project-list\">\r\n          <li\r\n            v-for=\"(project, index) in projects\"\r\n            :key=\"index\"\r\n            @click=\"selectProject(project)\"\r\n            :class=\"{ 'is-selected': project.id === selectedProject.id }\"\r\n          >\r\n            {{ project.model_name }} - {{ project.dataset_name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"project-description-container\">\r\n        <h4>{{ selectedProject.model_name || \"No project selected\" }}</h4>\r\n        <p>{{ selectedProject.dataset_name }}</p>\r\n        <p>Status: {{ selectedProject.status }}</p>\r\n        <p>Created At: {{ selectedProject.created_at }}</p>\r\n        <p v-if=\"selectedProject.project_nodes\">\r\n          Nodes: {{ parseNodes(selectedProject.project_nodes) }}\r\n        </p>\r\n      </div>\r\n      <div class=\"project-actions-container\">\r\n        <button\r\n          v-if=\"selectedProject.status === '학습 중'\"\r\n          @click=\"stopTraining(selectedProject.id)\"\r\n        >\r\n          학습 중단\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, watch} from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nconst store = useStore();\r\nconst projects = computed(() => store.getters.userProjects);\r\nconst selectedProject = ref({});\r\n\r\nwatch(() => store.getters.userProjects, (newProjects) => {\r\n  // This watcher ensures that if the selected project updates in the store, it reflects in the component\r\n  if (selectedProject.value && newProjects.length) {\r\n    const updatedProject = newProjects.find(p => p.id === selectedProject.value.id);\r\n    if (updatedProject) {\r\n      selectedProject.value = updatedProject;\r\n    }\r\n  }\r\n}, { deep: true });\r\n\r\nconst selectProject = (project) => {\r\n  selectedProject.value = project;\r\n};\r\n\r\nconst parseNodes = (nodesJson) => {\r\n  try {\r\n    return JSON.parse(nodesJson).join(\", \"); // Assuming the nodes are stored in a simple array\r\n  } catch (e) {\r\n    return \"Error parsing nodes\";\r\n  }\r\n};\r\n\r\nconst stopTraining = async () => {\r\n  if (!selectedProject.value || !selectedProject.value.id) {\r\n    console.error(\r\n      \"No project selected or selected project does not have an id\",\r\n    );\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/stop-training\",\r\n      { projectId: selectedProject.value.id },\r\n      { headers: { Authorization: `Bearer ${store.state.authToken}` } },\r\n    );\r\n    if (response.data.success) {\r\n      console.log(\"학습 중단 요청 성공\", selectedProject.value.id);\r\n      alert(\"학습 중단 요청이 성공했습니다.\"); // Alert for success\r\n      // Refetch projects to update the list\r\n      await store.dispatch(\"fetchProjects\");\r\n      // Update selectedProject to reflect the changes if it's still selected\r\n      const updatedProject = store.getters.userProjects.find(\r\n        (p) => p.id === selectedProject.value.id,\r\n      );\r\n      if (updatedProject) {\r\n        selectedProject.value = updatedProject;\r\n      }\r\n    } else {\r\n      // Handle case where response.data.success is false\r\n      throw new Error(\"학습 중단 요청이 실패했습니다.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"학습 중단 요청 실패\", selectedProject.value.id, error);\r\n    // Display an error message to the user\r\n    alert(\"학습 중지 요청에 실패하였습니다.\"); // Use a more user-friendly error handling instead of alert\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.project-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto; /* Center the widget */\r\n  margin-bottom: 20px; /* Add bottom margin */\r\n  width: calc(100% - 10px); /* Reduce the total width by 20px from each side */\r\n  max-width: 1200px; /* Optionally add a max-width if you want to limit the size on larger screens */\r\n}\r\n\r\n.project-widget-header {\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.project-widget-body {\r\n  display: flex;\r\n}\r\n\r\n.project-list-container {\r\n  border-right: 1px solid #ddd;\r\n  flex: 1;\r\n}\r\n\r\n.project-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.project-list li {\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.project-list li:hover,\r\n.project-list li.is-selected {\r\n  background-color: #e8f0f9;\r\n}\r\n\r\n.project-description-container {\r\n  flex: 2;\r\n  padding: 16px;\r\n}\r\n\r\n.project-actions-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px;\r\n}\r\n\r\nbutton {\r\n  border-radius: 5px; /* Adjust the pixel value to control the roundness */\r\n  background-color: #90ee90; /* This is a light green color */\r\n  border: none; /* Removes the default border */\r\n  padding: 10px 20px; /* Adds some padding inside the button */\r\n  color: rgb(0, 0, 0); /* Changes the text color to white */\r\n  font-size: 16px; /* Adjust the font size as needed */\r\n  cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */\r\n  transition: background-color 0.3s; /* Smooth transition for background color */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #76c893; /* Slightly darker green color for the hover state */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAmD;EAA/CD,KAAK,EAAC;AAAuB,GAAC,cAAY;;EACzCA,KAAK,EAAC;AAAqB;;EACzBA,KAAK,EAAC;AAAwB;;EAC7BA,KAAK,EAAC;AAAc;mBALhC;;EAgBWA,KAAK,EAAC;AAA+B;;EAhBhDE,GAAA;AAAA;;EAyBWF,KAAK,EAAC;AAA2B;;uBAxB1CG,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,UAAmD,EACnDJ,mBAAA,CA8BM,OA9BNK,UA8BM,GA7BJL,mBAAA,CAWM,OAXNM,UAWM,GAVJN,mBAAA,CASK,MATLO,UASK,I,kBARHL,mBAAA,CAOKM,SAAA,QAbfC,WAAA,CAOuCC,MAAA,CAAAC,QAAQ,EAP/C,CAOoBC,OAAO,EAAEC,KAAK;yBADxBX,mBAAA,CAOK;MALFD,GAAG,EAAEY,KAAK;MACVC,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,aAAa,CAACJ,OAAO;MAC5Bb,KAAK,EAVlBkB,eAAA;QAAA,eAUqCL,OAAO,CAACM,EAAE,KAAKR,MAAA,CAAAS,eAAe,CAACD;MAAE;wBAEvDN,OAAO,CAACQ,UAAU,IAAG,KAAG,GAAAC,gBAAA,CAAGT,OAAO,CAACU,YAAY,gCAZ9DC,UAAA;sCAgBMvB,mBAAA,CAQM,OARNwB,UAQM,GAPJxB,mBAAA,CAAkE,YAAAqB,gBAAA,CAA3DX,MAAA,CAAAS,eAAe,CAACC,UAAU,2CACjCpB,mBAAA,CAAyC,WAAAqB,gBAAA,CAAnCX,MAAA,CAAAS,eAAe,CAACG,YAAY,kBAClCtB,mBAAA,CAA2C,WAAxC,UAAQ,GAAAqB,gBAAA,CAAGX,MAAA,CAAAS,eAAe,CAACM,MAAM,kBACpCzB,mBAAA,CAAmD,WAAhD,cAAY,GAAAqB,gBAAA,CAAGX,MAAA,CAAAS,eAAe,CAACO,UAAU,kBACnChB,MAAA,CAAAS,eAAe,CAACQ,aAAa,I,cAAtCzB,mBAAA,CAEI,KAvBZ0B,UAAA,EAqBgD,UAC/B,GAAAP,gBAAA,CAAGX,MAAA,CAAAmB,UAAU,CAACnB,MAAA,CAAAS,eAAe,CAACQ,aAAa,qBAtB5DG,mBAAA,e,GAyBM9B,mBAAA,CAOM,OAPN+B,UAOM,GALIrB,MAAA,CAAAS,eAAe,CAACM,MAAM,e,cAD9BvB,mBAAA,CAKS;IA/BjBD,GAAA;IA4BWa,OAAK,EAAAkB,MAAA,QAAAA,MAAA,MAAAjB,MAAA,IAAEL,MAAA,CAAAuB,YAAY,CAACvB,MAAA,CAAAS,eAAe,CAACD,EAAE;KACxC,SAED,KA/BRY,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}