{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    onMounted(() => {\n      if (store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjects\");\n        // Assuming project ID is already selected somewhere and stored in the state\n        if (store.state.selectedProjectId) {\n          store.dispatch(\"fetchProjectInfoById\", store.state.selectedProjectId);\n        }\n      }\n    });\n\n    // Watch the selectedProjectId and fetch project info when it changes\n    watch(() => store.state.selectedProjectId, newId => {\n      if (newId && store.state.authToken && store.state.userEmail) {\n        store.dispatch(\"fetchProjectInfoById\", newId);\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      store,\n      ProjectList,\n      onMounted,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","onMounted","useStore","store","state","authToken","userEmail","dispatch","selectedProjectId","watch","newId","immediate"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["<script setup>\r\nimport ProjectList from \"./components/ProjectsList.vue\";\r\nimport { onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  if (store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjects\");\r\n    // Assuming project ID is already selected somewhere and stored in the state\r\n    if (store.state.selectedProjectId) {\r\n      store.dispatch(\"fetchProjectInfoById\", store.state.selectedProjectId);\r\n    }\r\n  }\r\n});\r\n\r\n// Watch the selectedProjectId and fetch project info when it changes\r\nwatch(() => store.state.selectedProjectId, (newId) => {\r\n  if (newId && store.state.authToken && store.state.userEmail) {\r\n    store.dispatch(\"fetchProjectInfoById\", newId);\r\n  }\r\n}, { immediate: true });\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"project-list-container\">\r\n      <ProjectList />\r\n    </div>\r\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\r\n      <h4>Project Info</h4>\r\n      <p>Model: {{ projectInfo.model_name }}</p>\r\n      <p>Dataset: {{ projectInfo.dataset_name }}</p>\r\n      <p>Status: {{ projectInfo.status }}</p>\r\n      <p>Created: {{ projectInfo.created_at }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n.dashboard {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.project-list-container {\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n.project-info-widget {\r\n  width: 300px; /* Set the width as needed */\r\n  padding: 20px;\r\n  margin-top: 20px; /* Spacing from the top element */\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AACA,OAAOA,WAAW,MAAM,+BAA+B;AACvD,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IAExBD,SAAS,CAAC,MAAM;MACd,IAAIE,KAAK,CAACC,KAAK,CAACC,SAAS,IAAIF,KAAK,CAACC,KAAK,CAACE,SAAS,EAAE;QAClDH,KAAK,CAACI,QAAQ,CAAC,eAAe,CAAC;QAC/B;QACA,IAAIJ,KAAK,CAACC,KAAK,CAACI,iBAAiB,EAAE;UACjCL,KAAK,CAACI,QAAQ,CAAC,sBAAsB,EAAEJ,KAAK,CAACC,KAAK,CAACI,iBAAiB,CAAC;QACvE;MACF;IACF,CAAC,CAAC;;IAEF;IACAC,KAAK,CAAC,MAAMN,KAAK,CAACC,KAAK,CAACI,iBAAiB,EAAGE,KAAK,IAAK;MACpD,IAAIA,KAAK,IAAIP,KAAK,CAACC,KAAK,CAACC,SAAS,IAAIF,KAAK,CAACC,KAAK,CAACE,SAAS,EAAE;QAC3DH,KAAK,CAACI,QAAQ,CAAC,sBAAsB,EAAEG,KAAK,CAAC;MAC/C;IACF,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}