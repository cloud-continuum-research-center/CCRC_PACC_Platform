{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport Chart from 'chart.js/auto';\nexport default {\n  __name: 'GaugeComponent',\n  props: {\n    totalSize: Number,\n    remainingSize: Number\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartCanvas = ref(null);\n    let myChart = null;\n\n    // Chart.js chart configuration\n    const config = {\n      type: 'doughnut',\n      data: {\n        labels: ['Used', 'Free'],\n        datasets: [{\n          data: [0, 0],\n          // Initial dummy data\n          backgroundColor: ['#42A5F5', '#ddd'],\n          borderWidth: 0\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          animateRotate: true,\n          animateScale: false\n        },\n        circumference: 180,\n        rotation: 270\n      }\n    };\n    onMounted(() => {\n      if (chartCanvas.value) {\n        myChart = new Chart(chartCanvas.value, config);\n      }\n    });\n    watch([() => props.totalSize, () => props.remainingSize], newValues => {\n      const [totalSize, remainingSize] = newValues;\n      const usedSize = totalSize - remainingSize;\n      if (myChart) {\n        myChart.data.datasets[0].data = [usedSize, remainingSize];\n        myChart.update();\n      }\n    }, {\n      immediate: true\n    });\n    const __returned__ = {\n      props,\n      chartCanvas,\n      get myChart() {\n        return myChart;\n      },\n      set myChart(v) {\n        myChart = v;\n      },\n      config,\n      ref,\n      onMounted,\n      watch,\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","props","__props","chartCanvas","myChart","config","type","data","labels","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","animation","animateRotate","animateScale","circumference","rotation","value","totalSize","remainingSize","newValues","usedSize","update","immediate"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/GaugeComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"chart-container\">\r\n      <canvas ref=\"chartCanvas\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n\r\n  <script setup>\r\n  import { ref, onMounted, watch, defineProps } from 'vue';\r\n  import Chart from 'chart.js/auto';\r\n\r\n  const props = defineProps({\r\n  totalSize: Number,\r\n  remainingSize: Number,\r\n});\r\n\r\nconst chartCanvas = ref(null);\r\nlet myChart = null;\r\n\r\n// Chart.js chart configuration\r\nconst config = {\r\n  type: 'doughnut',\r\n  data: {\r\n    labels: ['Used', 'Free'],\r\n    datasets: [{\r\n      data: [0, 0], // Initial dummy data\r\n      backgroundColor: ['#42A5F5', '#ddd'],\r\n      borderWidth: 0,\r\n    }]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: {\r\n      animateRotate: true,\r\n      animateScale: false,\r\n    },\r\n    circumference: 180,\r\n    rotation: 270,\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  if (chartCanvas.value) {\r\n    myChart = new Chart(chartCanvas.value, config);\r\n  }\r\n});\r\n\r\nwatch([() => props.totalSize, () => props.remainingSize], (newValues) => {\r\n  const [totalSize, remainingSize] = newValues;\r\n  const usedSize = totalSize - remainingSize;\r\n  if (myChart) {\r\n    myChart.data.datasets[0].data = [usedSize, remainingSize];\r\n    myChart.update();\r\n  }\r\n}, {\r\n  immediate: true,\r\n});\r\n</script>\r\n\r\n<style>\r\n.chart-container {\r\n  position: relative;\r\n  height: 40vh;\r\n  width: 80vw;\r\n}\r\n</style>"],"mappings":"AAQE,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAkB,QAAQ,KAAK;AACxD,OAAOC,KAAK,MAAM,eAAe;;;;;;;;;;;IAEjC,MAAMC,KAAK,GAAGC,OAGd;IAEF,MAAMC,WAAW,GAAGN,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIO,OAAO,GAAG,IAAI;;IAElB;IACA,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACxBC,QAAQ,EAAE,CAAC;UACTF,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAAE;UACdG,eAAe,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;UACpCC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,SAAS,EAAE;UACTC,aAAa,EAAE,IAAI;UACnBC,YAAY,EAAE;QAChB,CAAC;QACDC,aAAa,EAAE,GAAG;QAClBC,QAAQ,EAAE;MACZ;IACF,CAAC;IAEDrB,SAAS,CAAC,MAAM;MACd,IAAIK,WAAW,CAACiB,KAAK,EAAE;QACrBhB,OAAO,GAAG,IAAIJ,KAAK,CAACG,WAAW,CAACiB,KAAK,EAAEf,MAAM,CAAC;MAChD;IACF,CAAC,CAAC;IAEFN,KAAK,CAAC,CAAC,MAAME,KAAK,CAACoB,SAAS,EAAE,MAAMpB,KAAK,CAACqB,aAAa,CAAC,EAAGC,SAAS,IAAK;MACvE,MAAM,CAACF,SAAS,EAAEC,aAAa,CAAC,GAAGC,SAAS;MAC5C,MAAMC,QAAQ,GAAGH,SAAS,GAAGC,aAAa;MAC1C,IAAIlB,OAAO,EAAE;QACXA,OAAO,CAACG,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACF,IAAI,GAAG,CAACiB,QAAQ,EAAEF,aAAa,CAAC;QACzDlB,OAAO,CAACqB,MAAM,CAAC,CAAC;MAClB;IACF,CAAC,EAAE;MACDC,SAAS,EAAE;IACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}