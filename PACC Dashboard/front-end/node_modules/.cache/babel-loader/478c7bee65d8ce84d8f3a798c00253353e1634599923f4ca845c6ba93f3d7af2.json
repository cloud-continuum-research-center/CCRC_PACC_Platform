{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d33b5946\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart-list-widget\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"chart-list-header\"\n}, \"Chart List\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"chart-list-body\"\n};\nconst _hoisted_4 = {\n  class: \"chart-name-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chartNames, (chartName, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      onClick: $event => $setup.selectChart(chartName)\n    }, _toDisplayString(chartName), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","chartNames","chartName","index","key","onClick","$event","selectChart","_hoisted_5"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\ChartList.vue"],"sourcesContent":["<template>\r\n    <div class=\"chart-list-widget\">\r\n      <h4 class=\"chart-list-header\">Chart List</h4>\r\n      <div class=\"chart-list-body\">\r\n        <div class=\"chart-name-list\">\r\n          <ul>\r\n            <li v-for=\"(chartName, index) in chartNames\" :key=\"index\" @click=\"selectChart(chartName)\">\r\n              {{ chartName }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, emit } from 'vue';\r\n  \r\n  const chartNames = ref(['메모리 사용량', '디스크 사용량']); // Example chart names\r\n  const selectChart = (chartName) => {\r\n    emit('chart-selected', chartName); // Emit an event when a chart name is clicked\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.chart-list-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n  width: calc(100% - 10px);\r\n  max-width: 1200px;\r\n}\r\n\r\n.chart-list-header {\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.chart-list-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chart-name-list {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  border-right: 1px solid #ddd;\r\n  flex: 1;\r\n}\r\n\r\n.chart-name-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.chart-name-list li {\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.chart-name-list li:hover,\r\n.chart-name-list li.is-selected {\r\n  background-color: #e8f0f9;\r\n}\r\n\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAA6C;EAAzCD,KAAK,EAAC;AAAmB,GAAC,YAAU;;EACnCA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAiB;mBAJpC;;uBACIE,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAA6C,EAC7CH,mBAAA,CAQM,OARNI,UAQM,GAPJJ,mBAAA,CAMM,OANNK,UAMM,GALJL,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKK,SAAA,QARjBC,WAAA,CAM6CC,MAAA,CAAAC,UAAU,EANvD,CAMwBC,SAAS,EAAEC,KAAK;yBAA5BV,mBAAA,CAEK;MAFyCW,GAAG,EAAED,KAAK;MAAGE,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,WAAW,CAACL,SAAS;wBAClFA,SAAS,wBAP1BM,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}