{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'DatasetSelector',\n  emits: [\"update:modelValue\"],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n    const store = useStore();\n    const datasets = computed(() => store.state.datasets);\n    const selectedDataset = ref({});\n    onMounted(async () => {\n      await store.dispatch(\"fetchDatasets\");\n      if (datasets.value.length > 0) {\n        selectedDataset.value = datasets.value[0]; // Set the first dataset as selected\n        emit(\"update:modelValue\", datasets.value[0].dataset_id); // Emit its dataset_id\n      }\n    });\n    function updateSelectedDataset(dataset) {\n      if (dataset) {\n        selectedDataset.value = dataset;\n        emit(\"update:modelValue\", dataset.dataset_id); // Emit the dataset_id\n      }\n    }\n    const __returned__ = {\n      emit,\n      store,\n      datasets,\n      selectedDataset,\n      updateSelectedDataset,\n      ref,\n      computed,\n      onMounted,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","emit","__emit","store","datasets","state","selectedDataset","dispatch","value","length","dataset_id","updateSelectedDataset","dataset"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/components/DatasetSelector.vue"],"sourcesContent":["<template>\n  <div class=\"dataset-selector-container\">\n    <h2 class=\"dataset-header\">학습 데이터 선택</h2>\n    <div class=\"dataset-content\">\n      <div class=\"dataset-list\">\n        <ul>\n          <li\n            v-for=\"dataset in datasets\"\n            :key=\"dataset.dataset_id\"\n            @click=\"updateSelectedDataset(dataset)\"\n            :class=\"{\n              selected: dataset.dataset_id === selectedDataset.dataset_id,\n            }\"\n          >\n            {{ dataset.name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"dataset-description\">\n        <h3>{{ selectedDataset?.name || \"No dataset selected\" }}</h3>\n        <p>{{ selectedDataset?.description || \"\" }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, defineEmits } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst store = useStore();\nconst datasets = computed(() => store.state.datasets);\nconst selectedDataset = ref({});\n\nonMounted(async () => {\n  await store.dispatch(\"fetchDatasets\");\n  if (datasets.value.length > 0) {\n    selectedDataset.value = datasets.value[0]; // Set the first dataset as selected\n    emit(\"update:modelValue\", datasets.value[0].dataset_id); // Emit its dataset_id\n  }\n});\n\nfunction updateSelectedDataset(dataset) {\n  if (dataset) {\n    selectedDataset.value = dataset;\n    emit(\"update:modelValue\", dataset.dataset_id); // Emit the dataset_id\n  }\n}\n</script>\n\n<style scoped>\n.dataset-selector-container {\n  border: 1px solid #e0e0e0; /* 테두리를 회색으로 설정합니다. */\n  background-color: #fff; /* 배경색을 흰색으로 설정합니다. */\n  border-radius: 12px; /* 테두리의 모서리를 둥글게 처리합니다. */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 그림자를 추가하여 입체감을 줍니다. */\n  display: flex; /* flexbox 레이아웃을 사용하여 자식 요소들을 효율적으로 정렬합니다. */\n  flex-direction: column; /* 자식 요소들을 세로로 정렬합니다. */\n  overflow: hidden; /* 컨테이너의 크기를 벗어나는 내용을 숨깁니다. */\n  margin-top: 30px; /* 위쪽 마진을 추가합니다. */\n}\n\n.dataset-header {\n  text-align: left; /* 텍스트를 왼쪽에 정렬합니다. */\n  padding: 15px 20px; /* 헤더에 내부 여백을 추가합니다. */\n  background: #f8f8f8; /* 헤더 배경색을 연한 회색으로 설정합니다. */\n  font-size: 32px; /* 글꼴 크기를 설정합니다. */\n  font-weight: 600; /* 글꼴 두께를 강조합니다. */\n  color: #333; /* 글꼴 색상을 어두운 회색으로 설정합니다. */\n  border-bottom: 1px solid #ddd; /* 헤더 아래에 경계선을 추가합니다. */\n  margin-bottom: 0px;   /* 마진 0으로 안하면 리스트와 헤더 사이에 붕 뜸*/\n}\n\n.dataset-content {\n  display: flex; /* 데이터셋 리스트와 설명을 가로로 나란히 정렬합니다. */\n}\n\n.dataset-list ul {\n  list-style-type: none; /* 리스트의 기본 스타일을 없앱니다. */\n  padding: 0; /* 내부 여백을 제거합니다. */\n  margin: 0; /* 외부 여백을 제거합니다. */\n  width: 250px; /* 너비를 설정합니다. */\n  border-right: 1px solid #ddd; /* 오른쪽에 경계선을 추가합니다. */\n}\n\n.dataset-list li {\n  padding: 15px 20px; /* 리스트 아이템에 내부 여백을 추가합니다. */\n  cursor: pointer; /* 마우스 커서를 포인터로 변경합니다. */\n  transition: background-color 0.3s; /* 배경색 변경시 트랜지션 효과를 적용합니다. */\n  font-size: 20px; /* 글꼴 크기를 설정합니다. */\n  color: #333; /* 글꼴 색상을 어두운 회색으로 설정합니다. */\n  border-bottom: 1px solid #eee; /* 아래쪽에 경계선을 추가합니다. */\n}\n\n.dataset-list li:hover,\n.dataset-list li.selected {\n  background-color: #e3f2fd; /* 호버 또는 선택된 상태에서 배경색을 변경합니다. */\n}\n\n.dataset-description {\n  padding: 20px; /* 설명 부분에 여백을 추가합니다. */\n  flex-grow: 1; /* 남은 공간을 모두 채웁니다. */\n  background-color: #fafafa; /* 배경색을 연한 회색으로 설정합니다. */\n  border-radius: 0 12px 12px 0; /* 오른쪽 모서리를 둥글게 처리합니다. */\n}\n\n.dataset-description p\n{\n  font-size: 22px; /* 글꼴 크기 */\n  color: #666; /* 글꼴 색상 */\n  margin-bottom: 10px; /* 아래쪽 마진 추가 */\n  line-height: 1.4; /* 줄 간격 설정 */\n\n}\n.dataset-description h3 {\n  margin-top: 0; /* 위쪽 마진 제거 */\n  font-size: 25px; /* 글꼴 크기 */\n  color: #333; /* 글꼴 색상 */\n}\n\n@media (max-width: 768px) {\n  .dataset-selector-container {\n    flex-direction: column; /* 화면 크기가 작을 때 세로로 정렬합니다. */\n  }\n\n  .dataset-list ul {\n    width: auto; /* 너비를 자동으로 조절합니다. */\n    border-right: none; /* 오른쪽 경계선을 제거합니다. */\n  }\n\n  .dataset-list li {\n    border-bottom: none; /* 아래쪽 경계선을 제거합니다. */\n  }\n}\n\n</style>\n"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAsB,QAAQ,KAAK;AAC3D,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;IAE/B,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,QAAQ,GAAGN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,QAAQ,CAAC;IACrD,MAAME,eAAe,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/BE,SAAS,CAAC,YAAY;MACpB,MAAMI,KAAK,CAACI,QAAQ,CAAC,eAAe,CAAC;MACrC,IAAIH,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QAC7BH,eAAe,CAACE,KAAK,GAAGJ,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3CP,IAAI,CAAC,mBAAmB,EAAEG,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IAEF,SAASC,qBAAqBA,CAACC,OAAO,EAAE;MACtC,IAAIA,OAAO,EAAE;QACXN,eAAe,CAACE,KAAK,GAAGI,OAAO;QAC/BX,IAAI,CAAC,mBAAmB,EAAEW,OAAO,CAACF,UAAU,CAAC,CAAC,CAAC;MACjD;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}