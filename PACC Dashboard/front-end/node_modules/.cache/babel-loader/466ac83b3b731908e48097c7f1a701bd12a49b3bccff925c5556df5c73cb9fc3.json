{"ast":null,"code":"import ProjectList from \"./components/ProjectsList.vue\";\nimport { ref, onMounted, watch, computed, onUnmounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  __name: 'Dashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const store = useStore();\n    const intervalId = ref(null);\n    const projectInfo = computed(() => {\n      const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n      return {\n        progress: data.progress || 0,\n        epoch: data.epoch || 0,\n        accuracy: data.accuracy || [],\n        loss: data.loss || [],\n        accuracyList: data.accuracy || [],\n        lossList: data.loss || []\n      };\n    });\n    const charts = ref({\n      lineChart1: null,\n      lineChart2: null,\n      pieChart1: null,\n      pieChart2: null\n    });\n    const setupCharts = () => {\n      clearCharts();\n      initializeCharts();\n    };\n    const clearCharts = () => {\n      Object.keys(charts.value).forEach(key => {\n        if (charts.value[key]) {\n          charts.value[key].destroy();\n          charts.value[key] = null;\n        }\n      });\n    };\n    const initializeCharts = () => {\n      const ctx1 = document.getElementById('lineChart1').getContext('2d');\n      const ctx2 = document.getElementById('lineChart2').getContext('2d');\n      const ctxPie1 = document.getElementById('pieChart1').getContext('2d');\n      const ctxPie2 = document.getElementById('pieChart2').getContext('2d');\n      charts.value.lineChart1 = createLineChart(ctx1, projectInfo.value.accuracy, 'Model Accuracy', 'rgb(75, 192, 192)');\n      charts.value.lineChart2 = createLineChart(ctx2, projectInfo.value.loss, 'Model Loss', 'rgb(255, 99, 132)');\n      charts.value.pieChart1 = createPieChart(ctxPie1, ['Red', 'Blue', 'Yellow'], [300, 50, 100], ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']);\n      charts.value.pieChart2 = createPieChart(ctxPie2, ['Green', 'Purple', 'Orange'], [200, 150, 150], ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']);\n    };\n    onMounted(() => {\n      setupCharts();\n      if (store.state.selectedProjectId) {\n        startFetching(store.state.selectedProjectId);\n      }\n    });\n    watch(() => store.state.selectedProjectId, newId => {\n      if (newId) {\n        startFetching(newId);\n      } else {\n        clearInterval(intervalId.value);\n        intervalId.value = null;\n      }\n    }, {\n      immediate: true\n    });\n    onUnmounted(() => {\n      clearInterval(intervalId.value);\n      clearCharts();\n    });\n    function startFetching(projectId) {\n      clearInterval(intervalId.value);\n      intervalId.value = setInterval(() => {\n        store.dispatch(\"fetchProjectInfoById\", projectId);\n        setupCharts();\n      }, 3000);\n    }\n    function createLineChart(context, data, label, borderColor) {\n      return new Chart(context, {\n        type: 'line',\n        data: {\n          labels: data.map((_, index) => `Epoch ${index + 1}`),\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: borderColor,\n            tension: 0.1\n          }]\n        }\n      });\n    }\n    function createPieChart(context, labels, data, backgroundColor) {\n      return new Chart(context, {\n        type: 'pie',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: data,\n            backgroundColor: backgroundColor\n          }]\n        }\n      });\n    }\n    const __returned__ = {\n      store,\n      intervalId,\n      projectInfo,\n      charts,\n      setupCharts,\n      clearCharts,\n      initializeCharts,\n      startFetching,\n      createLineChart,\n      createPieChart,\n      ProjectList,\n      ref,\n      onMounted,\n      watch,\n      computed,\n      onUnmounted,\n      get useStore() {\n        return useStore;\n      },\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ProjectList","ref","onMounted","watch","computed","onUnmounted","useStore","Chart","registerables","register","store","intervalId","projectInfo","data","state","projectsInfo","selectedProjectId","progress","epoch","accuracy","loss","accuracyList","lossList","charts","lineChart1","lineChart2","pieChart1","pieChart2","setupCharts","clearCharts","initializeCharts","Object","keys","value","forEach","key","destroy","ctx1","document","getElementById","getContext","ctx2","ctxPie1","ctxPie2","createLineChart","createPieChart","startFetching","newId","clearInterval","immediate","projectId","setInterval","dispatch","context","label","borderColor","type","labels","map","_","index","datasets","fill","tension","backgroundColor"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/Dashboard.vue"],"sourcesContent":["\n<template>\n  <div class=\"dashboard\">\n    <div class=\"project-list-container\">\n      <ProjectList />\n    </div>\n    <div class=\"project-info-widget\" v-if=\"projectInfo\">\n    <div class=\"tarining-status-header\">\n    <h4>학습 상태</h4>\n    </div>\n    <p> </p> \n    <p> </p> \n    <p> </p> \n    <p class=\"project-info-highlight\">모델 학습 진행율: {{ projectInfo.progress ? `${projectInfo.progress}%` : '0' }}</p>\n    <p class=\"project-info-highlight epoch\">모델 훈련 횟수: {{ projectInfo.epoch !== undefined ? projectInfo.epoch : '0' }}</p>\n    <p class=\"project-info-highlight accuracy\">모델 정확도: {{ projectInfo.accuracy ? projectInfo.accuracy.toFixed(2) + '%' : '0' }}</p>\n    <p class=\"project-info-highlight loss\">모델 Loss 값: {{ projectInfo.loss ? projectInfo.loss.toFixed(4) : '0' }}</p>\n       \n  </div>\n  </div>\n  <div class=\"project-info-widget-chart\" v-if=\"projectInfo\">\n<canvas id=\"lineChart1\" class=\"canvas-size\"></canvas>\n<canvas id=\"lineChart2\" class=\"canvas-size\"></canvas>\n<canvas id=\"pieChart1\" class=\"canvas-size\"></canvas>\n<canvas id=\"pieChart2\" class=\"canvas-size\"></canvas>\n    </div>\n</template>\n\n\n<script setup>\nimport ProjectList from \"./components/ProjectsList.vue\";\nimport { ref, onMounted, watch, computed, onUnmounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\nconst store = useStore();\nconst intervalId = ref(null);\n\nconst projectInfo = computed(() => {\n  const data = store.state.projectsInfo[store.state.selectedProjectId] || {};\n  return {\n    progress: data.progress || 0,\n    epoch: data.epoch || 0,\n    accuracy: data.accuracy || [],\n    loss: data.loss || [],\n    accuracyList: data.accuracy || [],\n    lossList: data.loss || []\n  };\n});\n\nconst charts = ref({\n  lineChart1: null,\n  lineChart2: null,\n  pieChart1: null,\n  pieChart2: null\n});\n\nconst setupCharts = () => {\n  clearCharts();\n  initializeCharts();\n};\n\nconst clearCharts = () => {\n  Object.keys(charts.value).forEach(key => {\n    if (charts.value[key]) {\n      charts.value[key].destroy();\n      charts.value[key] = null;\n    }\n  });\n};\n\nconst initializeCharts = () => {\n  const ctx1 = document.getElementById('lineChart1').getContext('2d');\n  const ctx2 = document.getElementById('lineChart2').getContext('2d');\n  const ctxPie1 = document.getElementById('pieChart1').getContext('2d');\n  const ctxPie2 = document.getElementById('pieChart2').getContext('2d');\n\n  charts.value.lineChart1 = createLineChart(ctx1, projectInfo.value.accuracy, 'Model Accuracy', 'rgb(75, 192, 192)');\n  charts.value.lineChart2 = createLineChart(ctx2, projectInfo.value.loss, 'Model Loss', 'rgb(255, 99, 132)');\n  charts.value.pieChart1 = createPieChart(ctxPie1, ['Red', 'Blue', 'Yellow'], [300, 50, 100], ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']);\n  charts.value.pieChart2 = createPieChart(ctxPie2, ['Green', 'Purple', 'Orange'], [200, 150, 150], ['rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(255, 159, 64)']);\n};\n\nonMounted(() => {\n  setupCharts();\n  if (store.state.selectedProjectId) {\n    startFetching(store.state.selectedProjectId);\n  }\n});\n\nwatch(() => store.state.selectedProjectId, (newId) => {\n  if (newId) {\n    startFetching(newId);\n  } else {\n    clearInterval(intervalId.value);\n    intervalId.value = null;\n  }\n}, { immediate: true });\n\nonUnmounted(() => {\n  clearInterval(intervalId.value);\n  clearCharts();\n});\n\nfunction startFetching(projectId) {\n  clearInterval(intervalId.value);\n  intervalId.value = setInterval(() => {\n    store.dispatch(\"fetchProjectInfoById\", projectId);\n    setupCharts(); \n  }, 3000);\n}\n\nfunction createLineChart(context, data, label, borderColor) {\n  return new Chart(context, {\n    type: 'line',\n    data: {\n      labels: data.map((_, index) => `Epoch ${index + 1}`),\n      datasets: [{\n        label: label,\n        data: data,\n        fill: false,\n        borderColor: borderColor,\n        tension: 0.1\n      }]\n    }\n  });\n}\n\nfunction createPieChart(context, labels, data, backgroundColor) {\n  return new Chart(context, {\n    type: 'pie',\n    data: {\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: backgroundColor\n      }]\n    }\n  });\n}\n</script>\n\n\n\n<style>\n\n.project-info-widget\n{\n  margin-left: 20px;\n}\n\n.project-info-widget-chart {\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  align-items: flex-start; /* 요소들을 컨테이너의 왼쪽에 정렬 */\n  justify-content: flex-start;\n\n  justify-content: space-around; /* 공간을 균등하게 분배 */\n}\n\n.canvas-size {\n  width: 350px !important; /* 너비 조정 */\n  height: 350px !important; /* 높이 조정 */\n}\n\n.dashboard {\n  display: flex;\n  align-items: flex-start; /* 요소들을 컨테이너의 상단에 정렬 */\n  justify-content: flex-start; /* 요소들을 컨테이너의 왼쪽에서 시작하도록 정렬 */\n  gap: 20px; /* 요소들 사이의 간격 */\n  padding: 20px; /* 대시보드 패딩 */\n  \n}\n\n\n.project-list-container {\n  min-width: 800px; /* 최소 너비 설정 */\n  max-height: 500px; /* 최대 높이 설정 */\n  height: 275px; /* 높이 100%로 설정 */\n\n}\n\n.project-info-widget {\n  flex: 1; /* 유연하게 너비 조정 */\n  flex-grow: 2; /* 컨테이너가 더 많은 공간을 차지하도록 설정 */\n  padding: 20px; \n  margin-top: 0; /* 위쪽 마진 제거 */\n  border: 1px solid #ccc; /* 테두리 설정 */\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 0 25px 30px rgba(0, 0, 0, 0.07);\n  height: 310px;\n}\n\n\n/* 헤더 스타일 */\nh4 {\n  margin-bottom: 20px; /* 여백을 더 줍니다 */\n  font-size: 22px; /* 크기를 키웁니다 */\n  font-weight: 600; /* 조금 더 강조된 두께 */\n  color: #333; /* 색상은 약간 어두운 회색으로 조정 */\n}\n\n/* 단락 스타일 */\np {\n  font-size: 18px; /* 텍스트 크기를 키웁니다 */\n  color: #666; /* 색상은 좀 더 연한 회색으로 조정 */\n  margin-bottom: 10px; /* 단락 사이의 여백을 조정 */\n  line-height: 1.4; /* 줄 간격을 조정하여 가독성을 높입니다 */\n}\n\n\n.project-info-highlight {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: 500; /* 더 강조된 폰트 두께 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #1a237e; /* 진한 파란색으로 변경 */\n}\n\n.progress {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #4caf50; /* 진한 녹색으로 변경 */\n}\n\n.epoch {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #ff9800; /* 주황색으로 변경 */\n}\n\n.accuracy {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #009688; /* 테일 그린색으로 변경 */\n}\n\n.loss {\n  font-size: 20px; /* 크기 변경 */\n  font-weight: bold; /* 볼드체로 변경 */\n  color: #f44336; /* 빨간색으로 변경 */\n}\n\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}