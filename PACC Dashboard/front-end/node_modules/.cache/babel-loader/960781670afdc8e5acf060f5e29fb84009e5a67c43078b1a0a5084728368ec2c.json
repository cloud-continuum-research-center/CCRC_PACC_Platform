{"ast":null,"code":"// Directly declare chartNames as a prop\n\nexport default {\n  __name: 'ChartList',\n  props: {\n    chartNames: {\n      type: Array,\n      default: () => ['Memory Usage', 'Disk Usage'] // Providing default value directly here\n    }\n  },\n  emits: ['chart-selected'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n    const selectChart = chartName => {\n      emit('chart-selected', chartName);\n    };\n    const __returned__ = {\n      emit,\n      selectChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["emit","__emit","selectChart","chartName"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/ChartList.vue"],"sourcesContent":["<template>\r\n    <div class=\"chart-list-widget\">\r\n      <h4 class=\"chart-list-header\">Chart List</h4>\r\n      <div class=\"chart-list-body\">\r\n        <!-- Column for Chart Names -->\r\n        <div class=\"chart-name-list\">\r\n          <ul>\r\n            <li v-for=\"(chartName, index) in chartNames\" :key=\"index\" @click=\"selectChart(chartName)\">\r\n              {{ chartName }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <!-- Column for Chart Display -->\r\n        <div class=\"chart-display\">\r\n          <!-- This is where the selected chart gauge will be displayed -->\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script setup>\r\nimport { defineProps, defineEmits } from 'vue';\r\n\r\n// Directly declare chartNames as a prop\r\ndefineProps({\r\n  chartNames: {\r\n    type: Array,\r\n    default: () => ['Memory Usage', 'Disk Usage'] // Providing default value directly here\r\n  }\r\n});\r\nconst emit = defineEmits(['chart-selected']);\r\n\r\nconst selectChart = (chartName) => {\r\n  emit('chart-selected', chartName);\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.chart-list-widget {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n  width: calc(100% - 10px);\r\n  max-width: 1200px;\r\n}\r\n\r\n.chart-list-header {\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.chart-list-body {\r\n  display: flex;\r\n  flex-direction: row; /* Align children side by side */\r\n}\r\n\r\n.chart-name-list {\r\n  flex: 1; /* Take up half of the space */\r\n  /* ... existing styles ... */\r\n}\r\n\r\n.chart-display {\r\n  flex: 1; /* Take up the other half of the space */\r\n  /* Add styles for the chart display area */\r\n  padding: 16px;\r\n  border-left: 1px solid #ddd; /* Add a border to separate it from the list */\r\n  height: 400px; /* Set a fixed height, or make it consistent with the list */\r\n  overflow-y: auto; /* Allow scrolling if content overflows */\r\n}\r\n\r\n</style>\r\n  "],"mappings":"AAuBA;;;;;;;;;;;;;;;;IAOA,MAAMA,IAAI,GAAGC,MAA+B;IAE5C,MAAMC,WAAW,GAAIC,SAAS,IAAK;MACjCH,IAAI,CAAC,gBAAgB,EAAEG,SAAS,CAAC;IACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}