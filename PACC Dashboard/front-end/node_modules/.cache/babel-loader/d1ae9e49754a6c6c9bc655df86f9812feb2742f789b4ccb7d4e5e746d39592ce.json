{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-319cad69\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"model-selector-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"model-header\"\n}, \"Model Selection\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"model-content\"\n};\nconst _hoisted_4 = {\n  class: \"model-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"model-description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Header title for the model selection \"), _hoisted_2, _createCommentVNode(\" Model list and description container \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.models, model => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: model.model_id,\n      onClick: $event => $setup.updateSelectedModel(model),\n      class: _normalizeClass({\n        selected: model.model_id === $setup.selectedModel.model_id\n      })\n    }, _toDisplayString(model.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($setup.selectedModel?.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.selectedModel?.description), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","models","model","key","model_id","onClick","$event","updateSelectedModel","_normalizeClass","selected","selectedModel","name","_hoisted_5","_hoisted_6","_toDisplayString","description"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\ModelSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"model-selector-container\">\r\n    <!-- Header title for the model selection -->\r\n    <h2 class=\"model-header\">Model Selection</h2>\r\n    <!-- Model list and description container -->\r\n    <div class=\"model-content\">\r\n      <div class=\"model-list\">\r\n        <ul>\r\n          <li\r\n            v-for=\"model in models\"\r\n            :key=\"model.model_id\"\r\n            @click=\"updateSelectedModel(model)\"\r\n            :class=\"{ selected: model.model_id === selectedModel.model_id }\"\r\n          >\r\n            {{ model.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"model-description\">\r\n        <h3>{{ selectedModel?.name }}</h3>\r\n        <p>{{ selectedModel?.description }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, defineEmits } from 'vue';\r\nimport { useStore } from \"vuex\";\r\n\r\nconst emit = defineEmits(['update:modelValue']);\r\n\r\nconst store = useStore();\r\nconst models = computed(() => store.state.models);\r\nconst selectedModel = ref(models.value.length > 0 ? models.value[0].model_id : null);\r\n\r\nonMounted(async () => {\r\n  await store.dispatch('fetchModels');\r\n  // If models are fetched and there is a previously selected model, update it\r\n  if (models.value.length > 0 && selectedModel.value) {\r\n    const modelToSelect = models.value.find(m => m.model_id === selectedModel.value);\r\n    if (modelToSelect) {\r\n      updateSelectedModel(modelToSelect.model_id);\r\n    } else {\r\n      // Otherwise, select the first model by default\r\n      updateSelectedModel(models.value[0].model_id);\r\n    }\r\n  }\r\n});\r\n\r\nfunction updateSelectedModel(model) {\r\n  selectedModel.value = model;\r\n  // Emit the 'update:model' event to the parent component\r\n  emit('update:modelValue', model);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.model-selector-container {\r\n  border: 1px solid #ddd;\r\n  background-color: #fff; /* Set background to white */\r\n  border-radius: 8px; /* 모서리 둥글게  */\r\n  flex-direction: column;\r\n}\r\n.model-header {\r\n  text-align: left;\r\n  padding: 10px 20px;\r\n  background: #ececec;\r\n  margin: 0;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.model-content {\r\n  display: flex;\r\n}\r\n\r\n.model-list ul {\r\n  list-style-type: none; /* Removes the default list styling */\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 250px; /* Set the width of the list */\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n.model-list li {\r\n  padding: 15px 20px; /* Provide padding to each list item */\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #eee; /* Add separation between items */\r\n  transition: background-color 0.3s; /* Smooth transition for background color */\r\n  font-size: 18px; /*폰트 사이즈 조절*/\r\n}\r\n\r\n.model-list li:hover,\r\n.model-list li.selected {\r\n  background-color: #b1f397; /* A light grey background for hover state */\r\n}\r\n\r\n.model-description {\r\n  padding: 20px; /* Give some padding around the description */\r\n  flex-grow: 1; /* Ensure it fills the remaining space */\r\n  border-radius: 0 8px 8px 0; /* Rounded corners on the right side */\r\n}\r\n\r\n.model-description h3 {\r\n  margin-top: 0; /* Remove default margin from the heading */\r\n}\r\n\r\n/* Optional: Add some responsive styling */\r\n@media (max-width: 768px) {\r\n  .model-selector-container {\r\n    flex-direction: column; /* Stack list and description on smaller screens */\r\n  }\r\n\r\n  .model-list ul {\r\n    width: auto; /* List takes full width on smaller screens */\r\n    border-right: none;\r\n  }\r\n\r\n  .model-list li {\r\n    border-bottom: none; /* Remove border when in column layout */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAA0B;gEAEnCC,mBAAA,CAA6C;EAAzCD,KAAK,EAAC;AAAc,GAAC,iBAAe;;EAEnCA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAY;mBAN7B;;EAkBWA,KAAK,EAAC;AAAmB;;uBAjBlCE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,0CAA6C,EAC7CC,UAA6C,EAC7CD,mBAAA,0CAA6C,EAC7CH,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBJL,mBAAA,CAWM,OAXNM,UAWM,GAVJN,mBAAA,CASK,c,kBARHC,mBAAA,CAOKM,SAAA,QAffC,WAAA,CAS4BC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBADdV,mBAAA,CAOK;MALFW,GAAG,EAAED,KAAK,CAACE,QAAQ;MACnBC,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,mBAAmB,CAACL,KAAK;MAChCZ,KAAK,EAZlBkB,eAAA;QAAAC,QAAA,EAYgCP,KAAK,CAACE,QAAQ,KAAKJ,MAAA,CAAAU,aAAa,CAACN;MAAQ;wBAE1DF,KAAK,CAACS,IAAI,gCAdzBC,UAAA;sCAkBMrB,mBAAA,CAGM,OAHNsB,UAGM,GAFJtB,mBAAA,CAAkC,YAAAuB,gBAAA,CAA3Bd,MAAA,CAAAU,aAAa,EAAEC,IAAI,kBAC1BpB,mBAAA,CAAuC,WAAAuB,gBAAA,CAAjCd,MAAA,CAAAU,aAAa,EAAEK,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}