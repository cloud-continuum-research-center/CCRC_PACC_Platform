{"ast":null,"code":"import { ref, onMounted, onUnmounted } from \"vue\";\nimport Chart from \"chart.js/auto\";\nexport default {\n  __name: 'MemoryGaugeComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const chartCanvas = ref(null);\n    let chartInstance = null;\n    onMounted(() => {\n      if (chartCanvas.value) {\n        const context = chartCanvas.value.getContext(\"2d\");\n        chartInstance = new Chart(context, {\n          type: \"doughnut\",\n          data: {\n            labels: [\"Used\", \"Free\"],\n            datasets: [{\n              label: \"Memory Usage\",\n              data: [30, 70],\n              // Example data\n              backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n              hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            circumference: 180,\n            rotation: 270\n          }\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    });\n    const __returned__ = {\n      chartCanvas,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      ref,\n      onMounted,\n      onUnmounted,\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","Chart","chartCanvas","chartInstance","value","context","getContext","type","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","options","responsive","maintainAspectRatio","circumference","rotation","destroy"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/MemoryGaugeComponent.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"memory-gauge\">\r\n      <h2>Memory Usage</h2>\r\n      <GaugeComponent :total-size=\"totalSize\" :remaining-size=\"remainingSize\" />\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport GaugeComponent from './GaugeComponent.vue';\r\n\r\n// Props are defined to accept totalSize and remainingSize from the parent component\r\nconst props = defineProps({\r\n  totalSize: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  remainingSize: {\r\n    type: Number,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst { totalSize, remainingSize } = props;\r\n</script> -->\r\n\r\n<template>\r\n  <div class=\"memory-gauge\">\r\n    <canvas ref=\"chartCanvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from \"vue\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst chartCanvas = ref(null);\r\nlet chartInstance = null;\r\n\r\nonMounted(() => {\r\n  if (chartCanvas.value) {\r\n    const context = chartCanvas.value.getContext(\"2d\");\r\n    chartInstance = new Chart(context, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [\"Used\", \"Free\"],\r\n        datasets: [\r\n          {\r\n            label: \"Memory Usage\",\r\n            data: [30, 70], // Example data\r\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\r\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        circumference: 180,\r\n        rotation: 270,\r\n      },\r\n    });\r\n  }\r\n});\r\nonUnmounted(() => {\r\n  if (chartInstance) {\r\n    chartInstance.destroy();\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.memory-gauge {\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n<!-- <template>\r\n    <div class=\"chart-container\">\r\n      <h2>Doughnut Chart Example</h2>\r\n      <Doughnut :chart-data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { Doughnut } from 'vue3-chart-v2';\r\n  import { reactive } from 'vue';\r\n  \r\n  const chartData = reactive({\r\n    labels: ['Red', 'Blue', 'Yellow'],\r\n    datasets: [\r\n      {\r\n        label: 'My First Dataset',\r\n        data: [300, 50, 100],\r\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\r\n        hoverOffset: 4\r\n      }\r\n    ]\r\n  });\r\n  \r\n  const chartOptions = reactive({\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chart-container {\r\n    width: 40%;\r\n    margin: auto;\r\n  }\r\n  </style>\r\n   -->"],"mappings":"AAkCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,OAAOC,KAAK,MAAM,eAAe;;;;;;;IAEjC,MAAMC,WAAW,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIK,aAAa,GAAG,IAAI;IAExBJ,SAAS,CAAC,MAAM;MACd,IAAIG,WAAW,CAACE,KAAK,EAAE;QACrB,MAAMC,OAAO,GAAGH,WAAW,CAACE,KAAK,CAACE,UAAU,CAAC,IAAI,CAAC;QAClDH,aAAa,GAAG,IAAIF,KAAK,CAACI,OAAO,EAAE;UACjCE,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;YACJC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YACxBC,QAAQ,EAAE,CACR;cACEC,KAAK,EAAE,cAAc;cACrBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAAE;cAChBI,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;cACvCC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;YAC7C,CAAC;UAEL,CAAC;UACDC,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,mBAAmB,EAAE,KAAK;YAC1BC,aAAa,EAAE,GAAG;YAClBC,QAAQ,EAAE;UACZ;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACFlB,WAAW,CAAC,MAAM;MAChB,IAAIG,aAAa,EAAE;QACjBA,aAAa,CAACgB,OAAO,CAAC,CAAC;MACzB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}