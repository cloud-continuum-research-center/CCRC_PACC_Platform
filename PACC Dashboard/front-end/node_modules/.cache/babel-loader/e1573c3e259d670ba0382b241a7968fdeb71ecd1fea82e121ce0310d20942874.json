{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'DatasetSelector',\n  emits: [\"update:modelValue\"],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n    const store = useStore();\n    const datasets = computed(() => store.state.datasets);\n    const selectedDataset = ref({});\n    onMounted(async () => {\n      await store.dispatch(\"fetchDatasets\");\n      if (datasets.value.length > 0) {\n        selectedDataset.value = datasets.value[0]; // Set the first dataset as selected\n        emit(\"update:modelValue\", datasets.value[0].dataset_id); // Emit its dataset_id\n      }\n    });\n    function updateSelectedDataset(dataset) {\n      if (dataset) {\n        selectedDataset.value = dataset;\n        emit(\"update:modelValue\", dataset.dataset_id); // Emit the dataset_id\n      }\n    }\n    const __returned__ = {\n      emit,\n      store,\n      datasets,\n      selectedDataset,\n      updateSelectedDataset,\n      ref,\n      computed,\n      onMounted,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","emit","__emit","store","datasets","state","selectedDataset","dispatch","value","length","dataset_id","updateSelectedDataset","dataset"],"sources":["D:/Git/ITRC_Front/vue-flask-dashboard/front-end/src/views/components/DatasetSelector.vue"],"sourcesContent":["<template>\n  <div class=\"dataset-selector-container\">\n    <h2 class=\"dataset-header\">Dataset Selection</h2>\n    <div class=\"dataset-content\">\n      <div class=\"dataset-list\">\n        <ul>\n          <li\n            v-for=\"dataset in datasets\"\n            :key=\"dataset.dataset_id\"\n            @click=\"updateSelectedDataset(dataset)\"\n            :class=\"{\n              selected: dataset.dataset_id === selectedDataset.dataset_id,\n            }\"\n          >\n            {{ dataset.name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"dataset-description\">\n        <h3>{{ selectedDataset?.name || \"No dataset selected\" }}</h3>\n        <p>{{ selectedDataset?.description || \"\" }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, defineEmits } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst store = useStore();\nconst datasets = computed(() => store.state.datasets);\nconst selectedDataset = ref({});\n\nonMounted(async () => {\n  await store.dispatch(\"fetchDatasets\");\n  if (datasets.value.length > 0) {\n    selectedDataset.value = datasets.value[0]; // Set the first dataset as selected\n    emit(\"update:modelValue\", datasets.value[0].dataset_id); // Emit its dataset_id\n  }\n});\n\nfunction updateSelectedDataset(dataset) {\n  if (dataset) {\n    selectedDataset.value = dataset;\n    emit(\"update:modelValue\", dataset.dataset_id); // Emit the dataset_id\n  }\n}\n</script>\n\n<style scoped>\n.dataset-selector-container {\n  border: 1px solid #ddd;\n  background-color: #fff;\n  border-radius: 8px;\n}\n.dataset-header {\n  text-align: left;\n  padding: 10px 20px;\n  background: #f5f5f5; /* Header background */\n  margin: 0; /* Remove default margin */\n  border-bottom: 1px solid #ddd; /* Separator */\n}\n\n.dataset-content {\n  display: flex;\n}\n\n.dataset-list ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  width: 250px;\n  border-right: 1px solid #ddd;\n}\n\n.dataset-list li {\n  padding: 15px 20px;\n  cursor: pointer;\n  border-bottom: 1px solid #eee;\n  transition: background-color 0.3s;\n}\n\n.dataset-list li:hover,\n.dataset-list li.selected {\n  background-color: #b1f397;\n}\n\n.dataset-description {\n  padding: 20px;\n  flex-grow: 1;\n  border-radius: 0 8px 8px 0;\n}\n\n.dataset-description h3 {\n  margin-top: 0;\n}\n\n@media (max-width: 768px) {\n  .dataset-selector-container {\n    flex-direction: column;\n  }\n\n  .dataset-list ul {\n    width: auto;\n    border-right: none;\n  }\n\n  .dataset-list li {\n    border-bottom: none;\n  }\n}\n</style>\n"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAsB,QAAQ,KAAK;AAC3D,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;IAE/B,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,QAAQ,GAAGN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,QAAQ,CAAC;IACrD,MAAME,eAAe,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/BE,SAAS,CAAC,YAAY;MACpB,MAAMI,KAAK,CAACI,QAAQ,CAAC,eAAe,CAAC;MACrC,IAAIH,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;QAC7BH,eAAe,CAACE,KAAK,GAAGJ,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3CP,IAAI,CAAC,mBAAmB,EAAEG,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IAEF,SAASC,qBAAqBA,CAACC,OAAO,EAAE;MACtC,IAAIA,OAAO,EAAE;QACXN,eAAe,CAACE,KAAK,GAAGI,OAAO;QAC/BX,IAAI,CAAC,mBAAmB,EAAEW,OAAO,CAACF,UAAU,CAAC,CAAC,CAAC;MACjD;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}