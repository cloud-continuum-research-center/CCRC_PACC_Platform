{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport LineChart from './LineChartComponent.vue'; // Assuming your line chart component is named LineChart.vue\n\nexport default {\n  __name: 'GpuTemperatureLineChart',\n  props: {\n    nodeName: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n\n    // Prop to accept nodeName from parent or could be set statically here\n    const props = __props;\n\n    // Compute the GPU temperature data for the specific node\n    const gpuTemperatureData = computed(() => {\n      return store.getters.getNodeGpuTem(props.nodeName);\n    });\n\n    // gpuTemperatureData가 변경될 때마다 콘솔에 출력\n    watch(gpuTemperatureData, newValue => {\n      console.log('Updated GPU Temperature Data:', newValue);\n    });\n    const __returned__ = {\n      store,\n      props,\n      gpuTemperatureData,\n      computed,\n      get useStore() {\n        return useStore;\n      },\n      LineChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","useStore","LineChart","store","props","__props","gpuTemperatureData","getters","getNodeGpuTem","nodeName","watch","newValue","console","log"],"sources":["D:/develop/vue-flask-dashboard/front-end/src/views/components/GpuTemperatureLineChart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <line-chart :node-data=\"gpuTemperatureData\" data-type=\"gpuTemperature\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { computed } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import LineChart from './LineChartComponent.vue';  // Assuming your line chart component is named LineChart.vue\r\n  \r\n  const store = useStore();\r\n  \r\n  // Prop to accept nodeName from parent or could be set statically here\r\n  const props = defineProps({\r\n    nodeName: String,\r\n  });\r\n  \r\n  // Compute the GPU temperature data for the specific node\r\n  const gpuTemperatureData = computed(() => {\r\n    return store.getters.getNodeGpuTem(props.nodeName);\r\n  });\r\n  \r\n\r\n  // gpuTemperatureData가 변경될 때마다 콘솔에 출력\r\nwatch(gpuTemperatureData, (newValue) => {\r\n  console.log('Updated GPU Temperature Data:', newValue);\r\n});\r\n  </script>\r\n  \r\n  <style>\r\n  /* Style as necessary */\r\n  </style>\r\n  "],"mappings":"AAOE,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,SAAS,MAAM,0BAA0B,CAAC,CAAE;;;;;;;;;;;IAEnD,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMG,KAAK,GAAGC,OAEZ;;IAEF;IACA,MAAMC,kBAAkB,GAAGN,QAAQ,CAAC,MAAM;MACxC,OAAOG,KAAK,CAACI,OAAO,CAACC,aAAa,CAACJ,KAAK,CAACK,QAAQ,CAAC;IACpD,CAAC,CAAC;;IAGF;IACFC,KAAK,CAACJ,kBAAkB,EAAGK,QAAQ,IAAK;MACtCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;IACxD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}