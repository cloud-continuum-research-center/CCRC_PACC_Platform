{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"LineChart\"], {\n    \"node-data\": $setup.gpuTemperatureData,\n    \"data-type\": \"gpuTemperature\"\n  }, null, 8 /* PROPS */, [\"node-data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","$setup","gpuTemperatureData"],"sources":["D:\\develop\\vue-flask-dashboard\\front-end\\src\\views\\components\\GpuTemperatureLineChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <line-chart :node-data=\"gpuTemperatureData\" data-type=\"gpuTemperature\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport LineChart from \"./LineChartComponent.vue\"; // Assuming your line chart component is named LineChart.vue\r\n\r\nconst store = useStore();\r\n\r\n// Prop to accept nodeName from parent or could be set statically here\r\nconst props = defineProps({\r\n  nodeName: String,\r\n});\r\n\r\n// Compute the GPU temperature data for the specific node\r\nconst gpuTemperatureData = computed(() => {\r\n  return store.getters.getNodeGpuTem(props.nodeName);\r\n});\r\n\r\n// gpuTemperatureData가 변경될 때마다 콘솔에 출력\r\nwatch(gpuTemperatureData, (newValue) => {\r\n  console.log(\"Updated GPU Temperature Data:\", newValue);\r\n});\r\n</script>\r\n\r\n<style>\r\n/* Style as necessary */\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAyEC,MAAA;IAA5D,WAAS,EAAEA,MAAA,CAAAC,kBAAkB;IAAE,WAAS,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}